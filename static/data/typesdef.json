{"/blog/Ant-Design组件/Modal遮罩双层滚动问题":[[{"text":"var document: Document","docs":"","start":14,"length":8,"line":1,"character":0,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":23,"length":15,"line":1,"character":9,"targetString":"documentElement"},{"text":"(property) ElementCSSInlineStyle.style: CSSStyleDeclaration","docs":"","start":39,"length":5,"line":1,"character":25,"targetString":"style"},{"text":"(property) CSSStyleDeclaration.overflow: string","docs":"","start":45,"length":8,"line":1,"character":31,"targetString":"overflow"},{"text":"var document: Document","docs":"","start":79,"length":8,"line":3,"character":0,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":88,"length":15,"line":3,"character":9,"targetString":"documentElement"},{"text":"(property) ElementCSSInlineStyle.style: CSSStyleDeclaration","docs":"","start":104,"length":5,"line":3,"character":25,"targetString":"style"},{"text":"(property) CSSStyleDeclaration.overflow: string","docs":"","start":110,"length":8,"line":3,"character":31,"targetString":"overflow"}]],"/blog/Ant-Design组件/antd按需加载":[[{"text":"import Button","docs":"","start":23,"length":6,"line":1,"character":9,"targetString":"Button"}],[{"text":"import Button","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Button"}]],"/blog/Ant-Design组件/form中使用checkbox":[[{"text":"const FormCheckbox: ({ children, value, onChange, }: {\n    children: any;\n    value?: boolean | undefined;\n    onChange?: ((value: boolean) => void) | undefined;\n}) => any","docs":"","start":6,"length":12,"line":0,"character":6,"targetString":"FormCheckbox"},{"text":"var children: any","docs":"","start":26,"length":8,"line":1,"character":2,"targetString":"children"},{"text":"var value: boolean | undefined","docs":"","start":38,"length":5,"line":2,"character":2,"targetString":"value"},{"text":"var onChange: ((value: boolean) => void) | undefined","docs":"","start":47,"length":8,"line":3,"character":2,"targetString":"onChange"},{"text":"(property) children: any","docs":"","start":64,"length":8,"line":5,"character":2,"targetString":"children"},{"text":"(property) value?: boolean | undefined","docs":"","start":86,"length":5,"line":6,"character":2,"targetString":"value"},{"text":"(property) onChange?: ((value: boolean) => void) | undefined","docs":"","start":104,"length":8,"line":7,"character":2,"targetString":"onChange"},{"text":"(parameter) value: boolean","docs":"","start":116,"length":5,"line":7,"character":14,"targetString":"value"},{"text":"(JSX attribute) checked: boolean | undefined","docs":"","start":179,"length":7,"line":11,"character":6,"targetString":"checked"},{"text":"var value: boolean | undefined","docs":"","start":188,"length":5,"line":11,"character":15,"targetString":"value"},{"text":"(JSX attribute) onChange: (event: any) => void","docs":"","start":201,"length":8,"line":12,"character":6,"targetString":"onChange"},{"text":"(parameter) event: any","docs":"","start":211,"length":5,"line":12,"character":16,"targetString":"event"},{"text":"var onChange: ((value: boolean) => void) | undefined","docs":"","start":220,"length":8,"line":12,"character":25,"targetString":"onChange"},{"text":"(parameter) event: any","docs":"","start":229,"length":5,"line":12,"character":34,"targetString":"event"},{"text":"var children: any","docs":"","start":267,"length":8,"line":14,"character":7,"targetString":"children"}]],"/blog/Ant-Design组件/form表单验证":[[{"text":"const UrlPrefix: RegExp","docs":"","start":13,"length":9,"line":0,"character":13,"targetString":"UrlPrefix"},{"text":"const UrlValidator: any","docs":"","start":60,"length":12,"line":2,"character":13,"targetString":"UrlValidator"},{"text":"var getFieldValue: any","docs":"","start":90,"length":13,"line":2,"character":43,"targetString":"getFieldValue"},{"text":"(method) validator(rule: any, value: any): Promise<void>","docs":"","start":115,"length":9,"line":3,"character":2,"targetString":"validator"},{"text":"(parameter) rule: any","docs":"","start":125,"length":4,"line":3,"character":12,"targetString":"rule"},{"text":"(parameter) value: any","docs":"","start":131,"length":5,"line":3,"character":18,"targetString":"value"},{"text":"(parameter) value: any","docs":"","start":149,"length":5,"line":4,"character":9,"targetString":"value"},{"text":"const UrlPrefix: RegExp","docs":"","start":158,"length":9,"line":4,"character":18,"targetString":"UrlPrefix"},{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":168,"length":4,"line":4,"character":28,"targetString":"test"},{"text":"(parameter) value: any","docs":"","start":173,"length":5,"line":4,"character":33,"targetString":"value"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":196,"length":7,"line":5,"character":13,"targetString":"Promise"},{"text":"(method) PromiseConstructor.resolve(): Promise<void> (+1 overload)","docs":"Creates a new resolved promise.","start":204,"length":7,"line":5,"character":21,"targetString":"resolve"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":231,"length":7,"line":7,"character":11,"targetString":"Promise"},{"text":"(method) PromiseConstructor.reject<never>(reason?: any): Promise<never>","docs":"Creates a new rejected promise for the provided reason.","start":239,"length":6,"line":7,"character":19,"targetString":"reject"},{"text":"const App: () => any","docs":"","start":274,"length":3,"line":11,"character":6,"targetString":"App"},{"text":"const form: any","docs":"","start":297,"length":4,"line":12,"character":9,"targetString":"form"},{"text":"const onFinish: ({ href }: {\n    href: string;\n}) => void","docs":"","start":328,"length":8,"line":13,"character":8,"targetString":"onFinish"},{"text":"var href: string","docs":"","start":342,"length":4,"line":13,"character":22,"targetString":"href"},{"text":"(property) href: string","docs":"","start":352,"length":4,"line":13,"character":32,"targetString":"href"},{"text":"var console: Console","docs":"","start":377,"length":7,"line":14,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":385,"length":3,"line":14,"character":12,"targetString":"log"},{"text":"var href: string","docs":"","start":389,"length":4,"line":14,"character":16,"targetString":"href"},{"text":"(JSX attribute) form: any","docs":"","start":420,"length":4,"line":17,"character":10,"targetString":"form"},{"text":"const form: any","docs":"","start":426,"length":4,"line":17,"character":16,"targetString":"form"},{"text":"(JSX attribute) onFinish: ({ href }: {\n    href: string;\n}) => void","docs":"","start":432,"length":8,"line":17,"character":22,"targetString":"onFinish"},{"text":"const onFinish: ({ href }: {\n    href: string;\n}) => void","docs":"","start":442,"length":8,"line":17,"character":32,"targetString":"onFinish"},{"text":"(JSX attribute) label: string","docs":"","start":478,"length":5,"line":19,"character":8,"targetString":"label"},{"text":"(JSX attribute) name: string","docs":"","start":497,"length":4,"line":20,"character":8,"targetString":"name"},{"text":"(JSX attribute) initialValue: string","docs":"","start":517,"length":12,"line":21,"character":8,"targetString":"initialValue"},{"text":"(JSX attribute) rules: any[]","docs":"","start":563,"length":5,"line":22,"character":8,"targetString":"rules"},{"text":"(property) required: boolean","docs":"","start":573,"length":8,"line":22,"character":18,"targetString":"required"},{"text":"(property) message: string","docs":"","start":589,"length":7,"line":22,"character":34,"targetString":"message"},{"text":"const UrlValidator: any","docs":"","start":611,"length":12,"line":22,"character":56,"targetString":"UrlValidator"},{"text":"(JSX attribute) autoComplete: string","docs":"","start":649,"length":12,"line":24,"character":15,"targetString":"autoComplete"},{"text":"(JSX attribute) placeholder: string","docs":"","start":668,"length":11,"line":24,"character":34,"targetString":"placeholder"}]],"/blog/Ant-Design组件/table前端分页与后端分页":[[{"text":"(JSX attribute) dataSource: any","docs":"","start":7,"length":10,"line":0,"character":7,"targetString":"dataSource"},{"text":"(JSX attribute) columns: any","docs":"","start":31,"length":7,"line":0,"character":31,"targetString":"columns"}],[{"text":"(JSX attribute) dataSource: any","docs":"","start":9,"length":10,"line":1,"character":2,"targetString":"dataSource"},{"text":"(JSX attribute) columns: any","docs":"","start":35,"length":7,"line":2,"character":2,"targetString":"columns"},{"text":"(JSX attribute) pagination: {\n    pageSize: any;\n    total: any;\n    current: any;\n    onChange: any;\n}","docs":"","start":55,"length":10,"line":3,"character":2,"targetString":"pagination"},{"text":"(property) pageSize: any","docs":"","start":73,"length":8,"line":4,"character":4,"targetString":"pageSize"},{"text":"(property) total: any","docs":"","start":93,"length":5,"line":5,"character":4,"targetString":"total"},{"text":"(property) current: any","docs":"","start":119,"length":7,"line":6,"character":4,"targetString":"current"},{"text":"(property) onChange: any","docs":"","start":141,"length":8,"line":7,"character":4,"targetString":"onChange"}]],"/blog/Ant-Design组件/图片上传":[[{"text":"import Avatar","docs":"","start":32,"length":6,"line":2,"character":9,"targetString":"Avatar"},{"text":"import Input","docs":"","start":40,"length":5,"line":2,"character":17,"targetString":"Input"},{"text":"import message","docs":"","start":47,"length":7,"line":2,"character":24,"targetString":"message"},{"text":"import Upload","docs":"","start":56,"length":6,"line":2,"character":33,"targetString":"Upload"},{"text":"import UploadChangeParam","docs":"","start":86,"length":17,"line":3,"character":9,"targetString":"UploadChangeParam"},{"text":"import UploadFile","docs":"","start":138,"length":10,"line":4,"character":9,"targetString":"UploadFile"},{"text":"import UploadProps","docs":"","start":150,"length":11,"line":4,"character":21,"targetString":"UploadProps"},{"text":"import classnames","docs":"","start":204,"length":10,"line":5,"character":7,"targetString":"classnames"},{"text":"import React","docs":"","start":240,"length":5,"line":6,"character":7,"targetString":"React"},{"text":"import useEffect","docs":"","start":249,"length":9,"line":6,"character":16,"targetString":"useEffect"},{"text":"import useState","docs":"","start":260,"length":8,"line":6,"character":27,"targetString":"useState"},{"text":"import LoadingOutlined","docs":"","start":294,"length":15,"line":8,"character":9,"targetString":"LoadingOutlined"},{"text":"import PlusOutlined","docs":"","start":311,"length":12,"line":8,"character":26,"targetString":"PlusOutlined"},{"text":"import Link","docs":"","start":361,"length":4,"line":10,"character":9,"targetString":"Link"},{"text":"interface ImgUpload","docs":"","start":401,"length":9,"line":12,"character":17,"targetString":"ImgUpload"},{"text":"(property) ImgUpload.className?: string | undefined","docs":"","start":415,"length":9,"line":13,"character":2,"targetString":"className"},{"text":"(property) ImgUpload.action?: string | undefined","docs":"","start":436,"length":6,"line":14,"character":2,"targetString":"action"},{"text":"(property) ImgUpload.value?: string | undefined","docs":"","start":454,"length":5,"line":15,"character":2,"targetString":"value"},{"text":"(property) ImgUpload.onChange?: ((value: string) => void) | undefined","docs":"","start":471,"length":8,"line":16,"character":2,"targetString":"onChange"},{"text":"(parameter) value: string","docs":"","start":483,"length":5,"line":16,"character":14,"targetString":"value"},{"text":"(property) ImgUpload.multiple?: boolean | undefined","docs":"","start":508,"length":8,"line":17,"character":2,"targetString":"multiple"},{"text":"(property) ImgUpload.size?: [number, number] | undefined","docs":"","start":529,"length":4,"line":18,"character":2,"targetString":"size"},{"text":"function beforeUpload(file: File): boolean","docs":"","start":565,"length":12,"line":21,"character":9,"targetString":"beforeUpload"},{"text":"(parameter) file: File","docs":"","start":578,"length":4,"line":21,"character":22,"targetString":"file"},{"text":"interface File","docs":"Provides information about files and allows JavaScript in a web page to access their content.","start":584,"length":4,"line":21,"character":28,"targetString":"File"},{"text":"const isJpgOrPng: boolean","docs":"","start":600,"length":10,"line":22,"character":8,"targetString":"isJpgOrPng"},{"text":"(parameter) file: File","docs":"","start":613,"length":4,"line":22,"character":21,"targetString":"file"},{"text":"(property) Blob.type: string","docs":"","start":618,"length":4,"line":22,"character":26,"targetString":"type"},{"text":"(parameter) file: File","docs":"","start":643,"length":4,"line":22,"character":51,"targetString":"file"},{"text":"(property) Blob.type: string","docs":"","start":648,"length":4,"line":22,"character":56,"targetString":"type"},{"text":"const isJpgOrPng: boolean","docs":"","start":676,"length":10,"line":23,"character":7,"targetString":"isJpgOrPng"},{"text":"import message","docs":"","start":694,"length":7,"line":24,"character":4,"targetString":"message"},{"text":"const isLt2M: boolean","docs":"","start":742,"length":6,"line":26,"character":8,"targetString":"isLt2M"},{"text":"(parameter) file: File","docs":"","start":751,"length":4,"line":26,"character":17,"targetString":"file"},{"text":"(property) Blob.size: number","docs":"","start":756,"length":4,"line":26,"character":22,"targetString":"size"},{"text":"const isLt2M: boolean","docs":"","start":786,"length":6,"line":27,"character":7,"targetString":"isLt2M"},{"text":"import message","docs":"","start":800,"length":7,"line":28,"character":4,"targetString":"message"},{"text":"const isJpgOrPng: boolean","docs":"","start":844,"length":10,"line":30,"character":9,"targetString":"isJpgOrPng"},{"text":"const isLt2M: boolean","docs":"","start":858,"length":6,"line":30,"character":23,"targetString":"isLt2M"},{"text":"const ImgUpload: ({ className, action, value, onChange, multiple, size, }: ImgUpload) => any","docs":"","start":881,"length":9,"line":33,"character":13,"targetString":"ImgUpload"},{"text":"var className: string | undefined","docs":"","start":898,"length":9,"line":34,"character":2,"targetString":"className"},{"text":"var action: string | undefined","docs":"","start":911,"length":6,"line":35,"character":2,"targetString":"action"},{"text":"var value: string | undefined","docs":"","start":921,"length":5,"line":36,"character":2,"targetString":"value"},{"text":"var onChange: ((value: string) => void) | undefined","docs":"","start":930,"length":8,"line":37,"character":2,"targetString":"onChange"},{"text":"var multiple: boolean","docs":"","start":942,"length":8,"line":38,"character":2,"targetString":"multiple"},{"text":"var size: [number, number] | undefined","docs":"","start":962,"length":4,"line":39,"character":2,"targetString":"size"},{"text":"interface ImgUpload","docs":"","start":971,"length":9,"line":40,"character":3,"targetString":"ImgUpload"},{"text":"const loading: any","docs":"","start":996,"length":7,"line":41,"character":9,"targetString":"loading"},{"text":"const setLoading: any","docs":"","start":1005,"length":10,"line":41,"character":18,"targetString":"setLoading"},{"text":"import useState","docs":"","start":1019,"length":8,"line":41,"character":32,"targetString":"useState"},{"text":"const imgUrl: any","docs":"","start":1044,"length":6,"line":42,"character":9,"targetString":"imgUrl"},{"text":"const setImgUrl: any","docs":"","start":1052,"length":9,"line":42,"character":17,"targetString":"setImgUrl"},{"text":"import useState","docs":"","start":1065,"length":8,"line":42,"character":30,"targetString":"useState"},{"text":"var value: string | undefined","docs":"","start":1082,"length":5,"line":42,"character":47,"targetString":"value"},{"text":"import useEffect","docs":"","start":1092,"length":9,"line":44,"character":2,"targetString":"useEffect"},{"text":"const setImgUrl: any","docs":"","start":1114,"length":9,"line":45,"character":4,"targetString":"setImgUrl"},{"text":"var value: string | undefined","docs":"","start":1124,"length":5,"line":45,"character":14,"targetString":"value"},{"text":"var value: string | undefined","docs":"","start":1137,"length":5,"line":46,"character":6,"targetString":"value"},{"text":"const handleChange: (info: any) => void","docs":"","start":1154,"length":12,"line":48,"character":8,"targetString":"handleChange"},{"text":"(parameter) info: any","docs":"","start":1170,"length":4,"line":48,"character":24,"targetString":"info"},{"text":"import UploadChangeParam","docs":"","start":1176,"length":17,"line":48,"character":30,"targetString":"UploadChangeParam"},{"text":"import UploadFile","docs":"","start":1194,"length":10,"line":48,"character":48,"targetString":"UploadFile"},{"text":"var console: Console","docs":"","start":1221,"length":7,"line":49,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":1229,"length":3,"line":49,"character":12,"targetString":"log"},{"text":"(parameter) info: any","docs":"","start":1244,"length":4,"line":49,"character":27,"targetString":"info"},{"text":"(parameter) info: any","docs":"","start":1258,"length":4,"line":50,"character":8,"targetString":"info"},{"text":"const setLoading: any","docs":"","start":1300,"length":10,"line":51,"character":6,"targetString":"setLoading"},{"text":"(parameter) info: any","docs":"","start":1344,"length":4,"line":54,"character":8,"targetString":"info"},{"text":"const setLoading: any","docs":"","start":1381,"length":10,"line":55,"character":6,"targetString":"setLoading"},{"text":"const imageUrl: any","docs":"","start":1411,"length":8,"line":56,"character":12,"targetString":"imageUrl"},{"text":"(parameter) info: any","docs":"","start":1422,"length":4,"line":56,"character":23,"targetString":"info"},{"text":"const setImgUrl: any","docs":"","start":1454,"length":9,"line":57,"character":6,"targetString":"setImgUrl"},{"text":"const imageUrl: any","docs":"","start":1464,"length":8,"line":57,"character":16,"targetString":"imageUrl"},{"text":"var onChange: ((value: string) => void) | undefined","docs":"","start":1480,"length":8,"line":58,"character":6,"targetString":"onChange"},{"text":"var onChange: (value: string) => void","docs":"","start":1492,"length":8,"line":58,"character":18,"targetString":"onChange"},{"text":"const imageUrl: any","docs":"","start":1501,"length":8,"line":58,"character":27,"targetString":"imageUrl"},{"text":"const uploadProps: any","docs":"","start":1530,"length":11,"line":62,"character":8,"targetString":"uploadProps"},{"text":"import UploadProps","docs":"","start":1543,"length":11,"line":62,"character":21,"targetString":"UploadProps"},{"text":"(property) action: string | undefined","docs":"","start":1563,"length":6,"line":63,"character":4,"targetString":"action"},{"text":"(property) multiple: boolean","docs":"","start":1575,"length":8,"line":64,"character":4,"targetString":"multiple"},{"text":"(property) beforeUpload: (file: File) => boolean","docs":"","start":1589,"length":12,"line":65,"character":4,"targetString":"beforeUpload"},{"text":"(property) onChange: (info: any) => void","docs":"","start":1607,"length":8,"line":66,"character":4,"targetString":"onChange"},{"text":"const handleChange: (info: any) => void","docs":"","start":1617,"length":12,"line":66,"character":14,"targetString":"handleChange"},{"text":"import Upload","docs":"","start":1652,"length":6,"line":70,"character":5,"targetString":"Upload"},{"text":"(JSX attribute) listType: string","docs":"","start":1665,"length":8,"line":71,"character":6,"targetString":"listType"},{"text":"(JSX attribute) showUploadList: boolean","docs":"","start":1695,"length":14,"line":72,"character":6,"targetString":"showUploadList"},{"text":"(JSX attribute) className: any","docs":"","start":1724,"length":9,"line":73,"character":6,"targetString":"className"},{"text":"import classnames","docs":"","start":1735,"length":10,"line":73,"character":17,"targetString":"classnames"},{"text":"var className: string | undefined","docs":"","start":1759,"length":9,"line":73,"character":41,"targetString":"className"},{"text":"const uploadProps: any","docs":"","start":1781,"length":11,"line":74,"character":10,"targetString":"uploadProps"},{"text":"const imgUrl: any","docs":"","start":1807,"length":6,"line":76,"character":7,"targetString":"imgUrl"},{"text":"import Avatar","docs":"","start":1827,"length":6,"line":77,"character":9,"targetString":"Avatar"},{"text":"(JSX attribute) className: string","docs":"","start":1834,"length":9,"line":77,"character":16,"targetString":"className"},{"text":"(JSX attribute) shape: string","docs":"","start":1858,"length":5,"line":77,"character":40,"targetString":"shape"},{"text":"(JSX attribute) src: any","docs":"","start":1873,"length":3,"line":77,"character":55,"targetString":"src"},{"text":"const imgUrl: any","docs":"","start":1878,"length":6,"line":77,"character":60,"targetString":"imgUrl"},{"text":"const loading: any","docs":"","start":1926,"length":7,"line":80,"character":11,"targetString":"loading"},{"text":"import LoadingOutlined","docs":"","start":1937,"length":15,"line":80,"character":22,"targetString":"LoadingOutlined"},{"text":"import PlusOutlined","docs":"","start":1959,"length":12,"line":80,"character":44,"targetString":"PlusOutlined"},{"text":"(JSX attribute) style: {\n    marginTop: number;\n}","docs":"","start":1991,"length":5,"line":81,"character":15,"targetString":"style"},{"text":"(property) marginTop: number","docs":"","start":2000,"length":9,"line":81,"character":24,"targetString":"marginTop"},{"text":"var size: [number, number] | undefined","docs":"","start":2038,"length":4,"line":82,"character":11,"targetString":"size"},{"text":"(JSX attribute) style: {\n    marginTop: number;\n}","docs":"","start":2065,"length":5,"line":83,"character":17,"targetString":"style"},{"text":"(property) marginTop: number","docs":"","start":2074,"length":9,"line":83,"character":26,"targetString":"marginTop"},{"text":"var size: [number, number]","docs":"","start":2107,"length":4,"line":84,"character":16,"targetString":"size"},{"text":"var size: [number, number]","docs":"","start":2117,"length":4,"line":84,"character":26,"targetString":"size"},{"text":"import Upload","docs":"","start":2189,"length":6,"line":89,"character":6,"targetString":"Upload"},{"text":"const ImgUploadOrAdd: ({ value, onChange, ...props }: ImgUpload) => any","docs":"","start":2217,"length":14,"line":93,"character":13,"targetString":"ImgUploadOrAdd"},{"text":"var value: string | undefined","docs":"","start":2237,"length":5,"line":93,"character":33,"targetString":"value"},{"text":"var onChange: ((value: string) => void) | undefined","docs":"","start":2244,"length":8,"line":93,"character":40,"targetString":"onChange"},{"text":"var props: {\n    className?: string | undefined;\n    action?: string | undefined;\n    multiple?: boolean | undefined;\n    size?: [number, number] | undefined;\n}","docs":"","start":2257,"length":5,"line":93,"character":53,"targetString":"props"},{"text":"interface ImgUpload","docs":"","start":2266,"length":9,"line":93,"character":62,"targetString":"ImgUpload"},{"text":"const useUrl: any","docs":"","start":2291,"length":6,"line":94,"character":9,"targetString":"useUrl"},{"text":"const setUseUrl: any","docs":"","start":2299,"length":9,"line":94,"character":17,"targetString":"setUseUrl"},{"text":"import useState","docs":"","start":2312,"length":8,"line":94,"character":30,"targetString":"useState"},{"text":"let content: any","docs":"","start":2335,"length":7,"line":96,"character":6,"targetString":"content"},{"text":"const useUrl: any","docs":"","start":2357,"length":6,"line":97,"character":6,"targetString":"useUrl"},{"text":"let content: any","docs":"","start":2371,"length":7,"line":98,"character":4,"targetString":"content"},{"text":"import Input","docs":"","start":2390,"length":5,"line":99,"character":7,"targetString":"Input"},{"text":"(JSX attribute) placeholder: string","docs":"","start":2404,"length":11,"line":100,"character":8,"targetString":"placeholder"},{"text":"(JSX attribute) value: string | undefined","docs":"","start":2437,"length":5,"line":101,"character":8,"targetString":"value"},{"text":"var value: string | undefined","docs":"","start":2444,"length":5,"line":101,"character":15,"targetString":"value"},{"text":"(JSX attribute) onChange: (e: any) => void","docs":"","start":2459,"length":8,"line":102,"character":8,"targetString":"onChange"},{"text":"(parameter) e: any","docs":"","start":2469,"length":1,"line":102,"character":18,"targetString":"e"},{"text":"var onChange: ((value: string) => void) | undefined","docs":"","start":2474,"length":8,"line":102,"character":23,"targetString":"onChange"},{"text":"(parameter) e: any","docs":"","start":2483,"length":1,"line":102,"character":32,"targetString":"e"},{"text":"let content: any","docs":"","start":2532,"length":7,"line":106,"character":4,"targetString":"content"},{"text":"const ImgUpload: ({ className, action, value, onChange, multiple, size, }: ImgUpload) => any","docs":"","start":2543,"length":9,"line":106,"character":15,"targetString":"ImgUpload"},{"text":"var props: {\n    className?: string | undefined;\n    action?: string | undefined;\n    multiple?: boolean | undefined;\n    size?: [number, number] | undefined;\n}","docs":"","start":2557,"length":5,"line":106,"character":29,"targetString":"props"},{"text":"(JSX attribute) ImgUpload.value?: string | undefined","docs":"","start":2564,"length":5,"line":106,"character":36,"targetString":"value"},{"text":"var value: string | undefined","docs":"","start":2571,"length":5,"line":106,"character":43,"targetString":"value"},{"text":"(JSX attribute) ImgUpload.onChange?: ((value: string) => void) | undefined","docs":"","start":2578,"length":8,"line":106,"character":50,"targetString":"onChange"},{"text":"var onChange: ((value: string) => void) | undefined","docs":"","start":2588,"length":8,"line":106,"character":60,"targetString":"onChange"},{"text":"(JSX attribute) className: string","docs":"","start":2626,"length":9,"line":110,"character":9,"targetString":"className"},{"text":"let content: any","docs":"","start":2661,"length":7,"line":111,"character":7,"targetString":"content"},{"text":"import Link","docs":"","start":2677,"length":4,"line":112,"character":7,"targetString":"Link"},{"text":"(JSX attribute) className: string","docs":"","start":2682,"length":9,"line":112,"character":12,"targetString":"className"},{"text":"(JSX attribute) onClick: () => any","docs":"","start":2701,"length":7,"line":112,"character":31,"targetString":"onClick"},{"text":"const setUseUrl: any","docs":"","start":2716,"length":9,"line":112,"character":46,"targetString":"setUseUrl"},{"text":"const useUrl: any","docs":"","start":2727,"length":6,"line":112,"character":57,"targetString":"useUrl"},{"text":"const useUrl: any","docs":"","start":2746,"length":6,"line":113,"character":9,"targetString":"useUrl"},{"text":"import Link","docs":"","start":2791,"length":4,"line":114,"character":8,"targetString":"Link"}]],"/blog/Ant-Design组件/学习antd组件设计":[[{"text":"import classnames","docs":"","start":7,"length":10,"line":0,"character":7,"targetString":"classnames"},{"text":"import ClassValue","docs":"","start":45,"length":10,"line":1,"character":9,"targetString":"ClassValue"},{"text":"const CommonPrefixCls: \"nextpl\"","docs":"","start":89,"length":15,"line":3,"character":6,"targetString":"CommonPrefixCls"},{"text":"const getPrefixCls: (suffixCls?: string | undefined, ...classes: ClassValue[]) => any","docs":"","start":130,"length":12,"line":5,"character":13,"targetString":"getPrefixCls"},{"text":"(parameter) suffixCls: string | undefined","docs":"","start":146,"length":9,"line":5,"character":29,"targetString":"suffixCls"},{"text":"(parameter) classes: any[]","docs":"","start":169,"length":7,"line":5,"character":52,"targetString":"classes"},{"text":"import ClassValue","docs":"","start":178,"length":10,"line":5,"character":61,"targetString":"ClassValue"},{"text":"const currentCls: string","docs":"","start":205,"length":10,"line":6,"character":8,"targetString":"currentCls"},{"text":"(parameter) suffixCls: string | undefined","docs":"","start":218,"length":9,"line":6,"character":21,"targetString":"suffixCls"},{"text":"const CommonPrefixCls: \"nextpl\"","docs":"","start":237,"length":15,"line":7,"character":9,"targetString":"CommonPrefixCls"},{"text":"(parameter) suffixCls: string","docs":"","start":256,"length":9,"line":7,"character":28,"targetString":"suffixCls"},{"text":"const CommonPrefixCls: \"nextpl\"","docs":"","start":274,"length":15,"line":8,"character":6,"targetString":"CommonPrefixCls"},{"text":"import classnames","docs":"","start":299,"length":10,"line":9,"character":9,"targetString":"classnames"},{"text":"const currentCls: string","docs":"","start":310,"length":10,"line":9,"character":20,"targetString":"currentCls"},{"text":"(parameter) classes: any[]","docs":"","start":325,"length":7,"line":9,"character":35,"targetString":"classes"}],[{"text":"import Spin","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Spin"},{"text":"import React","docs":"","start":35,"length":5,"line":1,"character":7,"targetString":"React"},{"text":"import CSSProperties","docs":"","start":44,"length":13,"line":1,"character":16,"targetString":"CSSProperties"},{"text":"interface ListViewProps","docs":"","start":91,"length":13,"line":3,"character":17,"targetString":"ListViewProps"},{"text":"(property) ListViewProps.loading?: boolean | undefined","docs":"","start":109,"length":7,"line":4,"character":2,"targetString":"loading"},{"text":"(property) ListViewProps.data: any","docs":"","start":129,"length":4,"line":5,"character":2,"targetString":"data"},{"text":"(property) ListViewProps.className?: string | undefined","docs":"","start":141,"length":9,"line":6,"character":2,"targetString":"className"},{"text":"(property) ListViewProps.style?: any","docs":"","start":162,"length":5,"line":7,"character":2,"targetString":"style"},{"text":"import CSSProperties","docs":"","start":170,"length":13,"line":7,"character":10,"targetString":"CSSProperties"},{"text":"const ListView: ({ loading, data, className, style, }: ListViewProps) => any","docs":"","start":200,"length":8,"line":10,"character":13,"targetString":"ListView"},{"text":"var loading: boolean | undefined","docs":"","start":216,"length":7,"line":11,"character":2,"targetString":"loading"},{"text":"var data: any","docs":"","start":227,"length":4,"line":12,"character":2,"targetString":"data"},{"text":"var className: string | undefined","docs":"","start":235,"length":9,"line":13,"character":2,"targetString":"className"},{"text":"var style: any","docs":"","start":248,"length":5,"line":14,"character":2,"targetString":"style"},{"text":"interface ListViewProps","docs":"","start":258,"length":13,"line":15,"character":3,"targetString":"ListViewProps"},{"text":"let content: any","docs":"","start":284,"length":7,"line":16,"character":6,"targetString":"content"},{"text":"var data: any","docs":"","start":310,"length":4,"line":17,"character":6,"targetString":"data"},{"text":"let content: any","docs":"","start":322,"length":7,"line":18,"character":4,"targetString":"content"},{"text":"var data: any","docs":"","start":335,"length":4,"line":18,"character":17,"targetString":"data"},{"text":"(JSX attribute) className: any","docs":"","start":368,"length":9,"line":21,"character":9,"targetString":"className"},{"text":"var className: string | undefined","docs":"","start":404,"length":9,"line":21,"character":45,"targetString":"className"},{"text":"(JSX attribute) style: any","docs":"","start":416,"length":5,"line":21,"character":57,"targetString":"style"},{"text":"var style: any","docs":"","start":423,"length":5,"line":21,"character":64,"targetString":"style"},{"text":"import Spin","docs":"","start":438,"length":4,"line":22,"character":7,"targetString":"Spin"},{"text":"(JSX attribute) spinning: boolean | undefined","docs":"","start":443,"length":8,"line":22,"character":12,"targetString":"spinning"},{"text":"var loading: boolean | undefined","docs":"","start":453,"length":7,"line":22,"character":22,"targetString":"loading"},{"text":"let content: any","docs":"","start":463,"length":7,"line":22,"character":32,"targetString":"content"},{"text":"import Spin","docs":"","start":473,"length":4,"line":22,"character":42,"targetString":"Spin"}]],"/blog/Ant-Design组件/重置Modal样式":[[{"text":"(JSX attribute) closable: boolean","docs":"","start":7,"length":8,"line":0,"character":7,"targetString":"closable"},{"text":"(JSX attribute) footer: null","docs":"","start":24,"length":6,"line":0,"character":24,"targetString":"footer"},{"text":"(JSX attribute) destroyOnClose: true","docs":"","start":38,"length":14,"line":0,"character":38,"targetString":"destroyOnClose"},{"text":"(JSX attribute) centered: true","docs":"","start":53,"length":8,"line":0,"character":53,"targetString":"centered"}]],"/blog/ECharts/公共配置项":[[{"text":"(property) tooltip: {\n    formatter: (props: any) => any;\n}","docs":"","start":14,"length":7,"line":1,"character":2,"targetString":"tooltip"},{"text":"(property) formatter: (props: any) => any","docs":"","start":79,"length":9,"line":3,"character":4,"targetString":"formatter"},{"text":"(parameter) props: any","docs":"","start":90,"length":5,"line":3,"character":15,"targetString":"props"},{"text":"const name: any","docs":"","start":115,"length":4,"line":4,"character":14,"targetString":"name"},{"text":"const value: any","docs":"","start":121,"length":5,"line":4,"character":20,"targetString":"value"},{"text":"(parameter) props: any","docs":"","start":131,"length":5,"line":4,"character":30,"targetString":"props"},{"text":"(JSX attribute) className: string","docs":"","start":194,"length":9,"line":6,"character":13,"targetString":"className"},{"text":"(JSX attribute) className: string","docs":"","start":231,"length":9,"line":7,"character":16,"targetString":"className"},{"text":"const name: any","docs":"","start":257,"length":4,"line":7,"character":42,"targetString":"name"},{"text":"(JSX attribute) className: string","docs":"","start":287,"length":9,"line":8,"character":16,"targetString":"className"},{"text":"const value: any","docs":"","start":314,"length":5,"line":8,"character":43,"targetString":"value"}],[{"text":"(property) grid: {\n    left: number;\n    top: number;\n    bottom: number;\n    right: number;\n}","docs":"","start":14,"length":4,"line":1,"character":2,"targetString":"grid"},{"text":"(property) left: number","docs":"","start":26,"length":4,"line":2,"character":4,"targetString":"left"},{"text":"(property) top: number","docs":"","start":40,"length":3,"line":3,"character":4,"targetString":"top"},{"text":"(property) bottom: number","docs":"","start":53,"length":6,"line":4,"character":4,"targetString":"bottom"},{"text":"(property) right: number","docs":"","start":69,"length":5,"line":5,"character":4,"targetString":"right"}],[{"text":"(property) legend: {\n    data: string[];\n    icon: string;\n    itemWidth: number;\n    itemHeight: number;\n    textStyle: {\n        fontSize: number;\n        color: string;\n    };\n    itemGap: number;\n}","docs":"","start":14,"length":6,"line":1,"character":2,"targetString":"legend"},{"text":"(property) data: string[]","docs":"","start":28,"length":4,"line":2,"character":4,"targetString":"data"},{"text":"(property) icon: string","docs":"","start":62,"length":4,"line":3,"character":4,"targetString":"icon"},{"text":"(property) itemWidth: number","docs":"","start":90,"length":9,"line":4,"character":4,"targetString":"itemWidth"},{"text":"(property) itemHeight: number","docs":"","start":118,"length":10,"line":5,"character":4,"targetString":"itemHeight"},{"text":"(property) textStyle: {\n    fontSize: number;\n    color: string;\n}","docs":"","start":147,"length":9,"line":6,"character":4,"targetString":"textStyle"},{"text":"(property) fontSize: number","docs":"","start":185,"length":8,"line":8,"character":6,"targetString":"fontSize"},{"text":"(property) color: string","docs":"","start":205,"length":5,"line":9,"character":6,"targetString":"color"},{"text":"(property) itemGap: number","docs":"","start":243,"length":7,"line":11,"character":4,"targetString":"itemGap"}],[{"text":"(property) xAxis: {\n    type: string;\n    data: string[];\n    boundaryGap: boolean;\n    axisLabel: {\n        color: string;\n    };\n    splitLine: {\n        show: boolean;\n    };\n    axisTick: {\n        show: boolean;\n    };\n    axisLine: {\n        lineStyle: {\n            color: string;\n        };\n    };\n}","docs":"","start":14,"length":5,"line":1,"character":2,"targetString":"xAxis"},{"text":"(property) type: string","docs":"","start":27,"length":4,"line":2,"character":4,"targetString":"type"},{"text":"(property) data: string[]","docs":"","start":81,"length":4,"line":4,"character":4,"targetString":"data"},{"text":"(property) boundaryGap: boolean","docs":"","start":142,"length":11,"line":5,"character":4,"targetString":"boundaryGap"},{"text":"(property) axisLabel: {\n    color: string;\n}","docs":"","start":191,"length":9,"line":7,"character":4,"targetString":"axisLabel"},{"text":"(property) color: string","docs":"","start":210,"length":5,"line":8,"character":6,"targetString":"color"},{"text":"(property) splitLine: {\n    show: boolean;\n}","docs":"","start":253,"length":9,"line":11,"character":4,"targetString":"splitLine"},{"text":"(property) show: boolean","docs":"","start":272,"length":4,"line":12,"character":6,"targetString":"show"},{"text":"(property) axisTick: {\n    show: boolean;\n}","docs":"","start":309,"length":8,"line":15,"character":4,"targetString":"axisTick"},{"text":"(property) show: boolean","docs":"","start":327,"length":4,"line":16,"character":6,"targetString":"show"},{"text":"(property) axisLine: {\n    lineStyle: {\n        color: string;\n    };\n}","docs":"","start":364,"length":8,"line":19,"character":4,"targetString":"axisLine"},{"text":"(property) lineStyle: {\n    color: string;\n}","docs":"","start":382,"length":9,"line":20,"character":6,"targetString":"lineStyle"},{"text":"(property) color: string","docs":"","start":403,"length":5,"line":21,"character":8,"targetString":"color"}],[{"text":"(property) yAxis: {\n    type: string;\n    name: string;\n    minInterval: number;\n    nameTextStyle: {\n        align: string;\n        padding: number[];\n        color: string;\n        fontSize: number;\n        fontWeight: number;\n    };\n    nameGap: number;\n    axisLabel: {\n        color: string;\n        align: string;\n        margin: number;\n        fontSize: number;\n        formatter: (value: any) => string;\n    };\n    splitLine: {\n        ...;\n    };\n    axisTick: {\n        ...;\n    };\n    axisLine: {\n        ...;\n    };\n}[]","docs":"","start":14,"length":5,"line":1,"character":2,"targetString":"yAxis"},{"text":"(property) type: string","docs":"","start":35,"length":4,"line":3,"character":6,"targetString":"type"},{"text":"(property) name: string","docs":"","start":73,"length":4,"line":4,"character":6,"targetString":"name"},{"text":"(property) minInterval: number","docs":"","start":91,"length":11,"line":5,"character":6,"targetString":"minInterval"},{"text":"(property) nameTextStyle: {\n    align: string;\n    padding: number[];\n    color: string;\n    fontSize: number;\n    fontWeight: number;\n}","docs":"","start":135,"length":13,"line":7,"character":6,"targetString":"nameTextStyle"},{"text":"(property) align: string","docs":"","start":160,"length":5,"line":8,"character":8,"targetString":"align"},{"text":"(property) padding: number[]","docs":"","start":183,"length":7,"line":9,"character":8,"targetString":"padding"},{"text":"(property) color: string","docs":"","start":216,"length":5,"line":10,"character":8,"targetString":"color"},{"text":"(property) fontSize: number","docs":"","start":242,"length":8,"line":11,"character":8,"targetString":"fontSize"},{"text":"(property) fontWeight: number","docs":"","start":264,"length":10,"line":12,"character":8,"targetString":"fontWeight"},{"text":"(property) nameGap: number","docs":"","start":321,"length":7,"line":15,"character":6,"targetString":"nameGap"},{"text":"(property) axisLabel: {\n    color: string;\n    align: string;\n    margin: number;\n    fontSize: number;\n    formatter: (value: any) => string;\n}","docs":"","start":357,"length":9,"line":17,"character":6,"targetString":"axisLabel"},{"text":"(property) color: string","docs":"","start":378,"length":5,"line":18,"character":8,"targetString":"color"},{"text":"(property) align: string","docs":"","start":404,"length":5,"line":19,"character":8,"targetString":"align"},{"text":"(property) margin: number","docs":"","start":427,"length":6,"line":20,"character":8,"targetString":"margin"},{"text":"(property) fontSize: number","docs":"","start":447,"length":8,"line":21,"character":8,"targetString":"fontSize"},{"text":"(property) formatter: (value: any) => string","docs":"","start":490,"length":9,"line":23,"character":8,"targetString":"formatter"},{"text":"(parameter) value: any","docs":"","start":501,"length":5,"line":23,"character":19,"targetString":"value"},{"text":"(parameter) value: any","docs":"","start":514,"length":5,"line":23,"character":32,"targetString":"value"},{"text":"(property) splitLine: {\n    show: boolean;\n}","docs":"","start":554,"length":9,"line":26,"character":6,"targetString":"splitLine"},{"text":"(property) show: boolean","docs":"","start":575,"length":4,"line":27,"character":8,"targetString":"show"},{"text":"(property) axisTick: {\n    show: boolean;\n}","docs":"","start":618,"length":8,"line":30,"character":6,"targetString":"axisTick"},{"text":"(property) show: boolean","docs":"","start":638,"length":4,"line":31,"character":8,"targetString":"show"},{"text":"(property) axisLine: {\n    show: boolean;\n}","docs":"","start":681,"length":8,"line":34,"character":6,"targetString":"axisLine"},{"text":"(property) show: boolean","docs":"","start":701,"length":4,"line":35,"character":8,"targetString":"show"}]],"/blog/ECharts/图表实例初始化和更新逻辑":[[{"text":"let chart: any","docs":"","start":4,"length":5,"line":0,"character":4,"targetString":"chart"},{"text":"let chart: any","docs":"","start":17,"length":5,"line":1,"character":0,"targetString":"chart"},{"text":"let chart: any","docs":"","start":91,"length":5,"line":2,"character":0,"targetString":"chart"}],[{"text":"let idBase: number","docs":"","start":4,"length":6,"line":0,"character":4,"targetString":"idBase"},{"text":"var Date: DateConstructor\nnew () => Date (+4 overloads)","docs":"","start":26,"length":4,"line":0,"character":26,"targetString":"Date"},{"text":"const DOM_ATTRIBUTE_KEY: \"_echarts_instance_\"","docs":"","start":57,"length":17,"line":1,"character":6,"targetString":"DOM_ATTRIBUTE_KEY"},{"text":"const instances: {\n    [id: string]: any;\n}","docs":"","start":128,"length":9,"line":2,"character":6,"targetString":"instances"},{"text":"(parameter) id: string","docs":"","start":142,"length":2,"line":2,"character":20,"targetString":"id"},{"text":"function init(dom: HTMLElement): any","docs":"","start":202,"length":4,"line":4,"character":16,"targetString":"init"},{"text":"(parameter) dom: HTMLElement","docs":"","start":207,"length":3,"line":4,"character":21,"targetString":"dom"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":212,"length":11,"line":4,"character":26,"targetString":"HTMLElement"},{"text":"const existInstance: any","docs":"","start":248,"length":13,"line":5,"character":8,"targetString":"existInstance"},{"text":"const instances: {\n    [id: string]: any;\n}","docs":"","start":264,"length":9,"line":5,"character":24,"targetString":"instances"},{"text":"(parameter) dom: HTMLElement","docs":"","start":274,"length":3,"line":5,"character":34,"targetString":"dom"},{"text":"(method) Element.getAttribute(qualifiedName: string): string | null","docs":"Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.","start":278,"length":12,"line":5,"character":38,"targetString":"getAttribute"},{"text":"const DOM_ATTRIBUTE_KEY: \"_echarts_instance_\"","docs":"","start":291,"length":17,"line":5,"character":51,"targetString":"DOM_ATTRIBUTE_KEY"},{"text":"const existInstance: any","docs":"","start":317,"length":13,"line":6,"character":6,"targetString":"existInstance"},{"text":"const existInstance: any","docs":"","start":345,"length":13,"line":7,"character":11,"targetString":"existInstance"},{"text":"const chart: any","docs":"","start":390,"length":5,"line":10,"character":8,"targetString":"chart"},{"text":"(parameter) dom: HTMLElement","docs":"","start":410,"length":3,"line":10,"character":28,"targetString":"dom"},{"text":"const chart: any","docs":"","start":417,"length":5,"line":11,"character":2,"targetString":"chart"},{"text":"let idBase: number","docs":"","start":436,"length":6,"line":11,"character":21,"targetString":"idBase"},{"text":"const instances: {\n    [id: string]: any;\n}","docs":"","start":447,"length":9,"line":12,"character":2,"targetString":"instances"},{"text":"const chart: any","docs":"","start":457,"length":5,"line":12,"character":12,"targetString":"chart"},{"text":"const chart: any","docs":"","start":469,"length":5,"line":12,"character":24,"targetString":"chart"},{"text":"(parameter) dom: HTMLElement","docs":"","start":501,"length":3,"line":13,"character":2,"targetString":"dom"},{"text":"(method) Element.setAttribute(qualifiedName: string, value: string): void","docs":"Sets the value of element's first attribute whose qualified name is qualifiedName to value.","start":505,"length":12,"line":13,"character":6,"targetString":"setAttribute"},{"text":"const DOM_ATTRIBUTE_KEY: \"_echarts_instance_\"","docs":"","start":518,"length":17,"line":13,"character":19,"targetString":"DOM_ATTRIBUTE_KEY"},{"text":"const chart: any","docs":"","start":537,"length":5,"line":13,"character":38,"targetString":"chart"},{"text":"const chart: any","docs":"","start":578,"length":5,"line":15,"character":9,"targetString":"chart"}],[{"text":"(property) series: {\n    data: number[];\n}[]","docs":"","start":20,"length":6,"line":1,"character":2,"targetString":"series"},{"text":"(property) data: number[]","docs":"","start":42,"length":4,"line":3,"character":6,"targetString":"data"},{"text":"(property) series: {\n    data: number[];\n}[]","docs":"","start":106,"length":6,"line":9,"character":2,"targetString":"series"},{"text":"(property) data: number[]","docs":"","start":128,"length":4,"line":11,"character":6,"targetString":"data"}],[{"text":"function setOption<Opt extends any>(option: Opt): void","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"setOption"},{"text":"(type parameter) Opt in setOption<Opt extends any>(option: Opt): void","docs":"","start":19,"length":3,"line":0,"character":19,"targetString":"Opt"},{"text":"(parameter) option: Opt extends any","docs":"","start":46,"length":6,"line":0,"character":46,"targetString":"option"},{"text":"(type parameter) Opt in setOption<Opt extends any>(option: Opt): void","docs":"","start":54,"length":3,"line":0,"character":54,"targetString":"Opt"},{"text":"(parameter) option: Opt extends any","docs":"","start":198,"length":6,"line":7,"character":30,"targetString":"option"}],[{"text":"function clone<T extends unknown>(source: T): T","docs":"","start":16,"length":5,"line":0,"character":16,"targetString":"clone"},{"text":"(type parameter) T in clone<T extends unknown>(source: T): T","docs":"","start":22,"length":1,"line":0,"character":22,"targetString":"T"},{"text":"(parameter) source: T extends unknown","docs":"","start":37,"length":6,"line":0,"character":37,"targetString":"source"},{"text":"(type parameter) T in clone<T extends unknown>(source: T): T","docs":"","start":45,"length":1,"line":0,"character":45,"targetString":"T"},{"text":"(type parameter) T in clone<T extends unknown>(source: T): T","docs":"","start":49,"length":1,"line":0,"character":49,"targetString":"T"},{"text":"(parameter) source: T extends unknown","docs":"","start":59,"length":6,"line":1,"character":6,"targetString":"source"},{"text":"(parameter) source: T extends unknown","docs":"","start":84,"length":6,"line":1,"character":31,"targetString":"source"},{"text":"(parameter) source: T extends unknown","docs":"","start":118,"length":6,"line":2,"character":11,"targetString":"source"},{"text":"let result: any","docs":"","start":136,"length":6,"line":5,"character":6,"targetString":"result"},{"text":"let key: Extract<keyof T, string>","docs":"","start":166,"length":3,"line":6,"character":11,"targetString":"key"},{"text":"(parameter) source: T extends unknown","docs":"","start":173,"length":6,"line":6,"character":18,"targetString":"source"},{"text":"(parameter) source: T extends unknown","docs":"","start":191,"length":6,"line":7,"character":8,"targetString":"source"},{"text":"let key: Extract<keyof T, string>","docs":"","start":213,"length":3,"line":7,"character":30,"targetString":"key"},{"text":"let result: any","docs":"","start":227,"length":6,"line":8,"character":6,"targetString":"result"},{"text":"let key: Extract<keyof T, string>","docs":"","start":234,"length":3,"line":8,"character":13,"targetString":"key"},{"text":"function clone<T[Extract<keyof T, string>]>(source: T[Extract<keyof T, string>]): T[Extract<keyof T, string>]","docs":"","start":241,"length":5,"line":8,"character":20,"targetString":"clone"},{"text":"(parameter) source: T extends unknown","docs":"","start":247,"length":6,"line":8,"character":26,"targetString":"source"},{"text":"let key: Extract<keyof T, string>","docs":"","start":254,"length":3,"line":8,"character":33,"targetString":"key"},{"text":"let result: any","docs":"","start":280,"length":6,"line":12,"character":9,"targetString":"result"}]],"/blog/Github-API/RestFul-v3":[[{"text":"type Commit = {\n    message: string;\n    content: string;\n    sha?: string | undefined;\n}","docs":"","start":5,"length":6,"line":0,"character":5,"targetString":"Commit"},{"text":"(property) message: string","docs":"","start":18,"length":7,"line":1,"character":2,"targetString":"message"},{"text":"(property) content: string","docs":"","start":36,"length":7,"line":2,"character":2,"targetString":"content"},{"text":"(property) sha?: string | undefined","docs":"","start":54,"length":3,"line":3,"character":2,"targetString":"sha"}],[{"text":"type Commit = {\n    message: string;\n    sha: string;\n}","docs":"","start":5,"length":6,"line":0,"character":5,"targetString":"Commit"},{"text":"(property) message: string","docs":"","start":18,"length":7,"line":1,"character":2,"targetString":"message"},{"text":"(property) sha: string","docs":"","start":36,"length":3,"line":2,"character":2,"targetString":"sha"}],[{"text":"const getContentTree: (repo: any, root?: {\n    path: string;\n    type: string;\n}) => Promise<{\n    path: string;\n    type: string;\n}>","docs":"","start":13,"length":14,"line":0,"character":13,"targetString":"getContentTree"},{"text":"(parameter) repo: any","docs":"","start":40,"length":4,"line":1,"character":2,"targetString":"repo"},{"text":"(parameter) root: {\n    path: string;\n    type: string;\n}","docs":"","start":48,"length":4,"line":2,"character":2,"targetString":"root"},{"text":"(property) path: string","docs":"","start":57,"length":4,"line":2,"character":11,"targetString":"path"},{"text":"(property) type: string","docs":"","start":67,"length":4,"line":2,"character":21,"targetString":"type"},{"text":"(parameter) root: {\n    path: string;\n    type: string;\n}","docs":"","start":94,"length":4,"line":4,"character":6,"targetString":"root"},{"text":"(property) type: string","docs":"","start":99,"length":4,"line":4,"character":11,"targetString":"type"},{"text":"const children: any","docs":"","start":127,"length":8,"line":5,"character":10,"targetString":"children"},{"text":"(parameter) repo: any","docs":"","start":203,"length":4,"line":6,"character":50,"targetString":"repo"},{"text":"(parameter) root: {\n    path: string;\n    type: string;\n}","docs":"","start":220,"length":4,"line":6,"character":67,"targetString":"root"},{"text":"(property) path: string","docs":"","start":225,"length":4,"line":6,"character":72,"targetString":"path"},{"text":"(parameter) root: {\n    path: string;\n    type: string;\n}","docs":"","start":242,"length":4,"line":8,"character":4,"targetString":"root"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":264,"length":7,"line":8,"character":26,"targetString":"Promise"},{"text":"(method) PromiseConstructor.all<unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown>(values: readonly [unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown]): Promise<[unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown]> (+10 overloads)","docs":"Creates a Promise that is resolved with an array of results when all of the provided Promises\r\nresolve, or rejected when any Promise is rejected.","start":272,"length":3,"line":8,"character":34,"targetString":"all"},{"text":"const children: any","docs":"","start":283,"length":8,"line":9,"character":6,"targetString":"children"},{"text":"(parameter) node: any","docs":"","start":296,"length":4,"line":9,"character":19,"targetString":"node"},{"text":"const getContentTree: (repo: any, root?: {\n    path: string;\n    type: string;\n}) => Promise<{\n    path: string;\n    type: string;\n}>","docs":"","start":304,"length":14,"line":9,"character":27,"targetString":"getContentTree"},{"text":"(parameter) repo: any","docs":"","start":319,"length":4,"line":9,"character":42,"targetString":"repo"},{"text":"(parameter) node: any","docs":"","start":325,"length":4,"line":9,"character":48,"targetString":"node"},{"text":"(parameter) root: {\n    path: string;\n    type: string;\n}","docs":"","start":351,"length":4,"line":12,"character":9,"targetString":"root"}]],"/blog/Github-API/使用Action自动化发布Pages":[[{"text":"const name: void","docs":"","start":148,"length":4,"line":10,"character":8,"targetString":"name"},{"text":"const name: void","docs":"","start":210,"length":4,"line":13,"character":8,"targetString":"name"},{"text":"const name: void","docs":"","start":264,"length":4,"line":16,"character":8,"targetString":"name"},{"text":"const name: void","docs":"","start":313,"length":4,"line":19,"character":8,"targetString":"name"}]],"/blog/Github-API/使用github-issue api做评论系统":[[{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":0,"length":5,"line":0,"character":0,"targetString":"fetch"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":89,"length":4,"line":1,"character":82,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":94,"length":3,"line":1,"character":87,"targetString":"now"},{"text":"(property) RequestInit.headers?: HeadersInit | undefined","docs":"A Headers object, an object literal, or an array of two-item arrays to set request's headers.","start":111,"length":7,"line":3,"character":4,"targetString":"headers"},{"text":"(property) Authorization: string","docs":"","start":128,"length":13,"line":4,"character":6,"targetString":"Authorization"},{"text":"(method) Promise<Response>.then<any, never>(onfulfilled?: ((value: Response) => any) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<any>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":178,"length":4,"line":7,"character":2,"targetString":"then"},{"text":"(parameter) res: Response","docs":"","start":183,"length":3,"line":7,"character":7,"targetString":"res"},{"text":"(parameter) res: Response","docs":"","start":190,"length":3,"line":7,"character":14,"targetString":"res"},{"text":"(method) Body.json(): Promise<any>","docs":"","start":194,"length":4,"line":7,"character":18,"targetString":"json"}],[{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":0,"length":5,"line":0,"character":0,"targetString":"fetch"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":89,"length":4,"line":1,"character":82,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":94,"length":3,"line":1,"character":87,"targetString":"now"},{"text":"(property) RequestInit.method?: string | undefined","docs":"A string to set request's method.","start":111,"length":6,"line":3,"character":4,"targetString":"method"},{"text":"(property) RequestInit.body?: BodyInit | null | undefined","docs":"A BodyInit object or null to set request's body.","start":131,"length":4,"line":4,"character":4,"targetString":"body"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":137,"length":4,"line":4,"character":10,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":142,"length":9,"line":4,"character":15,"targetString":"stringify"},{"text":"(property) body: string","docs":"","start":160,"length":4,"line":5,"character":6,"targetString":"body"},{"text":"(property) RequestInit.headers?: HeadersInit | undefined","docs":"A Headers object, an object literal, or an array of two-item arrays to set request's headers.","start":195,"length":7,"line":7,"character":4,"targetString":"headers"},{"text":"(property) Authorization: string","docs":"","start":212,"length":13,"line":8,"character":6,"targetString":"Authorization"}],[{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":0,"length":5,"line":0,"character":0,"targetString":"fetch"},{"text":"(property) RequestInit.method?: string | undefined","docs":"A string to set request's method.","start":30,"length":6,"line":1,"character":2,"targetString":"method"},{"text":"(property) RequestInit.headers?: HeadersInit | undefined","docs":"A Headers object, an object literal, or an array of two-item arrays to set request's headers.","start":50,"length":7,"line":2,"character":2,"targetString":"headers"},{"text":"(property) Authorization: string","docs":"","start":65,"length":13,"line":3,"character":4,"targetString":"Authorization"}]],"/blog/Git版本控制/设置用户名":[[],[{"text":"namespace global","docs":"","start":13,"length":6,"line":0,"character":13,"targetString":"global"},{"text":"namespace global","docs":"","start":54,"length":6,"line":1,"character":13,"targetString":"global"}],[]],"/blog/Haskell基础/Haskell与JS":[[{"text":"var Array: ArrayConstructor","docs":"","start":0,"length":5,"line":0,"character":0,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<number, number>(iterable: Iterable<number> | ArrayLike<number>, mapfn: (v: number, k: number) => number, thisArg?: any): number[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":6,"length":4,"line":0,"character":6,"targetString":"from"},{"text":"(parameter) x: number","docs":"","start":22,"length":1,"line":0,"character":22,"targetString":"x"},{"text":"(parameter) x: number","docs":"","start":27,"length":1,"line":0,"character":27,"targetString":"x"}],[{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":0,"length":7,"line":0,"character":0,"targetString":"Promise"},{"text":"(method) PromiseConstructor.resolve<number>(value: number | PromiseLike<number>): Promise<number> (+1 overload)","docs":"Creates a new resolved promise for the provided value.","start":8,"length":7,"line":0,"character":8,"targetString":"resolve"},{"text":"(method) Promise<number>.then<number, never>(onfulfilled?: ((value: number) => number | PromiseLike<number>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":21,"length":4,"line":0,"character":21,"targetString":"then"},{"text":"(parameter) x: number","docs":"","start":26,"length":1,"line":0,"character":26,"targetString":"x"},{"text":"(parameter) x: number","docs":"","start":31,"length":1,"line":0,"character":31,"targetString":"x"}],[{"text":"const test: Promise<number>","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"test"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":13,"length":7,"line":0,"character":13,"targetString":"Promise"},{"text":"(method) PromiseConstructor.resolve<number>(value: number | PromiseLike<number>): Promise<number> (+1 overload)","docs":"Creates a new resolved promise for the provided value.","start":21,"length":7,"line":0,"character":21,"targetString":"resolve"},{"text":"const result: () => Promise<number>","docs":"","start":41,"length":6,"line":2,"character":6,"targetString":"result"},{"text":"const value: number","docs":"","start":72,"length":5,"line":3,"character":8,"targetString":"value"},{"text":"const test: Promise<number>","docs":"","start":86,"length":4,"line":3,"character":22,"targetString":"test"},{"text":"const value: number","docs":"","start":100,"length":5,"line":4,"character":9,"targetString":"value"}]],"/blog/Haskell基础/函数式设计":[[{"text":"const fn: (a: any) => any","docs":"","start":6,"length":2,"line":0,"character":6,"targetString":"fn"},{"text":"(parameter) a: any","docs":"","start":11,"length":1,"line":0,"character":11,"targetString":"a"},{"text":"(parameter) a: any","docs":"","start":16,"length":1,"line":0,"character":16,"targetString":"a"}],[{"text":"import op","docs":"","start":7,"length":2,"line":0,"character":7,"targetString":"op"},{"text":"const fn: (a: any) => any","docs":"","start":41,"length":2,"line":3,"character":6,"targetString":"fn"},{"text":"(parameter) a: any","docs":"","start":46,"length":1,"line":3,"character":11,"targetString":"a"},{"text":"import op","docs":"","start":51,"length":2,"line":3,"character":16,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":54,"length":1,"line":3,"character":19,"targetString":"a"}],[{"text":"const fn: (op: any, a: any) => any","docs":"","start":6,"length":2,"line":0,"character":6,"targetString":"fn"},{"text":"(parameter) op: any","docs":"","start":12,"length":2,"line":0,"character":12,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":16,"length":1,"line":0,"character":16,"targetString":"a"},{"text":"(parameter) op: any","docs":"","start":22,"length":2,"line":0,"character":22,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":25,"length":1,"line":0,"character":25,"targetString":"a"}],[{"text":"const pure: (fn: any) => (op: any) => (a: any) => any","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"pure"},{"text":"(parameter) fn: any","docs":"","start":13,"length":2,"line":0,"character":13,"targetString":"fn"},{"text":"(parameter) op: any","docs":"","start":19,"length":2,"line":0,"character":19,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":25,"length":1,"line":0,"character":25,"targetString":"a"},{"text":"(parameter) fn: any","docs":"","start":30,"length":2,"line":0,"character":30,"targetString":"fn"},{"text":"(parameter) op: any","docs":"","start":33,"length":2,"line":0,"character":33,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":37,"length":1,"line":0,"character":37,"targetString":"a"},{"text":"const func: (op: any) => (a: any) => any","docs":"","start":47,"length":4,"line":2,"character":6,"targetString":"func"},{"text":"const pure: (fn: any) => (op: any) => (a: any) => any","docs":"","start":54,"length":4,"line":2,"character":13,"targetString":"pure"},{"text":"(parameter) op: any","docs":"","start":60,"length":2,"line":2,"character":19,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":64,"length":1,"line":2,"character":23,"targetString":"a"},{"text":"(parameter) op: any","docs":"","start":70,"length":2,"line":2,"character":29,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":73,"length":1,"line":2,"character":32,"targetString":"a"},{"text":"const fn: (a: any) => any","docs":"","start":84,"length":2,"line":4,"character":6,"targetString":"fn"},{"text":"const func: (op: any) => (a: any) => any","docs":"","start":89,"length":4,"line":4,"character":11,"targetString":"func"}],[{"text":"const fmap: (join: any) => (func: any) => any","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"fmap"},{"text":"(parameter) join: any","docs":"","start":13,"length":4,"line":0,"character":13,"targetString":"join"},{"text":"(parameter) func: any","docs":"","start":21,"length":4,"line":0,"character":21,"targetString":"func"},{"text":"(parameter) join: any","docs":"","start":34,"length":4,"line":0,"character":34,"targetString":"join"},{"text":"(parameter) func: any","docs":"","start":39,"length":4,"line":0,"character":39,"targetString":"func"},{"text":"const func2: (func: any) => any","docs":"","start":53,"length":5,"line":2,"character":6,"targetString":"func2"},{"text":"const fmap: (join: any) => (func: any) => any","docs":"","start":61,"length":4,"line":2,"character":14,"targetString":"fmap"},{"text":"(parameter) func: any","docs":"","start":66,"length":4,"line":2,"character":19,"targetString":"func"},{"text":"(parameter) op: any","docs":"","start":75,"length":2,"line":2,"character":28,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":79,"length":1,"line":2,"character":32,"targetString":"a"},{"text":"(parameter) func: any","docs":"","start":85,"length":4,"line":2,"character":38,"targetString":"func"},{"text":"(parameter) op: any","docs":"","start":90,"length":2,"line":2,"character":43,"targetString":"op"},{"text":"(parameter) a: any","docs":"","start":94,"length":1,"line":2,"character":47,"targetString":"a"},{"text":"(parameter) a: any","docs":"","start":98,"length":1,"line":2,"character":51,"targetString":"a"},{"text":"const fn: any","docs":"","start":109,"length":2,"line":4,"character":6,"targetString":"fn"},{"text":"const func2: (func: any) => any","docs":"","start":114,"length":5,"line":4,"character":11,"targetString":"func2"}]],"/blog/Nextjs服务端渲染/Nextjs自动静态优化存在的问题":[[{"text":"const isProd: boolean","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"isProd"},{"text":"(property) assetPrefix: string","docs":"","start":75,"length":11,"line":3,"character":2,"targetString":"assetPrefix"},{"text":"const isProd: boolean","docs":"","start":88,"length":6,"line":3,"character":15,"targetString":"isProd"}]],"/blog/Nextjs服务端渲染/api路由拦截":[[{"text":"import NextApiRequest","docs":"","start":38,"length":14,"line":2,"character":9,"targetString":"NextApiRequest"},{"text":"import NextApiResponse","docs":"","start":54,"length":15,"line":2,"character":25,"targetString":"NextApiResponse"},{"text":"const config: {\n    api: {\n        bodyParser: {\n            sizeLimit: string;\n        };\n    };\n}","docs":"","start":99,"length":6,"line":4,"character":13,"targetString":"config"},{"text":"(property) api: {\n    bodyParser: {\n        sizeLimit: string;\n    };\n}","docs":"","start":112,"length":3,"line":5,"character":2,"targetString":"api"},{"text":"(property) bodyParser: {\n    sizeLimit: string;\n}","docs":"","start":123,"length":10,"line":6,"character":4,"targetString":"bodyParser"},{"text":"(property) sizeLimit: string","docs":"","start":143,"length":9,"line":7,"character":6,"targetString":"sizeLimit"},{"text":"(parameter) req: any","docs":"","start":232,"length":3,"line":16,"character":22,"targetString":"req"},{"text":"import NextApiRequest","docs":"","start":237,"length":14,"line":16,"character":27,"targetString":"NextApiRequest"},{"text":"(parameter) res: any","docs":"","start":253,"length":3,"line":16,"character":43,"targetString":"res"},{"text":"import NextApiResponse","docs":"","start":258,"length":15,"line":16,"character":48,"targetString":"NextApiResponse"},{"text":"const apiRes: any","docs":"","start":298,"length":6,"line":18,"character":10,"targetString":"apiRes"},{"text":"(property) url: any","docs":"","start":327,"length":3,"line":19,"character":6,"targetString":"url"},{"text":"(parameter) req: any","docs":"","start":332,"length":3,"line":19,"character":11,"targetString":"req"},{"text":"(property) method: any","docs":"","start":347,"length":6,"line":20,"character":6,"targetString":"method"},{"text":"(parameter) req: any","docs":"","start":355,"length":3,"line":20,"character":14,"targetString":"req"},{"text":"(property) data: any","docs":"","start":380,"length":4,"line":21,"character":6,"targetString":"data"},{"text":"(parameter) req: any","docs":"","start":386,"length":3,"line":21,"character":12,"targetString":"req"},{"text":"const data: any","docs":"","start":415,"length":4,"line":23,"character":12,"targetString":"data"},{"text":"const apiRes: any","docs":"","start":424,"length":6,"line":23,"character":21,"targetString":"apiRes"},{"text":"(parameter) res: any","docs":"","start":436,"length":3,"line":24,"character":4,"targetString":"res"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":444,"length":4,"line":24,"character":12,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":449,"length":9,"line":24,"character":17,"targetString":"stringify"},{"text":"const data: any","docs":"","start":459,"length":4,"line":24,"character":27,"targetString":"data"},{"text":"(local var) error: unknown","docs":"","start":478,"length":5,"line":25,"character":11,"targetString":"error"},{"text":"(parameter) res: any","docs":"","start":491,"length":3,"line":26,"character":4,"targetString":"res"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":499,"length":4,"line":26,"character":12,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":504,"length":9,"line":26,"character":17,"targetString":"stringify"},{"text":"(local var) error: unknown","docs":"","start":514,"length":5,"line":26,"character":27,"targetString":"error"}]],"/blog/Nextjs服务端渲染/nextjs微服务原理":[[{"text":"(method) rewrites(): Promise<{\n    source: string;\n    destination: string;\n}[]>","docs":"","start":27,"length":8,"line":1,"character":8,"targetString":"rewrites"},{"text":"(property) source: string","docs":"","start":69,"length":6,"line":4,"character":8,"targetString":"source"},{"text":"(property) destination: string","docs":"","start":91,"length":11,"line":5,"character":8,"targetString":"destination"},{"text":"(property) source: string","docs":"","start":150,"length":6,"line":8,"character":8,"targetString":"source"},{"text":"(property) destination: string","docs":"","start":172,"length":11,"line":9,"character":8,"targetString":"destination"}]],"/blog/Nextjs服务端渲染/proxy服务":[[{"text":"import axios","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"axios"},{"text":"import AxiosResponse","docs":"","start":16,"length":13,"line":0,"character":16,"targetString":"AxiosResponse"},{"text":"const toQueryStr: (obj: any) => string","docs":"","start":59,"length":10,"line":2,"character":13,"targetString":"toQueryStr"},{"text":"(parameter) obj: any","docs":"","start":73,"length":3,"line":2,"character":27,"targetString":"obj"},{"text":"var URLSearchParams: new (init?: string | string[][] | Record<string, string> | URLSearchParams | undefined) => URLSearchParams","docs":"","start":90,"length":15,"line":2,"character":44,"targetString":"URLSearchParams"},{"text":"(parameter) obj: any","docs":"","start":106,"length":3,"line":2,"character":60,"targetString":"obj"},{"text":"(method) URLSearchParams.toString(): string","docs":"Returns a string containing a query string suitable for use in a URL. Does not include the question mark.","start":111,"length":8,"line":2,"character":65,"targetString":"toString"},{"text":"const appendParams: (url: string, params?: object | undefined) => string","docs":"","start":135,"length":12,"line":3,"character":13,"targetString":"appendParams"},{"text":"(parameter) url: string","docs":"","start":151,"length":3,"line":3,"character":29,"targetString":"url"},{"text":"(parameter) params: object | undefined","docs":"","start":164,"length":6,"line":3,"character":42,"targetString":"params"},{"text":"(parameter) url: string","docs":"","start":192,"length":3,"line":4,"character":6,"targetString":"url"},{"text":"(parameter) params: object | undefined","docs":"","start":199,"length":6,"line":4,"character":13,"targetString":"params"},{"text":"(parameter) url: string","docs":"","start":217,"length":3,"line":5,"character":8,"targetString":"url"},{"text":"(method) String.indexOf(searchString: string, position?: number | undefined): number","docs":"Returns the position of the first occurrence of a substring.","start":221,"length":7,"line":5,"character":12,"targetString":"indexOf"},{"text":"(parameter) url: string","docs":"","start":260,"length":3,"line":6,"character":16,"targetString":"url"},{"text":"const toQueryStr: (obj: any) => string","docs":"","start":267,"length":10,"line":6,"character":23,"targetString":"toQueryStr"},{"text":"(parameter) params: object","docs":"","start":278,"length":6,"line":6,"character":34,"targetString":"params"},{"text":"(parameter) url: string","docs":"","start":317,"length":3,"line":8,"character":16,"targetString":"url"},{"text":"const toQueryStr: (obj: any) => string","docs":"","start":324,"length":10,"line":8,"character":23,"targetString":"toQueryStr"},{"text":"(parameter) params: object","docs":"","start":335,"length":6,"line":8,"character":34,"targetString":"params"},{"text":"(parameter) url: string","docs":"","start":364,"length":3,"line":11,"character":9,"targetString":"url"},{"text":"const join: (base: string, path: string) => string","docs":"","start":384,"length":4,"line":14,"character":13,"targetString":"join"},{"text":"(parameter) base: string","docs":"","start":392,"length":4,"line":14,"character":21,"targetString":"base"},{"text":"(parameter) path: string","docs":"","start":406,"length":4,"line":14,"character":35,"targetString":"path"},{"text":"(parameter) base: string","docs":"","start":431,"length":4,"line":15,"character":6,"targetString":"base"},{"text":"(parameter) path: string","docs":"","start":439,"length":4,"line":15,"character":14,"targetString":"path"},{"text":"(parameter) base: string","docs":"","start":451,"length":4,"line":16,"character":4,"targetString":"base"},{"text":"(parameter) base: string","docs":"","start":458,"length":4,"line":16,"character":11,"targetString":"base"},{"text":"(method) String.replace(searchValue: {\n    [Symbol.replace](string: string, replaceValue: string): string;\n}, replaceValue: string): string (+3 overloads)","docs":"Replaces first match with string or all matches with RegExp.","start":463,"length":7,"line":16,"character":16,"targetString":"replace"},{"text":"(parameter) path: string","docs":"","start":486,"length":4,"line":17,"character":4,"targetString":"path"},{"text":"(parameter) path: string","docs":"","start":493,"length":4,"line":17,"character":11,"targetString":"path"},{"text":"(method) String.replace(searchValue: {\n    [Symbol.replace](string: string, replaceValue: string): string;\n}, replaceValue: string): string (+3 overloads)","docs":"Replaces first match with string or all matches with RegExp.","start":498,"length":7,"line":17,"character":16,"targetString":"replace"},{"text":"(parameter) base: string","docs":"","start":531,"length":4,"line":18,"character":14,"targetString":"base"},{"text":"(parameter) path: string","docs":"","start":539,"length":4,"line":18,"character":22,"targetString":"path"},{"text":"(parameter) base: string","docs":"","start":559,"length":4,"line":20,"character":9,"targetString":"base"},{"text":"(parameter) path: string","docs":"","start":567,"length":4,"line":20,"character":17,"targetString":"path"},{"text":"interface RequestProxyOptions","docs":"","start":592,"length":19,"line":23,"character":17,"targetString":"RequestProxyOptions"},{"text":"(property) RequestProxyOptions.baseUrl?: string | undefined","docs":"","start":616,"length":7,"line":24,"character":2,"targetString":"baseUrl"},{"text":"(property) RequestProxyOptions.url: string","docs":"","start":635,"length":3,"line":25,"character":2,"targetString":"url"},{"text":"(property) RequestProxyOptions.params?: object | undefined","docs":"","start":649,"length":6,"line":26,"character":2,"targetString":"params"},{"text":"(property) RequestProxyOptions.method?: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\" | undefined","docs":"","start":667,"length":6,"line":27,"character":2,"targetString":"method"},{"text":"(property) RequestProxyOptions.data?: any","docs":"","start":743,"length":4,"line":28,"character":2,"targetString":"data"},{"text":"const requestProxy: any","docs":"","start":770,"length":12,"line":31,"character":13,"targetString":"requestProxy"},{"text":"(property) baseUrl: any","docs":"","start":799,"length":7,"line":32,"character":2,"targetString":"baseUrl"},{"text":"(property) url: any","docs":"","start":810,"length":3,"line":33,"character":2,"targetString":"url"},{"text":"(property) params: any","docs":"","start":817,"length":6,"line":34,"character":2,"targetString":"params"},{"text":"(property) method: any","docs":"","start":827,"length":6,"line":35,"character":2,"targetString":"method"},{"text":"(property) data: any","docs":"","start":845,"length":4,"line":36,"character":2,"targetString":"data"},{"text":"const Promise: any","docs":"","start":876,"length":7,"line":37,"character":25,"targetString":"Promise"},{"text":"import AxiosResponse","docs":"","start":884,"length":13,"line":37,"character":33,"targetString":"AxiosResponse"}],[{"text":"import axios","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"axios"},{"text":"import NextApiRequest","docs":"","start":35,"length":14,"line":1,"character":9,"targetString":"NextApiRequest"},{"text":"import NextApiResponse","docs":"","start":51,"length":15,"line":1,"character":25,"targetString":"NextApiResponse"},{"text":"import parse","docs":"","start":90,"length":5,"line":2,"character":9,"targetString":"parse"},{"text":"(parameter) req: any","docs":"","start":132,"length":3,"line":4,"character":22,"targetString":"req"},{"text":"import NextApiRequest","docs":"","start":137,"length":14,"line":4,"character":27,"targetString":"NextApiRequest"},{"text":"(parameter) res: any","docs":"","start":153,"length":3,"line":4,"character":43,"targetString":"res"},{"text":"import NextApiResponse","docs":"","start":158,"length":15,"line":4,"character":48,"targetString":"NextApiResponse"},{"text":"const url: string","docs":"","start":188,"length":3,"line":5,"character":8,"targetString":"url"},{"text":"(parameter) req: any","docs":"","start":194,"length":3,"line":5,"character":14,"targetString":"req"},{"text":"const method: any","docs":"","start":227,"length":6,"line":6,"character":8,"targetString":"method"},{"text":"(parameter) req: any","docs":"","start":236,"length":3,"line":6,"character":17,"targetString":"req"},{"text":"const body: any","docs":"","start":262,"length":4,"line":7,"character":8,"targetString":"body"},{"text":"(parameter) req: any","docs":"","start":269,"length":3,"line":7,"character":15,"targetString":"req"},{"text":"const headers: any","docs":"","start":286,"length":7,"line":8,"character":8,"targetString":"headers"},{"text":"(parameter) req: any","docs":"","start":297,"length":3,"line":8,"character":19,"targetString":"req"},{"text":"const headers: any","docs":"","start":326,"length":7,"line":10,"character":2,"targetString":"headers"},{"text":"import parse","docs":"","start":341,"length":5,"line":10,"character":17,"targetString":"parse"},{"text":"const url: string","docs":"","start":347,"length":3,"line":10,"character":23,"targetString":"url"},{"text":"const apiRes: any","docs":"","start":376,"length":6,"line":13,"character":10,"targetString":"apiRes"},{"text":"import axios","docs":"","start":391,"length":5,"line":13,"character":25,"targetString":"axios"},{"text":"(property) url: string","docs":"","start":405,"length":3,"line":14,"character":6,"targetString":"url"},{"text":"(property) data: any","docs":"","start":416,"length":4,"line":15,"character":6,"targetString":"data"},{"text":"const body: any","docs":"","start":422,"length":4,"line":15,"character":12,"targetString":"body"},{"text":"(property) method: any","docs":"","start":434,"length":6,"line":16,"character":6,"targetString":"method"},{"text":"const method: any","docs":"","start":442,"length":6,"line":16,"character":14,"targetString":"method"},{"text":"(property) headers: any","docs":"","start":456,"length":7,"line":17,"character":6,"targetString":"headers"},{"text":"(parameter) res: any","docs":"","start":477,"length":3,"line":20,"character":4,"targetString":"res"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":485,"length":4,"line":20,"character":12,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":490,"length":9,"line":20,"character":17,"targetString":"stringify"},{"text":"const apiRes: any","docs":"","start":500,"length":6,"line":20,"character":27,"targetString":"apiRes"},{"text":"(local var) error: unknown","docs":"","start":525,"length":5,"line":21,"character":11,"targetString":"error"},{"text":"(parameter) res: any","docs":"","start":538,"length":3,"line":22,"character":4,"targetString":"res"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":546,"length":4,"line":22,"character":12,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":551,"length":9,"line":22,"character":17,"targetString":"stringify"},{"text":"(local var) error: unknown","docs":"","start":561,"length":5,"line":22,"character":27,"targetString":"error"}]],"/blog/Nextjs服务端渲染/ssr项目架构注意与优化":[[{"text":"const getServerSideProps: (ctx: any) => Promise<{\n    props: {\n        seoDataFullPublic: Response;\n        seoDataPublic: Response;\n        data: Response;\n    };\n}>","docs":"","start":13,"length":18,"line":0,"character":13,"targetString":"getServerSideProps"},{"text":"(parameter) ctx: any","docs":"","start":40,"length":3,"line":0,"character":40,"targetString":"ctx"},{"text":"const cookie: any","docs":"","start":57,"length":6,"line":1,"character":8,"targetString":"cookie"},{"text":"(parameter) ctx: any","docs":"","start":66,"length":3,"line":1,"character":17,"targetString":"ctx"},{"text":"const seoDataFullPublic: Response","docs":"","start":93,"length":17,"line":2,"character":8,"targetString":"seoDataFullPublic"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":119,"length":5,"line":2,"character":34,"targetString":"fetch"},{"text":"const seoDataPublic: Response","docs":"","start":145,"length":13,"line":3,"character":8,"targetString":"seoDataPublic"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":167,"length":5,"line":3,"character":30,"targetString":"fetch"},{"text":"(property) RequestInit.headers?: HeadersInit | undefined","docs":"A Headers object, an object literal, or an array of two-item arrays to set request's headers.","start":191,"length":7,"line":4,"character":4,"targetString":"headers"},{"text":"(property) cookie: any","docs":"","start":202,"length":6,"line":4,"character":15,"targetString":"cookie"},{"text":"const data: Response","docs":"","start":225,"length":4,"line":6,"character":8,"targetString":"data"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":238,"length":5,"line":6,"character":21,"targetString":"fetch"},{"text":"(property) RequestInit.headers?: HeadersInit | undefined","docs":"A Headers object, an object literal, or an array of two-item arrays to set request's headers.","start":262,"length":7,"line":7,"character":4,"targetString":"headers"},{"text":"(property) cookie: any","docs":"","start":273,"length":6,"line":7,"character":15,"targetString":"cookie"},{"text":"(property) props: {\n    seoDataFullPublic: Response;\n    seoDataPublic: Response;\n    data: Response;\n}","docs":"","start":303,"length":5,"line":10,"character":4,"targetString":"props"},{"text":"(property) seoDataFullPublic: Response","docs":"","start":318,"length":17,"line":11,"character":6,"targetString":"seoDataFullPublic"},{"text":"(property) seoDataPublic: Response","docs":"","start":343,"length":13,"line":12,"character":6,"targetString":"seoDataPublic"},{"text":"(property) data: Response","docs":"","start":364,"length":4,"line":13,"character":6,"targetString":"data"},{"text":"var seoDataFullPublic: any","docs":"","start":402,"length":17,"line":18,"character":18,"targetString":"seoDataFullPublic"},{"text":"var seoDataPublic: any","docs":"","start":421,"length":13,"line":18,"character":37,"targetString":"seoDataPublic"},{"text":"var data: any","docs":"","start":436,"length":4,"line":18,"character":52,"targetString":"data"},{"text":"var seoDataFullPublic: any","docs":"","start":474,"length":17,"line":21,"character":7,"targetString":"seoDataFullPublic"},{"text":"var seoDataPublic: any","docs":"","start":500,"length":13,"line":22,"character":7,"targetString":"seoDataPublic"},{"text":"var data: any","docs":"","start":522,"length":4,"line":23,"character":7,"targetString":"data"}],[{"text":"const getServerSideProps: (ctx: any) => Promise<{\n    props: {\n        seoDataFullPublic: Response;\n        seoDataPublic: Response;\n    };\n}>","docs":"","start":13,"length":18,"line":0,"character":13,"targetString":"getServerSideProps"},{"text":"(parameter) ctx: any","docs":"","start":40,"length":3,"line":0,"character":40,"targetString":"ctx"},{"text":"const seoDataFullPublic: Response","docs":"","start":57,"length":17,"line":1,"character":8,"targetString":"seoDataFullPublic"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":83,"length":5,"line":1,"character":34,"targetString":"fetch"},{"text":"const seoDataPublic: Response","docs":"","start":109,"length":13,"line":2,"character":8,"targetString":"seoDataPublic"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":131,"length":5,"line":2,"character":30,"targetString":"fetch"},{"text":"(property) props: {\n    seoDataFullPublic: Response;\n    seoDataPublic: Response;\n}","docs":"","start":164,"length":5,"line":4,"character":4,"targetString":"props"},{"text":"(property) seoDataFullPublic: Response","docs":"","start":179,"length":17,"line":5,"character":6,"targetString":"seoDataFullPublic"},{"text":"(property) seoDataPublic: Response","docs":"","start":204,"length":13,"line":6,"character":6,"targetString":"seoDataPublic"},{"text":"var seoDataFullPublic: any","docs":"","start":251,"length":17,"line":11,"character":18,"targetString":"seoDataFullPublic"},{"text":"var seoDataPublic: any","docs":"","start":270,"length":13,"line":11,"character":37,"targetString":"seoDataPublic"},{"text":"const seoData: any","docs":"","start":301,"length":7,"line":12,"character":9,"targetString":"seoData"},{"text":"const setSeoData: any","docs":"","start":310,"length":10,"line":12,"character":18,"targetString":"setSeoData"},{"text":"var seoDataPublic: any","docs":"","start":333,"length":13,"line":12,"character":41,"targetString":"seoDataPublic"},{"text":"const data: any","docs":"","start":357,"length":4,"line":13,"character":9,"targetString":"data"},{"text":"const setData: any","docs":"","start":363,"length":7,"line":13,"character":15,"targetString":"setData"},{"text":"const token: string | null","docs":"","start":416,"length":5,"line":16,"character":10,"targetString":"token"},{"text":"var localStorage: Storage","docs":"","start":424,"length":12,"line":16,"character":18,"targetString":"localStorage"},{"text":"(method) Storage.getItem(key: string): string | null","docs":"Returns the current value associated with the given key, or null if the given key does not exist.","start":437,"length":7,"line":16,"character":31,"targetString":"getItem"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":458,"length":5,"line":17,"character":4,"targetString":"fetch"},{"text":"(property) RequestInit.headers?: HeadersInit | undefined","docs":"A Headers object, an object literal, or an array of two-item arrays to set request's headers.","start":484,"length":7,"line":18,"character":6,"targetString":"headers"},{"text":"(property) Authorization: string | null","docs":"","start":495,"length":13,"line":18,"character":17,"targetString":"Authorization"},{"text":"const token: string | null","docs":"","start":510,"length":5,"line":18,"character":32,"targetString":"token"},{"text":"(method) Promise<Response>.then<Response, never>(onfulfilled?: ((value: Response) => Response | PromiseLike<Response>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<...>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":526,"length":4,"line":19,"character":7,"targetString":"then"},{"text":"const setSeoData: any","docs":"","start":531,"length":10,"line":19,"character":12,"targetString":"setSeoData"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":547,"length":5,"line":20,"character":4,"targetString":"fetch"},{"text":"(property) RequestInit.headers?: HeadersInit | undefined","docs":"A Headers object, an object literal, or an array of two-item arrays to set request's headers.","start":573,"length":7,"line":21,"character":6,"targetString":"headers"},{"text":"(property) Authorization: string | null","docs":"","start":584,"length":13,"line":21,"character":17,"targetString":"Authorization"},{"text":"const token: string | null","docs":"","start":599,"length":5,"line":21,"character":32,"targetString":"token"},{"text":"(method) Promise<Response>.then<Response, never>(onfulfilled?: ((value: Response) => Response | PromiseLike<Response>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<...>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":615,"length":4,"line":22,"character":7,"targetString":"then"},{"text":"const setData: any","docs":"","start":620,"length":7,"line":22,"character":12,"targetString":"setData"},{"text":"var seoDataFullPublic: any","docs":"","start":664,"length":17,"line":27,"character":7,"targetString":"seoDataFullPublic"},{"text":"const seoData: any","docs":"","start":690,"length":7,"line":28,"character":7,"targetString":"seoData"},{"text":"const data: any","docs":"","start":706,"length":4,"line":29,"character":7,"targetString":"data"}],[{"text":"const getServerSideProps: () => Promise<{\n    props: {\n        seoDataFullPublic: Response;\n        seoDataPublic: Response;\n    };\n}>","docs":"","start":13,"length":18,"line":0,"character":13,"targetString":"getServerSideProps"},{"text":"const seoDataFullPublic: Response","docs":"","start":56,"length":17,"line":1,"character":8,"targetString":"seoDataFullPublic"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":82,"length":5,"line":1,"character":34,"targetString":"fetch"},{"text":"const seoDataPublic: Response","docs":"","start":108,"length":13,"line":2,"character":8,"targetString":"seoDataPublic"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":130,"length":5,"line":2,"character":30,"targetString":"fetch"},{"text":"(property) props: {\n    seoDataFullPublic: Response;\n    seoDataPublic: Response;\n}","docs":"","start":163,"length":5,"line":4,"character":4,"targetString":"props"},{"text":"(property) seoDataFullPublic: Response","docs":"","start":178,"length":17,"line":5,"character":6,"targetString":"seoDataFullPublic"},{"text":"(property) seoDataPublic: Response","docs":"","start":203,"length":13,"line":6,"character":6,"targetString":"seoDataPublic"},{"text":"var seoDataFullPublic: any","docs":"","start":250,"length":17,"line":11,"character":18,"targetString":"seoDataFullPublic"},{"text":"var seoDataPublic: any","docs":"","start":269,"length":13,"line":11,"character":37,"targetString":"seoDataPublic"},{"text":"const result1: any","docs":"","start":340,"length":7,"line":13,"character":9,"targetString":"result1"},{"text":"const loading1: any","docs":"","start":349,"length":8,"line":13,"character":18,"targetString":"loading1"},{"text":"const refresh1: any","docs":"","start":359,"length":8,"line":13,"character":28,"targetString":"refresh1"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":391,"length":5,"line":14,"character":10,"targetString":"fetch"},{"text":"var seoDataPublic: any","docs":"","start":414,"length":13,"line":15,"character":4,"targetString":"seoDataPublic"},{"text":"const result2: any","docs":"","start":485,"length":7,"line":18,"character":9,"targetString":"result2"},{"text":"const loading2: any","docs":"","start":494,"length":8,"line":18,"character":18,"targetString":"loading2"},{"text":"const refresh2: any","docs":"","start":504,"length":8,"line":18,"character":28,"targetString":"refresh2"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":536,"length":5,"line":19,"character":10,"targetString":"fetch"},{"text":"var seoDataFullPublic: any","docs":"","start":559,"length":17,"line":20,"character":4,"targetString":"seoDataFullPublic"},{"text":"const result3: any","docs":"","start":638,"length":7,"line":24,"character":9,"targetString":"result3"},{"text":"const loading3: any","docs":"","start":647,"length":8,"line":24,"character":18,"targetString":"loading3"},{"text":"const refresh3: any","docs":"","start":657,"length":8,"line":24,"character":28,"targetString":"refresh3"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":684,"length":5,"line":24,"character":55,"targetString":"fetch"},{"text":"(JSX attribute) onChange: any","docs":"","start":753,"length":8,"line":29,"character":13,"targetString":"onChange"},{"text":"const View: ({ loading, data }: {\n    loading: any;\n    data: any;\n}) => any","docs":"","start":782,"length":4,"line":30,"character":7,"targetString":"View"},{"text":"(JSX attribute) loading: any","docs":"","start":787,"length":7,"line":30,"character":12,"targetString":"loading"},{"text":"(JSX attribute) data: any","docs":"","start":805,"length":4,"line":30,"character":30,"targetString":"data"},{"text":"const View: ({ loading, data }: {\n    loading: any;\n    data: any;\n}) => any","docs":"","start":861,"length":4,"line":36,"character":13,"targetString":"View"},{"text":"var loading: any","docs":"","start":871,"length":7,"line":36,"character":23,"targetString":"loading"},{"text":"var data: any","docs":"","start":880,"length":4,"line":36,"character":32,"targetString":"data"},{"text":"let content: any","docs":"","start":899,"length":7,"line":37,"character":6,"targetString":"content"},{"text":"var data: any","docs":"","start":925,"length":4,"line":38,"character":6,"targetString":"data"},{"text":"let content: any","docs":"","start":937,"length":7,"line":39,"character":4,"targetString":"content"},{"text":"var data: any","docs":"","start":950,"length":4,"line":39,"character":17,"targetString":"data"},{"text":"(JSX attribute) className: string","docs":"","start":983,"length":9,"line":42,"character":9,"targetString":"className"},{"text":"(JSX attribute) spinning: any","docs":"","start":1016,"length":8,"line":43,"character":12,"targetString":"spinning"},{"text":"var loading: any","docs":"","start":1026,"length":7,"line":43,"character":22,"targetString":"loading"},{"text":"let content: any","docs":"","start":1036,"length":7,"line":43,"character":32,"targetString":"content"}]],"/blog/Nextjs服务端渲染/token转发":[[{"text":"import axios","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"axios"},{"text":"import AxiosError","docs":"","start":16,"length":10,"line":0,"character":16,"targetString":"AxiosError"},{"text":"import ParsedUrlQuery","docs":"","start":51,"length":14,"line":1,"character":9,"targetString":"ParsedUrlQuery"},{"text":"import Cookies","docs":"","start":95,"length":7,"line":3,"character":7,"targetString":"Cookies"},{"text":"import getToken\nvar getToken: (cookie: string) => any","docs":"","start":137,"length":8,"line":5,"character":9,"targetString":"getToken"},{"text":"import printReqUrl","docs":"","start":175,"length":11,"line":6,"character":9,"targetString":"printReqUrl"},{"text":"import resolveResponse","docs":"","start":188,"length":15,"line":6,"character":22,"targetString":"resolveResponse"},{"text":"import AxiosInstance","docs":"","start":243,"length":13,"line":8,"character":14,"targetString":"AxiosInstance"},{"text":"import GetServerSideProps","docs":"","start":286,"length":18,"line":9,"character":14,"targetString":"GetServerSideProps"},{"text":"import GetServerSidePropsContext","docs":"","start":306,"length":25,"line":9,"character":34,"targetString":"GetServerSidePropsContext"},{"text":"type Props = {\n    [key: string]: any;\n}","docs":"","start":351,"length":5,"line":10,"character":5,"targetString":"Props"},{"text":"(parameter) key: string","docs":"","start":362,"length":3,"line":10,"character":16,"targetString":"key"},{"text":"type AxiosHandler<P extends Props = Props> = (request: any, ctx: any) => P | Promise<P>","docs":"","start":388,"length":12,"line":12,"character":5,"targetString":"AxiosHandler"},{"text":"(type parameter) P in type AxiosHandler<P extends Props = Props>","docs":"","start":401,"length":1,"line":12,"character":18,"targetString":"P"},{"text":"type Props = {\n    [key: string]: any;\n}","docs":"","start":411,"length":5,"line":12,"character":28,"targetString":"Props"},{"text":"type Props = {\n    [key: string]: any;\n}","docs":"","start":419,"length":5,"line":12,"character":36,"targetString":"Props"},{"text":"(parameter) request: any","docs":"","start":432,"length":7,"line":13,"character":2,"targetString":"request"},{"text":"import AxiosInstance","docs":"","start":441,"length":13,"line":13,"character":11,"targetString":"AxiosInstance"},{"text":"(parameter) ctx: any","docs":"","start":458,"length":3,"line":14,"character":2,"targetString":"ctx"},{"text":"import GetServerSidePropsContext","docs":"","start":463,"length":25,"line":14,"character":7,"targetString":"GetServerSidePropsContext"},{"text":"import ParsedUrlQuery","docs":"","start":489,"length":14,"line":14,"character":33,"targetString":"ParsedUrlQuery"},{"text":"(type parameter) P in type AxiosHandler<P extends Props = Props>","docs":"","start":510,"length":1,"line":15,"character":5,"targetString":"P"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":514,"length":7,"line":15,"character":9,"targetString":"Promise"},{"text":"(type parameter) P in type AxiosHandler<P extends Props = Props>","docs":"","start":522,"length":1,"line":15,"character":17,"targetString":"P"},{"text":"const ApiConfig: {\n    log: boolean;\n    target: string;\n}","docs":"","start":539,"length":9,"line":17,"character":13,"targetString":"ApiConfig"},{"text":"(property) log: boolean","docs":"","start":555,"length":3,"line":18,"character":2,"targetString":"log"},{"text":"(property) target: string","docs":"","start":568,"length":6,"line":19,"character":2,"targetString":"target"},{"text":"const getToken: (cookie: string) => any","docs":"","start":599,"length":8,"line":22,"character":13,"targetString":"getToken"},{"text":"(parameter) cookie: string","docs":"","start":611,"length":6,"line":22,"character":25,"targetString":"cookie"},{"text":"const cookies: any","docs":"","start":640,"length":7,"line":23,"character":8,"targetString":"cookies"},{"text":"import Cookies","docs":"","start":654,"length":7,"line":23,"character":22,"targetString":"Cookies"},{"text":"(parameter) cookie: string","docs":"","start":662,"length":6,"line":23,"character":30,"targetString":"cookie"},{"text":"const cookies: any","docs":"","start":679,"length":7,"line":24,"character":9,"targetString":"cookies"},{"text":"const withAxios: any","docs":"注入Axios实例\n1. 服务端渲染时转发token\n2. HTTP异常处理","start":772,"length":9,"line":32,"character":13,"targetString":"withAxios"},{"text":"(property) Location: string","docs":"","start":1520,"length":8,"line":60,"character":8,"targetString":"Location"}],[{"text":"interface Props","docs":"","start":10,"length":5,"line":0,"character":10,"targetString":"Props"},{"text":"(property) Props.data: any","docs":"","start":20,"length":4,"line":1,"character":2,"targetString":"data"},{"text":"const getServerSideProps: any","docs":"","start":46,"length":18,"line":4,"character":13,"targetString":"getServerSideProps"},{"text":"interface Props","docs":"","start":77,"length":5,"line":4,"character":44,"targetString":"Props"},{"text":"var get: any","docs":"","start":96,"length":3,"line":5,"character":11,"targetString":"get"},{"text":"var post: any","docs":"","start":101,"length":4,"line":5,"character":16,"targetString":"post"},{"text":"(parameter) ctx: any","docs":"","start":109,"length":3,"line":5,"character":24,"targetString":"ctx"},{"text":"const query: any","docs":"","start":129,"length":5,"line":6,"character":10,"targetString":"query"},{"text":"(parameter) ctx: any","docs":"","start":137,"length":3,"line":6,"character":18,"targetString":"ctx"},{"text":"var console: Console","docs":"","start":151,"length":7,"line":7,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":159,"length":3,"line":7,"character":12,"targetString":"log"},{"text":"const query: any","docs":"","start":172,"length":5,"line":7,"character":25,"targetString":"query"},{"text":"const apiRes: any","docs":"","start":189,"length":6,"line":8,"character":10,"targetString":"apiRes"},{"text":"var get: any","docs":"","start":204,"length":3,"line":8,"character":25,"targetString":"get"},{"text":"(property) data: any","docs":"","start":239,"length":4,"line":10,"character":6,"targetString":"data"},{"text":"const apiRes: any","docs":"","start":245,"length":6,"line":10,"character":12,"targetString":"apiRes"},{"text":"(parameter) props: Props","docs":"","start":287,"length":5,"line":15,"character":16,"targetString":"props"},{"text":"interface Props","docs":"","start":294,"length":5,"line":15,"character":23,"targetString":"Props"},{"text":"var console: Console","docs":"","start":348,"length":7,"line":18,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":356,"length":3,"line":18,"character":12,"targetString":"log"},{"text":"(parameter) props: Props","docs":"","start":368,"length":5,"line":18,"character":24,"targetString":"props"}]],"/blog/Nextjs服务端渲染/定义next-config类型":[[{"text":"(property) publicRuntimeConfig: Readonly<{\n    api: string;\n}>","docs":"","start":90,"length":19,"line":3,"character":4,"targetString":"publicRuntimeConfig"},{"text":"type Readonly<T> = { readonly [P in keyof T]: T[P]; }","docs":"Make all properties in T readonly","start":111,"length":8,"line":3,"character":25,"targetString":"Readonly"},{"text":"(property) api: string","docs":"","start":128,"length":3,"line":4,"character":6,"targetString":"api"}]],"/blog/Nextjs服务端渲染/封装接口请求函数":[[{"text":"import message","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"message"},{"text":"import AxiosResponse","docs":"","start":40,"length":13,"line":1,"character":9,"targetString":"AxiosResponse"},{"text":"import useEffect","docs":"","start":78,"length":9,"line":2,"character":9,"targetString":"useEffect"},{"text":"import useState","docs":"","start":89,"length":8,"line":2,"character":20,"targetString":"useState"},{"text":"const useFetch: any","docs":"","start":127,"length":8,"line":4,"character":13,"targetString":"useFetch"},{"text":"import AxiosResponse","docs":"","start":168,"length":13,"line":5,"character":25,"targetString":"AxiosResponse"},{"text":"var console: Console","docs":"","start":531,"length":7,"line":18,"character":6,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":539,"length":3,"line":18,"character":14,"targetString":"log"}],[{"text":"const result: any","docs":"","start":7,"length":6,"line":0,"character":7,"targetString":"result"},{"text":"const loading: any","docs":"","start":15,"length":7,"line":0,"character":15,"targetString":"loading"},{"text":"const refresh: any","docs":"","start":24,"length":7,"line":0,"character":24,"targetString":"refresh"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":50,"length":5,"line":0,"character":50,"targetString":"fetch"}]],"/blog/Node/base64":[[{"text":"const base64: {\n    encode(str: string): any;\n    decode(base64Str: string): any;\n}","docs":"","start":13,"length":6,"line":0,"character":13,"targetString":"base64"},{"text":"(method) encode(str: string): any","docs":"","start":26,"length":6,"line":1,"character":2,"targetString":"encode"},{"text":"(parameter) str: string","docs":"","start":33,"length":3,"line":1,"character":9,"targetString":"str"},{"text":"(parameter) str: string","docs":"","start":71,"length":3,"line":2,"character":23,"targetString":"str"},{"text":"(method) decode(base64Str: string): any","docs":"","start":103,"length":6,"line":4,"character":2,"targetString":"decode"},{"text":"(parameter) base64Str: string","docs":"","start":110,"length":9,"line":4,"character":9,"targetString":"base64Str"},{"text":"(parameter) base64Str: string","docs":"","start":154,"length":9,"line":5,"character":23,"targetString":"base64Str"}]],"/blog/Node/koa中间件机制":[[{"text":"function job1(ctx: any, next: any): Promise<void>","docs":"","start":15,"length":4,"line":0,"character":15,"targetString":"job1"},{"text":"(parameter) ctx: any","docs":"","start":20,"length":3,"line":0,"character":20,"targetString":"ctx"},{"text":"(parameter) next: any","docs":"","start":25,"length":4,"line":0,"character":25,"targetString":"next"},{"text":"var console: Console","docs":"","start":35,"length":7,"line":1,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":43,"length":3,"line":1,"character":10,"targetString":"log"},{"text":"(parameter) ctx: any","docs":"","start":47,"length":3,"line":1,"character":14,"targetString":"ctx"},{"text":"(parameter) next: any","docs":"","start":70,"length":4,"line":2,"character":8,"targetString":"next"},{"text":"var console: Console","docs":"","start":79,"length":7,"line":3,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":87,"length":3,"line":3,"character":10,"targetString":"log"},{"text":"(parameter) ctx: any","docs":"","start":91,"length":3,"line":3,"character":14,"targetString":"ctx"},{"text":"function job2(ctx: any, next: any): Promise<void>","docs":"","start":124,"length":4,"line":6,"character":15,"targetString":"job2"},{"text":"(parameter) ctx: any","docs":"","start":129,"length":3,"line":6,"character":20,"targetString":"ctx"},{"text":"(parameter) next: any","docs":"","start":134,"length":4,"line":6,"character":25,"targetString":"next"},{"text":"var console: Console","docs":"","start":144,"length":7,"line":7,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":152,"length":3,"line":7,"character":10,"targetString":"log"},{"text":"(parameter) ctx: any","docs":"","start":156,"length":3,"line":7,"character":14,"targetString":"ctx"},{"text":"(parameter) next: any","docs":"","start":179,"length":4,"line":8,"character":8,"targetString":"next"},{"text":"var console: Console","docs":"","start":188,"length":7,"line":9,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":196,"length":3,"line":9,"character":10,"targetString":"log"},{"text":"(parameter) ctx: any","docs":"","start":200,"length":3,"line":9,"character":14,"targetString":"ctx"},{"text":"function job3(ctx: any): Promise<void>","docs":"","start":233,"length":4,"line":12,"character":15,"targetString":"job3"},{"text":"(parameter) ctx: any","docs":"","start":238,"length":3,"line":12,"character":20,"targetString":"ctx"},{"text":"var console: Console","docs":"","start":247,"length":7,"line":13,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":255,"length":3,"line":13,"character":10,"targetString":"log"},{"text":"(parameter) ctx: any","docs":"","start":259,"length":3,"line":13,"character":14,"targetString":"ctx"},{"text":"const ctx: {\n    name: string;\n}","docs":"","start":283,"length":3,"line":16,"character":6,"targetString":"ctx"},{"text":"(property) name: string","docs":"","start":291,"length":4,"line":16,"character":14,"targetString":"name"}]],"/blog/Node/node解析url参数":[[{"text":"import querystring","docs":"","start":7,"length":11,"line":0,"character":7,"targetString":"querystring"},{"text":"import URL","docs":"","start":45,"length":3,"line":1,"character":7,"targetString":"URL"},{"text":"const parseURLParams: (url: string) => any","docs":"","start":67,"length":14,"line":3,"character":6,"targetString":"parseURLParams"},{"text":"(parameter) url: string","docs":"","start":85,"length":3,"line":3,"character":24,"targetString":"url"},{"text":"import querystring","docs":"","start":101,"length":11,"line":3,"character":40,"targetString":"querystring"},{"text":"import URL","docs":"","start":119,"length":3,"line":3,"character":58,"targetString":"URL"},{"text":"(parameter) url: string","docs":"","start":129,"length":3,"line":3,"character":68,"targetString":"url"}]],"/blog/Node/node路由":[[{"text":"(parameter) req: any","docs":"","start":14,"length":3,"line":0,"character":14,"targetString":"req"},{"text":"(parameter) res: any","docs":"","start":19,"length":3,"line":0,"character":19,"targetString":"res"},{"text":"(parameter) req: any","docs":"","start":35,"length":3,"line":1,"character":6,"targetString":"req"},{"text":"(parameter) req: any","docs":"","start":67,"length":3,"line":2,"character":8,"targetString":"req"},{"text":"(parameter) res: any","docs":"","start":104,"length":3,"line":3,"character":6,"targetString":"res"},{"text":"(parameter) req: any","docs":"","start":142,"length":3,"line":5,"character":13,"targetString":"req"},{"text":"(parameter) req: any","docs":"","start":175,"length":3,"line":6,"character":8,"targetString":"req"},{"text":"(parameter) res: any","docs":"","start":212,"length":3,"line":7,"character":6,"targetString":"res"},{"text":"(parameter) res: any","docs":"","start":253,"length":3,"line":10,"character":4,"targetString":"res"}]],"/blog/Node/promisify":[[{"text":"import promisify","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"promisify"},{"text":"import readdir","docs":"","start":42,"length":7,"line":1,"character":9,"targetString":"readdir"},{"text":"import readFile","docs":"","start":51,"length":8,"line":1,"character":18,"targetString":"readFile"},{"text":"import stat","docs":"","start":61,"length":4,"line":1,"character":28,"targetString":"stat"},{"text":"import exists","docs":"","start":67,"length":6,"line":1,"character":34,"targetString":"exists"},{"text":"import mkdir","docs":"","start":75,"length":5,"line":1,"character":42,"targetString":"mkdir"},{"text":"import writeFile","docs":"","start":82,"length":9,"line":1,"character":49,"targetString":"writeFile"},{"text":"const ReadDir: any","docs":"","start":118,"length":7,"line":3,"character":13,"targetString":"ReadDir"},{"text":"import promisify","docs":"","start":128,"length":9,"line":3,"character":23,"targetString":"promisify"},{"text":"import readdir","docs":"","start":138,"length":7,"line":3,"character":33,"targetString":"readdir"},{"text":"const ReadFile: any","docs":"","start":160,"length":8,"line":4,"character":13,"targetString":"ReadFile"},{"text":"import promisify","docs":"","start":171,"length":9,"line":4,"character":24,"targetString":"promisify"},{"text":"import readFile","docs":"","start":181,"length":8,"line":4,"character":34,"targetString":"readFile"},{"text":"const Stat: any","docs":"","start":204,"length":4,"line":5,"character":13,"targetString":"Stat"},{"text":"import promisify","docs":"","start":211,"length":9,"line":5,"character":20,"targetString":"promisify"},{"text":"import stat","docs":"","start":221,"length":4,"line":5,"character":30,"targetString":"stat"},{"text":"const Exists: any","docs":"","start":240,"length":6,"line":6,"character":13,"targetString":"Exists"},{"text":"import promisify","docs":"","start":249,"length":9,"line":6,"character":22,"targetString":"promisify"},{"text":"import exists","docs":"","start":259,"length":6,"line":6,"character":32,"targetString":"exists"},{"text":"const MkDir: any","docs":"","start":280,"length":5,"line":7,"character":13,"targetString":"MkDir"},{"text":"import promisify","docs":"","start":288,"length":9,"line":7,"character":21,"targetString":"promisify"},{"text":"import mkdir","docs":"","start":298,"length":5,"line":7,"character":31,"targetString":"mkdir"},{"text":"const WriteFile: any","docs":"","start":318,"length":9,"line":8,"character":13,"targetString":"WriteFile"},{"text":"import promisify","docs":"","start":330,"length":9,"line":8,"character":25,"targetString":"promisify"},{"text":"import writeFile","docs":"","start":340,"length":9,"line":8,"character":35,"targetString":"writeFile"}],[{"text":"const promiseify: <Arg, CB extends (err: Error, result: any) => any>(method: (arg: Arg, callback: CB) => void) => (arg: Arg) => Promise<Parameters<CB>[\"1\"]>","docs":"","start":6,"length":10,"line":0,"character":6,"targetString":"promiseify"},{"text":"(type parameter) Arg in <Arg, CB extends (err: Error, result: any) => any>(method: (arg: Arg, callback: CB) => void): (arg: Arg) => Promise<Parameters<CB>[\"1\"]>","docs":"","start":20,"length":3,"line":0,"character":20,"targetString":"Arg"},{"text":"(type parameter) CB in <Arg, CB extends (err: Error, result: any) => any>(method: (arg: Arg, callback: CB) => void): (arg: Arg) => Promise<Parameters<CB>[\"1\"]>","docs":"","start":25,"length":2,"line":0,"character":25,"targetString":"CB"},{"text":"(parameter) err: Error","docs":"","start":37,"length":3,"line":0,"character":37,"targetString":"err"},{"text":"interface Error","docs":"","start":42,"length":5,"line":0,"character":42,"targetString":"Error"},{"text":"(parameter) result: any","docs":"","start":49,"length":6,"line":0,"character":49,"targetString":"result"},{"text":"(parameter) method: (arg: Arg, callback: CB) => void","docs":"","start":73,"length":6,"line":1,"character":2,"targetString":"method"},{"text":"(parameter) arg: Arg","docs":"","start":82,"length":3,"line":1,"character":11,"targetString":"arg"},{"text":"(type parameter) Arg in <Arg, CB extends (err: Error, result: any) => any>(method: (arg: Arg, callback: CB) => void): (arg: Arg) => Promise<Parameters<CB>[\"1\"]>","docs":"","start":87,"length":3,"line":1,"character":16,"targetString":"Arg"},{"text":"(parameter) callback: CB extends (err: Error, result: any) => any","docs":"","start":92,"length":8,"line":1,"character":21,"targetString":"callback"},{"text":"(type parameter) CB in <Arg, CB extends (err: Error, result: any) => any>(method: (arg: Arg, callback: CB) => void): (arg: Arg) => Promise<Parameters<CB>[\"1\"]>","docs":"","start":102,"length":2,"line":1,"character":31,"targetString":"CB"},{"text":"(parameter) arg: Arg","docs":"","start":120,"length":3,"line":2,"character":6,"targetString":"arg"},{"text":"(type parameter) Arg in <Arg, CB extends (err: Error, result: any) => any>(method: (arg: Arg, callback: CB) => void): (arg: Arg) => Promise<Parameters<CB>[\"1\"]>","docs":"","start":125,"length":3,"line":2,"character":11,"targetString":"Arg"},{"text":"var Promise: PromiseConstructor\nnew <Parameters<CB>[\"1\"]>(executor: (resolve: (value: Parameters<CB>[\"1\"] | PromiseLike<Parameters<CB>[\"1\"]>) => void, reject: (reason?: any) => void) => void) => Promise<...>","docs":"Creates a new Promise.","start":139,"length":7,"line":3,"character":6,"targetString":"Promise"},{"text":"type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never","docs":"Obtain the parameters of a function type in a tuple","start":147,"length":10,"line":3,"character":14,"targetString":"Parameters"},{"text":"(type parameter) CB in <Arg, CB extends (err: Error, result: any) => any>(method: (arg: Arg, callback: CB) => void): (arg: Arg) => Promise<Parameters<CB>[\"1\"]>","docs":"","start":158,"length":2,"line":3,"character":25,"targetString":"CB"},{"text":"(parameter) resolve: (value: Parameters<CB>[\"1\"] | PromiseLike<Parameters<CB>[\"1\"]>) => void","docs":"","start":169,"length":7,"line":3,"character":36,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":178,"length":6,"line":3,"character":45,"targetString":"reject"},{"text":"const callback: (err: Error, result: any) => void","docs":"","start":201,"length":8,"line":4,"character":10,"targetString":"callback"},{"text":"(parameter) err: Error","docs":"","start":213,"length":3,"line":4,"character":22,"targetString":"err"},{"text":"interface Error","docs":"","start":218,"length":5,"line":4,"character":27,"targetString":"Error"},{"text":"(parameter) result: any","docs":"","start":225,"length":6,"line":4,"character":34,"targetString":"result"},{"text":"(parameter) err: Error","docs":"","start":247,"length":3,"line":5,"character":6,"targetString":"err"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":253,"length":6,"line":5,"character":12,"targetString":"reject"},{"text":"(parameter) err: Error","docs":"","start":260,"length":3,"line":5,"character":19,"targetString":"err"},{"text":"(parameter) resolve: (value: Parameters<CB>[\"1\"] | PromiseLike<Parameters<CB>[\"1\"]>) => void","docs":"","start":267,"length":7,"line":5,"character":26,"targetString":"resolve"},{"text":"(method) CallableFunction.call<typeof globalThis, [value: Parameters<CB>[\"1\"] | PromiseLike<Parameters<CB>[\"1\"]>], void>(this: (this: typeof globalThis, value: Parameters<...>[\"1\"] | PromiseLike<...>) => void, thisArg: typeof globalThis, value: Parameters<...>[\"1\"] | PromiseLike<...>): void","docs":"Calls the function with the specified object as the this value and the specified rest arguments as the arguments.","start":275,"length":4,"line":5,"character":34,"targetString":"call"},{"text":"(parameter) result: any","docs":"","start":286,"length":6,"line":5,"character":45,"targetString":"result"},{"text":"(parameter) method: (arg: Arg, callback: CB) => void","docs":"","start":310,"length":6,"line":7,"character":6,"targetString":"method"},{"text":"(method) CallableFunction.apply<null, [arg: Arg, callback: CB], void>(this: (this: null, arg: Arg, callback: CB) => void, thisArg: null, args: [arg: Arg, callback: CB]): void (+1 overload)","docs":"Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","start":317,"length":5,"line":7,"character":13,"targetString":"apply"},{"text":"(parameter) arg: Arg","docs":"","start":330,"length":3,"line":7,"character":26,"targetString":"arg"},{"text":"const callback: (err: Error, result: any) => void","docs":"","start":335,"length":8,"line":7,"character":31,"targetString":"callback"},{"text":"(local var) err: unknown","docs":"","start":359,"length":3,"line":8,"character":13,"targetString":"err"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":372,"length":6,"line":9,"character":6,"targetString":"reject"},{"text":"(local var) err: unknown","docs":"","start":379,"length":3,"line":9,"character":13,"targetString":"err"}]],"/blog/Node/下载tarball并解压到目录":[[{"text":"import remove","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"remove"},{"text":"import got","docs":"","start":42,"length":3,"line":1,"character":7,"targetString":"got"},{"text":"import fs","docs":"","start":70,"length":2,"line":2,"character":12,"targetString":"fs"},{"text":"(alias) class Stream\nimport Stream","docs":"","start":102,"length":6,"line":3,"character":9,"targetString":"Stream"},{"text":"import tar","docs":"","start":138,"length":3,"line":4,"character":12,"targetString":"tar"},{"text":"(alias) function promisify<TCustom extends Function>(fn: CustomPromisify<TCustom>): TCustom (+13 overloads)\n(alias) namespace promisify\nimport promisify","docs":"Takes a function following the common error-first callback style, i.e. taking\nan `(err, value) => ...` callback as the last argument, and returns a version\nthat returns promises.\n\n```js\nconst util = require('util');\nconst fs = require('fs');\n\nconst stat = util.promisify(fs.stat);\nstat('.').then((stats) => {\n  // Do something with `stats`\n}).catch((error) => {\n  // Handle the error.\n});\n```\n\nOr, equivalently using `async function`s:\n\n```js\nconst util = require('util');\nconst fs = require('fs');\n\nconst stat = util.promisify(fs.stat);\n\nasync function callStat() {\n  const stats = await stat('.');\n  console.log(`This directory is owned by ${stats.uid}`);\n}\n```\n\nIf there is an `original[util.promisify.custom]` property present, `promisify`will return its value, see `Custom promisified functions`.\n\n`promisify()` assumes that `original` is a function taking a callback as its\nfinal argument in all cases. If `original` is not a function, `promisify()`will throw an error. If `original` is a function but its last argument is not\nan error-first callback, it will still be passed an error-first\ncallback as its last argument.\n\nUsing `promisify()` on class methods or other methods that use `this` may not\nwork as expected unless handled specially:\n\n```js\nconst util = require('util');\n\nclass Foo {\n  constructor() {\n    this.a = 42;\n  }\n\n  bar(callback) {\n    callback(null, this.a);\n  }\n}\n\nconst foo = new Foo();\n\nconst naiveBar = util.promisify(foo.bar);\n// TypeError: Cannot read property 'a' of undefined\n// naiveBar().then(a => console.log(a));\n\nnaiveBar.call(foo).then((a) => console.log(a)); // '42'\n\nconst bindBar = naiveBar.bind(foo);\nbindBar().then((a) => console.log(a)); // '42'\n```","start":163,"length":9,"line":5,"character":9,"targetString":"promisify"},{"text":"(alias) function access(path: PathLike, mode: number | undefined, callback: NoParamCallback): void (+1 overload)\n(alias) namespace access\nimport access","docs":"Tests a user's permissions for the file or directory specified by `path`.\nThe `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. Check `File access constants` for possible values\nof `mode`. It is possible to create a mask consisting of the bitwise OR of\ntwo or more values (e.g. `fs.constants.W_OK | fs.constants.R_OK`).\n\nThe final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if`package.json` exists, and if it is readable or writable.\n\n```js\nimport { access, constants } from 'fs';\n\nconst file = 'package.json';\n\n// Check if the file exists in the current directory.\naccess(file, constants.F_OK, (err) => {\n  console.log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.\naccess(file, constants.R_OK, (err) => {\n  console.log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.\naccess(file, constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file exists in the current directory, and if it is writable.\naccess(file, constants.F_OK | constants.W_OK, (err) => {\n  if (err) {\n    console.error(\n      `${file} ${err.code === 'ENOENT' ? 'does not exist' : 'is read-only'}`);\n  } else {\n    console.log(`${file} exists, and it is writable`);\n  }\n});\n```\n\nDo not use `fs.access()` to check for the accessibility of a file before calling`fs.open()`, `fs.readFile()` or `fs.writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.\n\n**write (NOT RECOMMENDED)**\n\n```js\nimport { access, open, close } from 'fs';\n\naccess('myfile', (err) => {\n  if (!err) {\n    console.error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```js\nimport { open, close } from 'fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```js\nimport { access, open, close } from 'fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```js\nimport { open, close } from 'fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.\n\nIn general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.\n\nOn Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs.access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.","start":197,"length":6,"line":6,"character":9,"targetString":"access"},{"text":"function pathExists(path: string): Promise<boolean>","docs":"","start":240,"length":10,"line":8,"character":22,"targetString":"pathExists"},{"text":"(parameter) path: string","docs":"","start":251,"length":4,"line":8,"character":33,"targetString":"path"},{"text":"(alias) promisify<(path: fs.PathLike, mode?: number | undefined) => Promise<void>>(fn: CustomPromisify<(path: fs.PathLike, mode?: number | undefined) => Promise<void>>): (path: fs.PathLike, mode?: number | undefined) => Promise<void> (+13 overloads)\nimport promisify","docs":"Takes a function following the common error-first callback style, i.e. taking\nan `(err, value) => ...` callback as the last argument, and returns a version\nthat returns promises.\n\n```js\nconst util = require('util');\nconst fs = require('fs');\n\nconst stat = util.promisify(fs.stat);\nstat('.').then((stats) => {\n  // Do something with `stats`\n}).catch((error) => {\n  // Handle the error.\n});\n```\n\nOr, equivalently using `async function`s:\n\n```js\nconst util = require('util');\nconst fs = require('fs');\n\nconst stat = util.promisify(fs.stat);\n\nasync function callStat() {\n  const stats = await stat('.');\n  console.log(`This directory is owned by ${stats.uid}`);\n}\n```\n\nIf there is an `original[util.promisify.custom]` property present, `promisify`will return its value, see `Custom promisified functions`.\n\n`promisify()` assumes that `original` is a function taking a callback as its\nfinal argument in all cases. If `original` is not a function, `promisify()`will throw an error. If `original` is a function but its last argument is not\nan error-first callback, it will still be passed an error-first\ncallback as its last argument.\n\nUsing `promisify()` on class methods or other methods that use `this` may not\nwork as expected unless handled specially:\n\n```js\nconst util = require('util');\n\nclass Foo {\n  constructor() {\n    this.a = 42;\n  }\n\n  bar(callback) {\n    callback(null, this.a);\n  }\n}\n\nconst foo = new Foo();\n\nconst naiveBar = util.promisify(foo.bar);\n// TypeError: Cannot read property 'a' of undefined\n// naiveBar().then(a => console.log(a));\n\nnaiveBar.call(foo).then((a) => console.log(a)); // '42'\n\nconst bindBar = naiveBar.bind(foo);\nbindBar().then((a) => console.log(a)); // '42'\n```","start":285,"length":9,"line":10,"character":10,"targetString":"promisify"},{"text":"(alias) function access(path: PathLike, mode: number | undefined, callback: NoParamCallback): void (+1 overload)\n(alias) namespace access\nimport access","docs":"Tests a user's permissions for the file or directory specified by `path`.\nThe `mode` argument is an optional integer that specifies the accessibility\nchecks to be performed. Check `File access constants` for possible values\nof `mode`. It is possible to create a mask consisting of the bitwise OR of\ntwo or more values (e.g. `fs.constants.W_OK | fs.constants.R_OK`).\n\nThe final argument, `callback`, is a callback function that is invoked with\na possible error argument. If any of the accessibility checks fail, the error\nargument will be an `Error` object. The following examples check if`package.json` exists, and if it is readable or writable.\n\n```js\nimport { access, constants } from 'fs';\n\nconst file = 'package.json';\n\n// Check if the file exists in the current directory.\naccess(file, constants.F_OK, (err) => {\n  console.log(`${file} ${err ? 'does not exist' : 'exists'}`);\n});\n\n// Check if the file is readable.\naccess(file, constants.R_OK, (err) => {\n  console.log(`${file} ${err ? 'is not readable' : 'is readable'}`);\n});\n\n// Check if the file is writable.\naccess(file, constants.W_OK, (err) => {\n  console.log(`${file} ${err ? 'is not writable' : 'is writable'}`);\n});\n\n// Check if the file exists in the current directory, and if it is writable.\naccess(file, constants.F_OK | constants.W_OK, (err) => {\n  if (err) {\n    console.error(\n      `${file} ${err.code === 'ENOENT' ? 'does not exist' : 'is read-only'}`);\n  } else {\n    console.log(`${file} exists, and it is writable`);\n  }\n});\n```\n\nDo not use `fs.access()` to check for the accessibility of a file before calling`fs.open()`, `fs.readFile()` or `fs.writeFile()`. Doing\nso introduces a race condition, since other processes may change the file's\nstate between the two calls. Instead, user code should open/read/write the\nfile directly and handle the error raised if the file is not accessible.\n\n**write (NOT RECOMMENDED)**\n\n```js\nimport { access, open, close } from 'fs';\n\naccess('myfile', (err) => {\n  if (!err) {\n    console.error('myfile already exists');\n    return;\n  }\n\n  open('myfile', 'wx', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      writeMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**write (RECOMMENDED)**\n\n```js\nimport { open, close } from 'fs';\n\nopen('myfile', 'wx', (err, fd) => {\n  if (err) {\n    if (err.code === 'EEXIST') {\n      console.error('myfile already exists');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    writeMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\n**read (NOT RECOMMENDED)**\n\n```js\nimport { access, open, close } from 'fs';\naccess('myfile', (err) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  open('myfile', 'r', (err, fd) => {\n    if (err) throw err;\n\n    try {\n      readMyData(fd);\n    } finally {\n      close(fd, (err) => {\n        if (err) throw err;\n      });\n    }\n  });\n});\n```\n\n**read (RECOMMENDED)**\n\n```js\nimport { open, close } from 'fs';\n\nopen('myfile', 'r', (err, fd) => {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      console.error('myfile does not exist');\n      return;\n    }\n\n    throw err;\n  }\n\n  try {\n    readMyData(fd);\n  } finally {\n    close(fd, (err) => {\n      if (err) throw err;\n    });\n  }\n});\n```\n\nThe \"not recommended\" examples above check for accessibility and then use the\nfile; the \"recommended\" examples are better because they use the file directly\nand handle the error, if any.\n\nIn general, check for the accessibility of a file only if the file will not be\nused directly, for example when its accessibility is a signal from another\nprocess.\n\nOn Windows, access-control policies (ACLs) on a directory may limit access to\na file or directory. The `fs.access()` function, however, does not check the\nACL and therefore may report that a path is accessible even if the ACL restricts\nthe user from reading or writing to it.","start":295,"length":6,"line":10,"character":20,"targetString":"access"},{"text":"(parameter) path: string","docs":"","start":303,"length":4,"line":10,"character":28,"targetString":"path"},{"text":"const downloadTarballStream: (stream: Stream, extractDir: string) => Promise<unknown>","docs":"","start":378,"length":21,"line":18,"character":13,"targetString":"downloadTarballStream"},{"text":"(parameter) stream: Stream","docs":"","start":412,"length":6,"line":19,"character":2,"targetString":"stream"},{"text":"(alias) class Stream\nimport Stream","docs":"","start":420,"length":6,"line":19,"character":10,"targetString":"Stream"},{"text":"(parameter) extractDir: string","docs":"","start":430,"length":10,"line":20,"character":2,"targetString":"extractDir"},{"text":"function pathExists(path: string): Promise<boolean>","docs":"","start":482,"length":10,"line":23,"character":14,"targetString":"pathExists"},{"text":"(parameter) extractDir: string","docs":"","start":493,"length":10,"line":23,"character":25,"targetString":"extractDir"},{"text":"(alias) promisify<{\n    (path: fs.PathLike, options: fs.MakeDirectoryOptions & {\n        recursive: true;\n    }): Promise<string | undefined>;\n    (path: fs.PathLike, options?: fs.Mode | (fs.MakeDirectoryOptions & {\n        ...;\n    }) | null | undefined): Promise<...>;\n    (path: fs.PathLike, options?: fs.MakeDirectoryOptions | ... 2 more ... | undefined): Promise<...>;\n}>(fn: CustomPromisify<...>): {\n    (path: fs.PathLike, options: fs.MakeDirectoryOptions & {\n        recursive: true;\n    }): Promise<string | undefined>;\n    (path: fs.PathLike, options?: fs.Mode | (fs.MakeDirectoryOptions & {\n        ...;\n    }) | null | undefined): Promise<...>;\n    (path: fs.PathLike, options?: fs.MakeDirectoryOptions | ... 2 more ... | undefined): Promise<...>;\n} (+13 overloads)\nimport promisify","docs":"Takes a function following the common error-first callback style, i.e. taking\nan `(err, value) => ...` callback as the last argument, and returns a version\nthat returns promises.\n\n```js\nconst util = require('util');\nconst fs = require('fs');\n\nconst stat = util.promisify(fs.stat);\nstat('.').then((stats) => {\n  // Do something with `stats`\n}).catch((error) => {\n  // Handle the error.\n});\n```\n\nOr, equivalently using `async function`s:\n\n```js\nconst util = require('util');\nconst fs = require('fs');\n\nconst stat = util.promisify(fs.stat);\n\nasync function callStat() {\n  const stats = await stat('.');\n  console.log(`This directory is owned by ${stats.uid}`);\n}\n```\n\nIf there is an `original[util.promisify.custom]` property present, `promisify`will return its value, see `Custom promisified functions`.\n\n`promisify()` assumes that `original` is a function taking a callback as its\nfinal argument in all cases. If `original` is not a function, `promisify()`will throw an error. If `original` is a function but its last argument is not\nan error-first callback, it will still be passed an error-first\ncallback as its last argument.\n\nUsing `promisify()` on class methods or other methods that use `this` may not\nwork as expected unless handled specially:\n\n```js\nconst util = require('util');\n\nclass Foo {\n  constructor() {\n    this.a = 42;\n  }\n\n  bar(callback) {\n    callback(null, this.a);\n  }\n}\n\nconst foo = new Foo();\n\nconst naiveBar = util.promisify(foo.bar);\n// TypeError: Cannot read property 'a' of undefined\n// naiveBar().then(a => console.log(a));\n\nnaiveBar.call(foo).then((a) => console.log(a)); // '42'\n\nconst bindBar = naiveBar.bind(foo);\nbindBar().then((a) => console.log(a)); // '42'\n```","start":519,"length":9,"line":24,"character":10,"targetString":"promisify"},{"text":"import fs","docs":"","start":529,"length":2,"line":24,"character":20,"targetString":"fs"},{"text":"namespace mkdir\nfunction mkdir(path: fs.PathLike, options: fs.MakeDirectoryOptions & {\n    recursive: true;\n}, callback: (err: NodeJS.ErrnoException | null, path?: string | undefined) => void): void (+3 overloads)","docs":"Asynchronously creates a directory.\n\nThe callback is given a possible exception and, if `recursive` is `true`, the\nfirst directory path created, `(err, [path])`.`path` can still be `undefined` when `recursive` is `true`, if no directory was\ncreated.\n\nThe optional `options` argument can be an integer specifying `mode` (permission\nand sticky bits), or an object with a `mode` property and a `recursive`property indicating whether parent directories should be created. Calling`fs.mkdir()` when `path` is a directory that\nexists results in an error only\nwhen `recursive` is false.\n\n```js\nimport { mkdir } from 'fs';\n\n// Creates /tmp/a/apple, regardless of whether `/tmp` and /tmp/a exist.\nmkdir('/tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});\n```\n\nOn Windows, using `fs.mkdir()` on the root directory even with recursion will\nresult in an error:\n\n```js\nimport { mkdir } from 'fs';\n\nmkdir('/', { recursive: true }, (err) => {\n  // => [Error: EPERM: operation not permitted, mkdir 'C:\\']\n});\n```\n\nSee the POSIX [`mkdir(2)`](http://man7.org/linux/man-pages/man2/mkdir.2.html) documentation for more details.","start":532,"length":5,"line":24,"character":23,"targetString":"mkdir"},{"text":"(parameter) extractDir: string","docs":"","start":539,"length":10,"line":24,"character":30,"targetString":"extractDir"},{"text":"const fileDownloadPath: string","docs":"","start":564,"length":16,"line":26,"character":8,"targetString":"fileDownloadPath"},{"text":"(parameter) extractDir: string","docs":"","start":586,"length":10,"line":26,"character":30,"targetString":"extractDir"},{"text":"const file: fs.WriteStream","docs":"","start":615,"length":4,"line":27,"character":8,"targetString":"file"},{"text":"import fs","docs":"","start":622,"length":2,"line":27,"character":15,"targetString":"fs"},{"text":"function createWriteStream(path: fs.PathLike, options?: BufferEncoding | StreamOptions | undefined): fs.WriteStream","docs":"`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file, allowed values are in the\n\\[0, [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\\] range. Modifying a file rather than replacing\nit may require the `flags` option to be set to `r+` rather than the default `w`.\nThe `encoding` can be any one of those accepted by `Buffer`.\n\nIf `autoClose` is set to true (default behavior) on `'error'` or `'finish'`the file descriptor will be closed automatically. If `autoClose` is false,\nthen the file descriptor won't be closed, even if there's an error.\nIt is the application's responsibility to close it and make sure there's no\nfile descriptor leak.\n\nBy default, the stream will emit a `'close'` event after it has been\ndestroyed, like most `Writable` streams.  Set the `emitClose` option to`false` to change this behavior.\n\nBy providing the `fs` option it is possible to override the corresponding `fs`implementations for `open`, `write`, `writev` and `close`. Overriding `write()`without `writev()` can reduce\nperformance as some optimizations (`_writev()`)\nwill be disabled. When providing the `fs` option,  overrides for `open`,`close`, and at least one of `write` and `writev` are required.\n\nLike `fs.ReadStream`, if `fd` is specified, `fs.WriteStream` will ignore the`path` argument and will use the specified file descriptor. This means that no`'open'` event will be\nemitted. `fd` should be blocking; non-blocking `fd`s\nshould be passed to `net.Socket`.\n\nIf `options` is a string, then it specifies the encoding.","start":625,"length":17,"line":27,"character":18,"targetString":"createWriteStream"},{"text":"const fileDownloadPath: string","docs":"","start":643,"length":16,"line":27,"character":36,"targetString":"fileDownloadPath"},{"text":"var Promise: PromiseConstructor\nnew <unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise<unknown>","docs":"Creates a new Promise.","start":675,"length":7,"line":28,"character":13,"targetString":"Promise"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":684,"length":7,"line":28,"character":22,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":693,"length":6,"line":28,"character":31,"targetString":"reject"},{"text":"(parameter) stream: Stream","docs":"","start":710,"length":6,"line":29,"character":4,"targetString":"stream"},{"text":"(method) internal.pipe<fs.WriteStream>(destination: fs.WriteStream, options?: {\n    end?: boolean | undefined;\n} | undefined): fs.WriteStream","docs":"","start":724,"length":4,"line":30,"character":7,"targetString":"pipe"},{"text":"const file: fs.WriteStream","docs":"","start":729,"length":4,"line":30,"character":12,"targetString":"file"},{"text":"(method) WriteStream.on(event: \"finish\", listener: () => void): fs.WriteStream (+8 overloads)","docs":"Adds the `listener` function to the end of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n```js\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```","start":742,"length":2,"line":31,"character":7,"targetString":"on"},{"text":"import tar","docs":"","start":797,"length":3,"line":33,"character":14,"targetString":"tar"},{"text":"(property) file: string","docs":"","start":805,"length":4,"line":33,"character":22,"targetString":"file"},{"text":"const fileDownloadPath: string","docs":"","start":811,"length":16,"line":33,"character":28,"targetString":"fileDownloadPath"},{"text":"(property) cwd: string","docs":"","start":829,"length":3,"line":33,"character":46,"targetString":"cwd"},{"text":"(parameter) extractDir: string","docs":"","start":834,"length":10,"line":33,"character":51,"targetString":"extractDir"},{"text":"function pathExists(path: string): Promise<boolean>","docs":"","start":885,"length":10,"line":35,"character":18,"targetString":"pathExists"},{"text":"const fileDownloadPath: string","docs":"","start":896,"length":16,"line":35,"character":29,"targetString":"fileDownloadPath"},{"text":"import remove","docs":"","start":933,"length":6,"line":36,"character":16,"targetString":"remove"},{"text":"const fileDownloadPath: string","docs":"","start":940,"length":16,"line":36,"character":23,"targetString":"fileDownloadPath"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":977,"length":7,"line":38,"character":8,"targetString":"resolve"},{"text":"(parameter) extractDir: string","docs":"","start":985,"length":10,"line":38,"character":16,"targetString":"extractDir"},{"text":"(method) WriteStream.on(event: \"error\", listener: (err: Error) => void): fs.WriteStream (+8 overloads)","docs":"Adds the `listener` function to the end of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n```js\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```","start":1014,"length":2,"line":40,"character":7,"targetString":"on"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":1026,"length":6,"line":40,"character":19,"targetString":"reject"},{"text":"const downloadTarball: (url: string, extractDir: string) => Promise<void>","docs":"","start":1058,"length":15,"line":44,"character":13,"targetString":"downloadTarball"},{"text":"(parameter) url: string","docs":"","start":1083,"length":3,"line":44,"character":38,"targetString":"url"},{"text":"(parameter) extractDir: string","docs":"","start":1096,"length":10,"line":44,"character":51,"targetString":"extractDir"},{"text":"const stream: Stream","docs":"","start":1129,"length":6,"line":45,"character":8,"targetString":"stream"},{"text":"import got","docs":"","start":1138,"length":3,"line":45,"character":17,"targetString":"got"},{"text":"(parameter) url: string","docs":"","start":1149,"length":3,"line":45,"character":28,"targetString":"url"},{"text":"(alias) class Stream\nimport Stream","docs":"","start":1157,"length":6,"line":45,"character":36,"targetString":"Stream"},{"text":"const downloadTarballStream: (stream: Stream, extractDir: string) => Promise<unknown>","docs":"","start":1173,"length":21,"line":46,"character":8,"targetString":"downloadTarballStream"},{"text":"const stream: Stream","docs":"","start":1195,"length":6,"line":46,"character":30,"targetString":"stream"},{"text":"(parameter) extractDir: string","docs":"","start":1203,"length":10,"line":46,"character":38,"targetString":"extractDir"}]],"/blog/Node/从URL加载commonjs模块":[[{"text":"import got","docs":"","start":7,"length":3,"line":0,"character":7,"targetString":"got"},{"text":"import Module","docs":"","start":31,"length":6,"line":1,"character":9,"targetString":"Module"},{"text":"function requireRemote<T>(url: string): Promise<T>","docs":"从 URL 加载 commonjs 模块","start":109,"length":13,"line":6,"character":22,"targetString":"requireRemote"},{"text":"(type parameter) T in requireRemote<T>(url: string): Promise<T>","docs":"","start":123,"length":1,"line":6,"character":36,"targetString":"T"},{"text":"(parameter) url: string","docs":"","start":126,"length":3,"line":6,"character":39,"targetString":"url"},{"text":"const mod: any","docs":"","start":149,"length":3,"line":7,"character":8,"targetString":"mod"},{"text":"import Module","docs":"","start":159,"length":6,"line":7,"character":18,"targetString":"Module"},{"text":"(parameter) url: string","docs":"","start":166,"length":3,"line":7,"character":25,"targetString":"url"},{"text":"const code: any","docs":"","start":179,"length":4,"line":8,"character":8,"targetString":"code"},{"text":"import got","docs":"","start":192,"length":3,"line":8,"character":21,"targetString":"got"},{"text":"(parameter) url: string","docs":"","start":200,"length":3,"line":8,"character":29,"targetString":"url"},{"text":"const mod: any","docs":"","start":353,"length":3,"line":11,"character":2,"targetString":"mod"},{"text":"const code: any","docs":"","start":366,"length":4,"line":11,"character":15,"targetString":"code"},{"text":"(parameter) url: string","docs":"","start":372,"length":3,"line":11,"character":21,"targetString":"url"},{"text":"const mod: any","docs":"","start":386,"length":3,"line":12,"character":9,"targetString":"mod"},{"text":"(type parameter) T in requireRemote<T>(url: string): Promise<T>","docs":"","start":401,"length":1,"line":12,"character":24,"targetString":"T"},{"text":"const requireRemoteTS: Promise<typeof ts>","docs":"","start":419,"length":15,"line":15,"character":13,"targetString":"requireRemoteTS"},{"text":"function requireRemote<typeof ts>(url: string): Promise<typeof ts>","docs":"从 URL 加载 commonjs 模块","start":437,"length":13,"line":15,"character":31,"targetString":"requireRemote"}]],"/blog/Node/接收base64图片":[[{"text":"const body: any","docs":"","start":45,"length":4,"line":1,"character":8,"targetString":"body"},{"text":"const buffer: any","docs":"","start":98,"length":6,"line":2,"character":8,"targetString":"buffer"},{"text":"const body: any","docs":"","start":119,"length":4,"line":2,"character":29,"targetString":"body"},{"text":"const buffer: any","docs":"","start":191,"length":6,"line":3,"character":44,"targetString":"buffer"}]],"/blog/Node/简单的文件读写封装":[[{"text":"import fs","docs":"","start":7,"length":2,"line":0,"character":7,"targetString":"fs"},{"text":"import dirname","docs":"","start":29,"length":7,"line":1,"character":9,"targetString":"dirname"},{"text":"import resolve","docs":"","start":38,"length":7,"line":1,"character":18,"targetString":"resolve"},{"text":"import promisify","docs":"","start":69,"length":9,"line":2,"character":9,"targetString":"promisify"},{"text":"const readFile: any","docs":"","start":100,"length":8,"line":4,"character":6,"targetString":"readFile"},{"text":"import promisify","docs":"","start":111,"length":9,"line":4,"character":17,"targetString":"promisify"},{"text":"import fs","docs":"","start":121,"length":2,"line":4,"character":27,"targetString":"fs"},{"text":"const writeFile: any","docs":"","start":140,"length":9,"line":5,"character":6,"targetString":"writeFile"},{"text":"import promisify","docs":"","start":152,"length":9,"line":5,"character":18,"targetString":"promisify"},{"text":"import fs","docs":"","start":162,"length":2,"line":5,"character":28,"targetString":"fs"},{"text":"const mkdir: any","docs":"","start":182,"length":5,"line":6,"character":6,"targetString":"mkdir"},{"text":"import promisify","docs":"","start":190,"length":9,"line":6,"character":14,"targetString":"promisify"},{"text":"import fs","docs":"","start":200,"length":2,"line":6,"character":24,"targetString":"fs"},{"text":"const mkDirPath: (path: string) => Promise<void>","docs":"","start":217,"length":9,"line":8,"character":6,"targetString":"mkDirPath"},{"text":"(parameter) path: string","docs":"","start":236,"length":4,"line":8,"character":25,"targetString":"path"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":251,"length":7,"line":8,"character":40,"targetString":"Promise"},{"text":"import fs","docs":"","start":276,"length":2,"line":9,"character":6,"targetString":"fs"},{"text":"(parameter) path: string","docs":"","start":290,"length":4,"line":9,"character":20,"targetString":"path"},{"text":"const mkDirPath: (path: string) => Promise<void>","docs":"","start":331,"length":9,"line":12,"character":10,"targetString":"mkDirPath"},{"text":"import dirname","docs":"","start":341,"length":7,"line":12,"character":20,"targetString":"dirname"},{"text":"(parameter) path: string","docs":"","start":349,"length":4,"line":12,"character":28,"targetString":"path"},{"text":"const mkdir: any","docs":"","start":366,"length":5,"line":13,"character":10,"targetString":"mkdir"},{"text":"(parameter) path: string","docs":"","start":372,"length":4,"line":13,"character":16,"targetString":"path"},{"text":"const mkDirPathSync: (path: string) => void","docs":"","start":391,"length":13,"line":17,"character":6,"targetString":"mkDirPathSync"},{"text":"(parameter) path: string","docs":"","start":408,"length":4,"line":17,"character":23,"targetString":"path"},{"text":"import fs","docs":"","start":433,"length":2,"line":18,"character":6,"targetString":"fs"},{"text":"(parameter) path: string","docs":"","start":447,"length":4,"line":18,"character":20,"targetString":"path"},{"text":"const mkDirPathSync: (path: string) => void","docs":"","start":482,"length":13,"line":21,"character":4,"targetString":"mkDirPathSync"},{"text":"import dirname","docs":"","start":496,"length":7,"line":21,"character":18,"targetString":"dirname"},{"text":"(parameter) path: string","docs":"","start":504,"length":4,"line":21,"character":26,"targetString":"path"},{"text":"import fs","docs":"","start":515,"length":2,"line":22,"character":4,"targetString":"fs"},{"text":"(parameter) path: string","docs":"","start":528,"length":4,"line":22,"character":17,"targetString":"path"},{"text":"const isJSON: (str: string) => boolean","docs":"","start":554,"length":6,"line":26,"character":13,"targetString":"isJSON"},{"text":"(parameter) str: string","docs":"","start":564,"length":3,"line":26,"character":23,"targetString":"str"},{"text":"(parameter) str: string","docs":"","start":595,"length":3,"line":27,"character":13,"targetString":"str"},{"text":"const obj: any","docs":"","start":636,"length":3,"line":29,"character":12,"targetString":"obj"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":642,"length":4,"line":29,"character":18,"targetString":"JSON"},{"text":"(method) JSON.parse(text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined): any","docs":"Converts a JavaScript Object Notation (JSON) string into an object.","start":647,"length":5,"line":29,"character":23,"targetString":"parse"},{"text":"(parameter) str: string","docs":"","start":653,"length":3,"line":29,"character":29,"targetString":"str"},{"text":"const obj: any","docs":"","start":675,"length":3,"line":30,"character":17,"targetString":"obj"},{"text":"const obj: any","docs":"","start":695,"length":3,"line":30,"character":37,"targetString":"obj"},{"text":"(local var) e: unknown","docs":"","start":779,"length":1,"line":35,"character":13,"targetString":"e"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":857,"length":8,"line":43,"character":13,"targetString":"SafeJSON"},{"text":"type Pick<T, K extends keyof T> = { [P in K]: T[P]; }","docs":"From T, pick a set of properties whose keys are in the union K","start":867,"length":4,"line":43,"character":23,"targetString":"Pick"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":879,"length":4,"line":43,"character":35,"targetString":"JSON"},{"text":"(method) parse(text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined): any","docs":"Converts a JavaScript Object Notation (JSON) string into an object.","start":914,"length":5,"line":44,"character":2,"targetString":"parse"},{"text":"(parameter) text: string","docs":"","start":920,"length":4,"line":44,"character":8,"targetString":"text"},{"text":"(parameter) args: [reviver?: ((this: any, key: string, value: any) => any) | undefined]","docs":"","start":929,"length":4,"line":44,"character":17,"targetString":"args"},{"text":"const isJSON: (str: string) => boolean","docs":"","start":945,"length":6,"line":45,"character":8,"targetString":"isJSON"},{"text":"(parameter) text: string","docs":"","start":952,"length":4,"line":45,"character":15,"targetString":"text"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":974,"length":4,"line":46,"character":13,"targetString":"JSON"},{"text":"(method) JSON.parse(text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined): any","docs":"Converts a JavaScript Object Notation (JSON) string into an object.","start":979,"length":5,"line":46,"character":18,"targetString":"parse"},{"text":"(parameter) text: string","docs":"","start":985,"length":4,"line":46,"character":24,"targetString":"text"},{"text":"(parameter) args: [reviver?: ((this: any, key: string, value: any) => any) | undefined]","docs":"","start":994,"length":4,"line":46,"character":33,"targetString":"args"},{"text":"(method) stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":1042,"length":9,"line":51,"character":2,"targetString":"stringify"},{"text":"(parameter) obj: object","docs":"","start":1052,"length":3,"line":51,"character":12,"targetString":"obj"},{"text":"(parameter) args: any[]","docs":"","start":1068,"length":4,"line":51,"character":28,"targetString":"args"},{"text":"(parameter) obj: object","docs":"","start":1091,"length":3,"line":52,"character":8,"targetString":"obj"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":1111,"length":4,"line":53,"character":13,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":1116,"length":9,"line":53,"character":18,"targetString":"stringify"},{"text":"(parameter) obj: object","docs":"","start":1126,"length":3,"line":53,"character":28,"targetString":"obj"},{"text":"(parameter) args: any[]","docs":"","start":1134,"length":4,"line":53,"character":36,"targetString":"args"},{"text":"const prepare: MethodDecorator","docs":"保证文件读写前，文件是存在的","start":1214,"length":7,"line":63,"character":6,"targetString":"prepare"},{"text":"type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => void | TypedPropertyDescriptor<T>","docs":"","start":1223,"length":15,"line":63,"character":15,"targetString":"MethodDecorator"},{"text":"(parameter) target: Object","docs":"","start":1242,"length":6,"line":63,"character":34,"targetString":"target"},{"text":"(parameter) key: string | symbol","docs":"","start":1250,"length":3,"line":63,"character":42,"targetString":"key"},{"text":"(parameter) descriptor: TypedPropertyDescriptor<any>","docs":"","start":1255,"length":10,"line":63,"character":47,"targetString":"descriptor"},{"text":"interface TypedPropertyDescriptor<T>","docs":"","start":1267,"length":23,"line":63,"character":59,"targetString":"TypedPropertyDescriptor"},{"text":"const originMethod: any","docs":"","start":1310,"length":12,"line":64,"character":8,"targetString":"originMethod"},{"text":"(parameter) descriptor: TypedPropertyDescriptor<any>","docs":"","start":1325,"length":10,"line":64,"character":23,"targetString":"descriptor"},{"text":"(property) TypedPropertyDescriptor<any>.value?: any","docs":"","start":1336,"length":5,"line":64,"character":34,"targetString":"value"},{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":1356,"length":4,"line":65,"character":14,"targetString":"test"},{"text":"var String: StringConstructor\n(value?: any) => string","docs":"Allows manipulation and formatting of text strings and determination and location of substrings within strings.","start":1361,"length":6,"line":65,"character":19,"targetString":"String"},{"text":"(parameter) key: string | symbol","docs":"","start":1368,"length":3,"line":65,"character":26,"targetString":"key"},{"text":"(parameter) descriptor: TypedPropertyDescriptor<any>","docs":"","start":1381,"length":10,"line":66,"character":4,"targetString":"descriptor"},{"text":"(property) TypedPropertyDescriptor<any>.value?: any","docs":"","start":1392,"length":5,"line":66,"character":15,"targetString":"value"},{"text":"(parameter) args: any","docs":"","start":1413,"length":4,"line":66,"character":36,"targetString":"args"},{"text":"const preparePath: any","docs":"","start":1438,"length":11,"line":67,"character":12,"targetString":"preparePath"},{"text":"import fs","docs":"","start":1475,"length":2,"line":68,"character":10,"targetString":"fs"},{"text":"const preparePath: any","docs":"","start":1489,"length":11,"line":68,"character":24,"targetString":"preparePath"},{"text":"const mkDirPathSync: (path: string) => void","docs":"","start":1528,"length":13,"line":70,"character":8,"targetString":"mkDirPathSync"},{"text":"import dirname","docs":"","start":1542,"length":7,"line":70,"character":22,"targetString":"dirname"},{"text":"import resolve","docs":"","start":1550,"length":7,"line":70,"character":30,"targetString":"resolve"},{"text":"const preparePath: any","docs":"","start":1558,"length":11,"line":70,"character":38,"targetString":"preparePath"},{"text":"import fs","docs":"","start":1581,"length":2,"line":71,"character":8,"targetString":"fs"},{"text":"const preparePath: any","docs":"","start":1598,"length":11,"line":71,"character":25,"targetString":"preparePath"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":1611,"length":8,"line":71,"character":38,"targetString":"SafeJSON"},{"text":"(method) stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":1620,"length":9,"line":71,"character":47,"targetString":"stringify"},{"text":"const originMethod: any","docs":"","start":1656,"length":12,"line":73,"character":13,"targetString":"originMethod"},{"text":"(parameter) args: any","docs":"","start":1681,"length":4,"line":73,"character":38,"targetString":"args"},{"text":"(parameter) descriptor: TypedPropertyDescriptor<any>","docs":"","start":1708,"length":10,"line":76,"character":4,"targetString":"descriptor"},{"text":"(property) TypedPropertyDescriptor<any>.value?: any","docs":"","start":1719,"length":5,"line":76,"character":15,"targetString":"value"},{"text":"(parameter) args: any","docs":"","start":1746,"length":4,"line":76,"character":42,"targetString":"args"},{"text":"const preparePath: any","docs":"","start":1771,"length":11,"line":77,"character":12,"targetString":"preparePath"},{"text":"import fs","docs":"","start":1808,"length":2,"line":78,"character":10,"targetString":"fs"},{"text":"const preparePath: any","docs":"","start":1822,"length":11,"line":78,"character":24,"targetString":"preparePath"},{"text":"const mkDirPath: (path: string) => Promise<void>","docs":"","start":1867,"length":9,"line":80,"character":14,"targetString":"mkDirPath"},{"text":"import dirname","docs":"","start":1877,"length":7,"line":80,"character":24,"targetString":"dirname"},{"text":"import resolve","docs":"","start":1885,"length":7,"line":80,"character":32,"targetString":"resolve"},{"text":"const preparePath: any","docs":"","start":1893,"length":11,"line":80,"character":40,"targetString":"preparePath"},{"text":"const writeFile: any","docs":"","start":1922,"length":9,"line":81,"character":14,"targetString":"writeFile"},{"text":"const preparePath: any","docs":"","start":1932,"length":11,"line":81,"character":24,"targetString":"preparePath"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":1945,"length":8,"line":81,"character":37,"targetString":"SafeJSON"},{"text":"(method) stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":1954,"length":9,"line":81,"character":46,"targetString":"stringify"},{"text":"const originMethod: any","docs":"","start":1990,"length":12,"line":83,"character":13,"targetString":"originMethod"},{"text":"(parameter) args: any","docs":"","start":2015,"length":4,"line":83,"character":38,"targetString":"args"},{"text":"class RCManager","docs":"安全的json读写类\n```ts\n// usage\nconst file = new RCManager('./config.json')\nfile.set('token', 'xxx')\nfile.get('token')\nfile.delete('token')\n```","start":2217,"length":9,"line":98,"character":13,"targetString":"RCManager"},{"text":"(property) RCManager.path: string","docs":"","start":2251,"length":4,"line":99,"character":22,"targetString":"path"},{"text":"const prepare: MethodDecorator","docs":"保证文件读写前，文件是存在的","start":2273,"length":7,"line":101,"character":3,"targetString":"prepare"},{"text":"(method) RCManager.get(key?: string | undefined): Promise<any>","docs":"","start":2289,"length":3,"line":102,"character":8,"targetString":"get"},{"text":"(parameter) key: string | undefined","docs":"","start":2293,"length":3,"line":102,"character":12,"targetString":"key"},{"text":"const buf: any","docs":"","start":2319,"length":3,"line":103,"character":10,"targetString":"buf"},{"text":"const readFile: any","docs":"","start":2331,"length":8,"line":103,"character":22,"targetString":"readFile"},{"text":"(property) RCManager.path: string","docs":"","start":2345,"length":4,"line":103,"character":36,"targetString":"path"},{"text":"const data: any","docs":"","start":2361,"length":4,"line":104,"character":10,"targetString":"data"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":2368,"length":8,"line":104,"character":17,"targetString":"SafeJSON"},{"text":"(method) parse(text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined): any","docs":"Converts a JavaScript Object Notation (JSON) string into an object.","start":2377,"length":5,"line":104,"character":26,"targetString":"parse"},{"text":"const buf: any","docs":"","start":2383,"length":3,"line":104,"character":32,"targetString":"buf"},{"text":"(parameter) key: string | undefined","docs":"","start":2410,"length":3,"line":105,"character":11,"targetString":"key"},{"text":"const data: any","docs":"","start":2416,"length":4,"line":105,"character":17,"targetString":"data"},{"text":"(parameter) key: string","docs":"","start":2421,"length":3,"line":105,"character":22,"targetString":"key"},{"text":"const data: any","docs":"","start":2428,"length":4,"line":105,"character":29,"targetString":"data"},{"text":"const prepare: MethodDecorator","docs":"保证文件读写前，文件是存在的","start":2440,"length":7,"line":107,"character":3,"targetString":"prepare"},{"text":"(method) RCManager.getSync(key?: string | undefined): any","docs":"","start":2450,"length":7,"line":108,"character":2,"targetString":"getSync"},{"text":"(parameter) key: string | undefined","docs":"","start":2458,"length":3,"line":108,"character":10,"targetString":"key"},{"text":"const buf: any","docs":"","start":2484,"length":3,"line":109,"character":10,"targetString":"buf"},{"text":"import fs","docs":"","start":2490,"length":2,"line":109,"character":16,"targetString":"fs"},{"text":"(property) RCManager.path: string","docs":"","start":2511,"length":4,"line":109,"character":37,"targetString":"path"},{"text":"const data: any","docs":"","start":2527,"length":4,"line":110,"character":10,"targetString":"data"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":2534,"length":8,"line":110,"character":17,"targetString":"SafeJSON"},{"text":"(method) parse(text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined): any","docs":"Converts a JavaScript Object Notation (JSON) string into an object.","start":2543,"length":5,"line":110,"character":26,"targetString":"parse"},{"text":"const buf: any","docs":"","start":2549,"length":3,"line":110,"character":32,"targetString":"buf"},{"text":"(parameter) key: string | undefined","docs":"","start":2576,"length":3,"line":111,"character":11,"targetString":"key"},{"text":"const data: any","docs":"","start":2582,"length":4,"line":111,"character":17,"targetString":"data"},{"text":"(parameter) key: string","docs":"","start":2587,"length":3,"line":111,"character":22,"targetString":"key"},{"text":"const data: any","docs":"","start":2594,"length":4,"line":111,"character":29,"targetString":"data"},{"text":"const prepare: MethodDecorator","docs":"保证文件读写前，文件是存在的","start":2607,"length":7,"line":114,"character":3,"targetString":"prepare"},{"text":"(method) RCManager.set(key: string, value: any): Promise<void>","docs":"","start":2623,"length":3,"line":115,"character":8,"targetString":"set"},{"text":"(parameter) key: string","docs":"","start":2627,"length":3,"line":115,"character":12,"targetString":"key"},{"text":"(parameter) value: any","docs":"","start":2640,"length":5,"line":115,"character":25,"targetString":"value"},{"text":"const data: Promise<any>","docs":"","start":2664,"length":4,"line":116,"character":10,"targetString":"data"},{"text":"(method) RCManager.get(key?: string | undefined): Promise<any>","docs":"","start":2676,"length":3,"line":116,"character":22,"targetString":"get"},{"text":"const data: Promise<any>","docs":"","start":2686,"length":4,"line":117,"character":4,"targetString":"data"},{"text":"(parameter) key: string","docs":"","start":2691,"length":3,"line":117,"character":9,"targetString":"key"},{"text":"(parameter) value: any","docs":"","start":2698,"length":5,"line":117,"character":16,"targetString":"value"},{"text":"const writeFile: any","docs":"","start":2714,"length":9,"line":118,"character":10,"targetString":"writeFile"},{"text":"(property) RCManager.path: string","docs":"","start":2729,"length":4,"line":118,"character":25,"targetString":"path"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":2735,"length":8,"line":118,"character":31,"targetString":"SafeJSON"},{"text":"(method) stringify(value: any, replacer?: (string | number)[] | null | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":2744,"length":9,"line":118,"character":40,"targetString":"stringify"},{"text":"const data: Promise<any>","docs":"","start":2754,"length":4,"line":118,"character":50,"targetString":"data"},{"text":"const prepare: MethodDecorator","docs":"保证文件读写前，文件是存在的","start":2777,"length":7,"line":120,"character":3,"targetString":"prepare"},{"text":"(method) RCManager.setSync(key: string, value: any): void","docs":"","start":2787,"length":7,"line":121,"character":2,"targetString":"setSync"},{"text":"(parameter) key: string","docs":"","start":2795,"length":3,"line":121,"character":10,"targetString":"key"},{"text":"(parameter) value: any","docs":"","start":2808,"length":5,"line":121,"character":23,"targetString":"value"},{"text":"const data: Promise<any>","docs":"","start":2832,"length":4,"line":122,"character":10,"targetString":"data"},{"text":"(method) RCManager.get(key?: string | undefined): Promise<any>","docs":"","start":2844,"length":3,"line":122,"character":22,"targetString":"get"},{"text":"const data: Promise<any>","docs":"","start":2854,"length":4,"line":123,"character":4,"targetString":"data"},{"text":"(parameter) key: string","docs":"","start":2859,"length":3,"line":123,"character":9,"targetString":"key"},{"text":"(parameter) value: any","docs":"","start":2866,"length":5,"line":123,"character":16,"targetString":"value"},{"text":"import fs","docs":"","start":2876,"length":2,"line":124,"character":4,"targetString":"fs"},{"text":"(property) RCManager.path: string","docs":"","start":2898,"length":4,"line":124,"character":26,"targetString":"path"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":2904,"length":8,"line":124,"character":32,"targetString":"SafeJSON"},{"text":"(method) stringify(value: any, replacer?: (string | number)[] | null | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":2913,"length":9,"line":124,"character":41,"targetString":"stringify"},{"text":"const data: Promise<any>","docs":"","start":2923,"length":4,"line":124,"character":51,"targetString":"data"},{"text":"const prepare: MethodDecorator","docs":"保证文件读写前，文件是存在的","start":2947,"length":7,"line":127,"character":3,"targetString":"prepare"},{"text":"(method) RCManager.delete(key: string): Promise<void>","docs":"","start":2963,"length":6,"line":128,"character":8,"targetString":"delete"},{"text":"(parameter) key: string","docs":"","start":2970,"length":3,"line":128,"character":15,"targetString":"key"},{"text":"const data: Promise<any>","docs":"","start":2995,"length":4,"line":129,"character":10,"targetString":"data"},{"text":"(method) RCManager.get(key?: string | undefined): Promise<any>","docs":"","start":3007,"length":3,"line":129,"character":22,"targetString":"get"},{"text":"const data: Promise<any>","docs":"","start":3024,"length":4,"line":130,"character":11,"targetString":"data"},{"text":"(parameter) key: string","docs":"","start":3029,"length":3,"line":130,"character":16,"targetString":"key"},{"text":"const writeFile: any","docs":"","start":3044,"length":9,"line":131,"character":10,"targetString":"writeFile"},{"text":"(property) RCManager.path: string","docs":"","start":3059,"length":4,"line":131,"character":25,"targetString":"path"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":3065,"length":8,"line":131,"character":31,"targetString":"SafeJSON"},{"text":"(method) stringify(value: any, replacer?: (string | number)[] | null | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":3074,"length":9,"line":131,"character":40,"targetString":"stringify"},{"text":"const data: Promise<any>","docs":"","start":3084,"length":4,"line":131,"character":50,"targetString":"data"},{"text":"const prepare: MethodDecorator","docs":"保证文件读写前，文件是存在的","start":3107,"length":7,"line":133,"character":3,"targetString":"prepare"},{"text":"(method) RCManager.deleteSync(key: string): void","docs":"","start":3117,"length":10,"line":134,"character":2,"targetString":"deleteSync"},{"text":"(parameter) key: string","docs":"","start":3128,"length":3,"line":134,"character":13,"targetString":"key"},{"text":"const data: Promise<any>","docs":"","start":3153,"length":4,"line":135,"character":10,"targetString":"data"},{"text":"(method) RCManager.get(key?: string | undefined): Promise<any>","docs":"","start":3165,"length":3,"line":135,"character":22,"targetString":"get"},{"text":"const data: Promise<any>","docs":"","start":3182,"length":4,"line":136,"character":11,"targetString":"data"},{"text":"(parameter) key: string","docs":"","start":3187,"length":3,"line":136,"character":16,"targetString":"key"},{"text":"import fs","docs":"","start":3196,"length":2,"line":137,"character":4,"targetString":"fs"},{"text":"(property) RCManager.path: string","docs":"","start":3218,"length":4,"line":137,"character":26,"targetString":"path"},{"text":"const SafeJSON: Pick<JSON, \"parse\" | \"stringify\">","docs":"","start":3224,"length":8,"line":137,"character":32,"targetString":"SafeJSON"},{"text":"(method) stringify(value: any, replacer?: (string | number)[] | null | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":3233,"length":9,"line":137,"character":41,"targetString":"stringify"},{"text":"const data: Promise<any>","docs":"","start":3243,"length":4,"line":137,"character":51,"targetString":"data"}]],"/blog/Node/获取post-body":[[{"text":"const getBody: (req: any) => Promise<string>","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"getBody"},{"text":"(parameter) req: any","docs":"","start":17,"length":3,"line":0,"character":17,"targetString":"req"},{"text":"var Promise: PromiseConstructor\nnew <string>(executor: (resolve: (value: string | PromiseLike<string>) => void, reject: (reason?: any) => void) => void) => Promise<string>","docs":"Creates a new Promise.","start":48,"length":7,"line":1,"character":6,"targetString":"Promise"},{"text":"(parameter) resolve: (value: string | PromiseLike<string>) => void","docs":"","start":65,"length":7,"line":1,"character":23,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":74,"length":6,"line":1,"character":32,"targetString":"reject"},{"text":"const data: any[]","docs":"","start":97,"length":4,"line":2,"character":10,"targetString":"data"},{"text":"(parameter) req: any","docs":"","start":111,"length":3,"line":3,"character":4,"targetString":"req"},{"text":"(parameter) chunk: any","docs":"","start":126,"length":5,"line":3,"character":19,"targetString":"chunk"},{"text":"const data: any[]","docs":"","start":135,"length":4,"line":3,"character":28,"targetString":"data"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":140,"length":4,"line":3,"character":33,"targetString":"push"},{"text":"(parameter) chunk: any","docs":"","start":145,"length":5,"line":3,"character":38,"targetString":"chunk"},{"text":"(parameter) req: any","docs":"","start":157,"length":3,"line":4,"character":4,"targetString":"req"},{"text":"(parameter) resolve: (value: string | PromiseLike<string>) => void","docs":"","start":177,"length":7,"line":4,"character":24,"targetString":"resolve"},{"text":"const data: any[]","docs":"","start":185,"length":4,"line":4,"character":32,"targetString":"data"},{"text":"(method) Array<any>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":190,"length":4,"line":4,"character":37,"targetString":"join"},{"text":"(parameter) req: any","docs":"","start":205,"length":3,"line":5,"character":4,"targetString":"req"},{"text":"(parameter) err: any","docs":"","start":221,"length":3,"line":5,"character":20,"targetString":"err"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":228,"length":6,"line":5,"character":27,"targetString":"reject"},{"text":"(parameter) err: any","docs":"","start":235,"length":3,"line":5,"character":34,"targetString":"err"}]],"/blog/Node/获取本机IP（IPV4）":[[{"text":"const os: any","docs":"","start":6,"length":2,"line":0,"character":6,"targetString":"os"},{"text":"(local function) getLocalIP(): any","docs":"","start":52,"length":10,"line":2,"character":26,"targetString":"getLocalIP"},{"text":"const interfaces: any","docs":"","start":75,"length":10,"line":3,"character":8,"targetString":"interfaces"},{"text":"const os: any","docs":"","start":88,"length":2,"line":3,"character":21,"targetString":"os"},{"text":"const name: string","docs":"","start":124,"length":4,"line":4,"character":13,"targetString":"name"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":132,"length":6,"line":4,"character":21,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":139,"length":4,"line":4,"character":28,"targetString":"keys"},{"text":"const interfaces: any","docs":"","start":144,"length":10,"line":4,"character":33,"targetString":"interfaces"},{"text":"const interf: any","docs":"","start":174,"length":6,"line":5,"character":15,"targetString":"interf"},{"text":"const interfaces: any","docs":"","start":184,"length":10,"line":5,"character":25,"targetString":"interfaces"},{"text":"const name: string","docs":"","start":195,"length":4,"line":5,"character":36,"targetString":"name"},{"text":"const address: any","docs":"","start":218,"length":7,"line":6,"character":14,"targetString":"address"},{"text":"const family: any","docs":"","start":227,"length":6,"line":6,"character":23,"targetString":"family"},{"text":"const internal: any","docs":"","start":235,"length":8,"line":6,"character":31,"targetString":"internal"},{"text":"const interf: any","docs":"","start":248,"length":6,"line":6,"character":44,"targetString":"interf"},{"text":"const family: any","docs":"","start":265,"length":6,"line":7,"character":10,"targetString":"family"},{"text":"const internal: any","docs":"","start":287,"length":8,"line":7,"character":32,"targetString":"internal"},{"text":"const address: any","docs":"","start":314,"length":7,"line":8,"character":15,"targetString":"address"}]],"/blog/React-Hooks/useCopy":[[{"text":"import message","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"message"},{"text":"import ClipboardJS","docs":"","start":38,"length":11,"line":1,"character":7,"targetString":"ClipboardJS"},{"text":"import DependencyList","docs":"","start":76,"length":14,"line":2,"character":9,"targetString":"DependencyList"},{"text":"import useEffect","docs":"","start":92,"length":9,"line":2,"character":25,"targetString":"useEffect"},{"text":"import useRef","docs":"","start":103,"length":6,"line":2,"character":36,"targetString":"useRef"},{"text":"const useCopy: <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: (cp: any) => void | VoidFunction, deps?: any) => {\n    button: any;\n    target: any;\n}","docs":"","start":139,"length":7,"line":4,"character":13,"targetString":"useCopy"},{"text":"(type parameter) Button in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: (cp: any) => void | VoidFunction, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":153,"length":6,"line":5,"character":2,"targetString":"Button"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":168,"length":11,"line":5,"character":17,"targetString":"HTMLElement"},{"text":"(type parameter) Target in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: (cp: any) => void | VoidFunction, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":189,"length":6,"line":6,"character":2,"targetString":"Target"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":204,"length":11,"line":6,"character":17,"targetString":"HTMLElement"},{"text":"(parameter) init: (cp: any) => void | VoidFunction","docs":"","start":227,"length":4,"line":8,"character":2,"targetString":"init"},{"text":"(parameter) cp: any","docs":"","start":234,"length":2,"line":8,"character":9,"targetString":"cp"},{"text":"import ClipboardJS","docs":"","start":238,"length":11,"line":8,"character":13,"targetString":"ClipboardJS"},{"text":"interface VoidFunction","docs":"","start":261,"length":12,"line":8,"character":36,"targetString":"VoidFunction"},{"text":"(parameter) cp: any","docs":"","start":276,"length":2,"line":8,"character":51,"targetString":"cp"},{"text":"(parameter) cp: any","docs":"","start":288,"length":2,"line":9,"character":4,"targetString":"cp"},{"text":"import message","docs":"","start":311,"length":7,"line":9,"character":27,"targetString":"message"},{"text":"(parameter) deps: any","docs":"","start":343,"length":4,"line":11,"character":2,"targetString":"deps"},{"text":"import DependencyList","docs":"","start":349,"length":14,"line":11,"character":8,"targetString":"DependencyList"},{"text":"const ref: any","docs":"","start":384,"length":3,"line":13,"character":8,"targetString":"ref"},{"text":"import useRef","docs":"","start":390,"length":6,"line":13,"character":14,"targetString":"useRef"},{"text":"(type parameter) Button in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: (cp: any) => void | VoidFunction, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":397,"length":6,"line":13,"character":21,"targetString":"Button"},{"text":"const targetRef: any","docs":"","start":415,"length":9,"line":14,"character":8,"targetString":"targetRef"},{"text":"import useRef","docs":"","start":427,"length":6,"line":14,"character":20,"targetString":"useRef"},{"text":"(type parameter) Target in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: (cp: any) => void | VoidFunction, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":434,"length":6,"line":14,"character":27,"targetString":"Target"},{"text":"import useEffect","docs":"","start":446,"length":9,"line":15,"character":2,"targetString":"useEffect"},{"text":"const targetId: string","docs":"","start":474,"length":8,"line":16,"character":10,"targetString":"targetId"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":505,"length":4,"line":16,"character":41,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":510,"length":3,"line":16,"character":46,"targetString":"now"},{"text":"const ref: any","docs":"","start":526,"length":3,"line":17,"character":8,"targetString":"ref"},{"text":"const ref: any","docs":"","start":547,"length":3,"line":18,"character":6,"targetString":"ref"},{"text":"const targetId: string","docs":"","start":601,"length":8,"line":18,"character":60,"targetString":"targetId"},{"text":"const targetRef: any","docs":"","start":653,"length":9,"line":22,"character":8,"targetString":"targetRef"},{"text":"const targetRef: any","docs":"","start":680,"length":9,"line":23,"character":6,"targetString":"targetRef"},{"text":"const targetId: string","docs":"","start":703,"length":8,"line":23,"character":29,"targetString":"targetId"},{"text":"const ref: any","docs":"","start":731,"length":3,"line":25,"character":6,"targetString":"ref"},{"text":"const targetId: string","docs":"","start":748,"length":8,"line":25,"character":23,"targetString":"targetId"},{"text":"const cp: any","docs":"","start":773,"length":2,"line":27,"character":10,"targetString":"cp"},{"text":"import ClipboardJS","docs":"","start":782,"length":11,"line":27,"character":19,"targetString":"ClipboardJS"},{"text":"const ref: any","docs":"","start":794,"length":3,"line":27,"character":31,"targetString":"ref"},{"text":"(parameter) init: (cp: any) => void | VoidFunction","docs":"","start":811,"length":4,"line":28,"character":4,"targetString":"init"},{"text":"(parameter) init: (cp: any) => void | VoidFunction","docs":"","start":819,"length":4,"line":28,"character":12,"targetString":"init"},{"text":"const cp: any","docs":"","start":824,"length":2,"line":28,"character":17,"targetString":"cp"},{"text":"const cp: any","docs":"","start":845,"length":2,"line":29,"character":17,"targetString":"cp"},{"text":"(parameter) deps: any","docs":"","start":863,"length":4,"line":30,"character":5,"targetString":"deps"},{"text":"(property) button: any","docs":"","start":884,"length":6,"line":32,"character":4,"targetString":"button"},{"text":"const ref: any","docs":"","start":892,"length":3,"line":32,"character":12,"targetString":"ref"},{"text":"(property) target: any","docs":"","start":901,"length":6,"line":33,"character":4,"targetString":"target"},{"text":"const targetRef: any","docs":"","start":909,"length":9,"line":33,"character":12,"targetString":"targetRef"}],[{"text":"const copy: boolean","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"copy"},{"text":"const div: any","docs":"","start":25,"length":3,"line":2,"character":1,"targetString":"div"},{"text":"const ref: boolean","docs":"","start":29,"length":3,"line":2,"character":5,"targetString":"ref"},{"text":"(property) copy: boolean","docs":"","start":34,"length":4,"line":2,"character":10,"targetString":"copy"},{"text":"(property) copy: boolean","docs":"","start":38,"length":0,"line":2,"character":14,"targetString":""},{"text":"(property) copy: boolean","docs":"","start":38,"length":0,"line":2,"character":14,"targetString":""},{"text":"const div: any","docs":"","start":51,"length":3,"line":2,"character":27,"targetString":"div"},{"text":"const div: any","docs":"","start":54,"length":0,"line":2,"character":30,"targetString":""},{"text":"(JSX attribute) ref: any","docs":"","start":61,"length":3,"line":3,"character":5,"targetString":"ref"},{"text":"const copy: boolean","docs":"","start":66,"length":4,"line":3,"character":10,"targetString":"copy"}]],"/blog/React-Hooks/useDerivedStateFromProps":[[{"text":"import useState","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"useState"},{"text":"import useMemo","docs":"","start":19,"length":7,"line":0,"character":19,"targetString":"useMemo"},{"text":"import useRef","docs":"","start":28,"length":6,"line":0,"character":28,"targetString":"useRef"},{"text":"function useDerivedStateFromProps<T>(s: T): [T, (s: T) => void]","docs":"","start":67,"length":24,"line":2,"character":16,"targetString":"useDerivedStateFromProps"},{"text":"(type parameter) T in useDerivedStateFromProps<T>(s: T): [T, (s: T) => void]","docs":"","start":92,"length":1,"line":2,"character":41,"targetString":"T"},{"text":"(parameter) s: T","docs":"","start":95,"length":1,"line":2,"character":44,"targetString":"s"},{"text":"(type parameter) T in useDerivedStateFromProps<T>(s: T): [T, (s: T) => void]","docs":"","start":98,"length":1,"line":2,"character":47,"targetString":"T"},{"text":"(type parameter) T in useDerivedStateFromProps<T>(s: T): [T, (s: T) => void]","docs":"","start":103,"length":1,"line":2,"character":52,"targetString":"T"},{"text":"(parameter) s: T","docs":"","start":107,"length":1,"line":2,"character":56,"targetString":"s"},{"text":"(type parameter) T in useDerivedStateFromProps<T>(s: T): [T, (s: T) => void]","docs":"","start":110,"length":1,"line":2,"character":59,"targetString":"T"},{"text":"const stateRef: any","docs":"","start":132,"length":8,"line":3,"character":8,"targetString":"stateRef"},{"text":"import useRef","docs":"","start":143,"length":6,"line":3,"character":19,"targetString":"useRef"},{"text":"(type parameter) T in useDerivedStateFromProps<T>(s: T): [T, (s: T) => void]","docs":"","start":150,"length":1,"line":3,"character":26,"targetString":"T"},{"text":"(parameter) s: T","docs":"","start":153,"length":1,"line":3,"character":29,"targetString":"s"},{"text":"const _: any","docs":"","start":165,"length":1,"line":4,"character":9,"targetString":"_"},{"text":"const forceUpdate: any","docs":"","start":168,"length":11,"line":4,"character":12,"targetString":"forceUpdate"},{"text":"import useState","docs":"","start":183,"length":8,"line":4,"character":27,"targetString":"useState"},{"text":"import useMemo","docs":"","start":199,"length":7,"line":6,"character":2,"targetString":"useMemo"},{"text":"const stateRef: any","docs":"","start":219,"length":8,"line":7,"character":4,"targetString":"stateRef"},{"text":"(parameter) s: T","docs":"","start":238,"length":1,"line":7,"character":23,"targetString":"s"},{"text":"(parameter) s: T","docs":"","start":246,"length":1,"line":8,"character":6,"targetString":"s"},{"text":"const setState: (s: T) => void","docs":"","start":259,"length":8,"line":10,"character":8,"targetString":"setState"},{"text":"(parameter) s: T","docs":"","start":271,"length":1,"line":10,"character":20,"targetString":"s"},{"text":"(type parameter) T in useDerivedStateFromProps<T>(s: T): [T, (s: T) => void]","docs":"","start":274,"length":1,"line":10,"character":23,"targetString":"T"},{"text":"const stateRef: any","docs":"","start":286,"length":8,"line":11,"character":4,"targetString":"stateRef"},{"text":"(parameter) s: T","docs":"","start":305,"length":1,"line":11,"character":23,"targetString":"s"},{"text":"const forceUpdate: any","docs":"","start":311,"length":11,"line":12,"character":4,"targetString":"forceUpdate"},{"text":"const stateRef: any","docs":"","start":342,"length":8,"line":15,"character":10,"targetString":"stateRef"},{"text":"const setState: (s: T) => void","docs":"","start":360,"length":8,"line":15,"character":28,"targetString":"setState"}]],"/blog/React-Hooks/useEcharts":[[{"text":"import ECharts","docs":"","start":14,"length":7,"line":0,"character":14,"targetString":"ECharts"},{"text":"import React","docs":"","start":46,"length":5,"line":1,"character":7,"targetString":"React"},{"text":"import DependencyList","docs":"","start":55,"length":14,"line":1,"character":16,"targetString":"DependencyList"},{"text":"import useEffect","docs":"","start":71,"length":9,"line":1,"character":32,"targetString":"useEffect"},{"text":"import useRef","docs":"","start":82,"length":6,"line":1,"character":43,"targetString":"useRef"},{"text":"import useState","docs":"","start":90,"length":8,"line":1,"character":51,"targetString":"useState"},{"text":"const useEchartsLib: () => any","docs":"","start":121,"length":13,"line":3,"character":6,"targetString":"useEchartsLib"},{"text":"const lib: any","docs":"","start":154,"length":3,"line":4,"character":9,"targetString":"lib"},{"text":"const setLib: any","docs":"","start":159,"length":6,"line":4,"character":14,"targetString":"setLib"},{"text":"import useState","docs":"","start":169,"length":8,"line":4,"character":24,"targetString":"useState"},{"text":"import useEffect","docs":"","start":212,"length":9,"line":5,"character":2,"targetString":"useEffect"},{"text":"(method) Promise<any>.then<any, never>(onfulfilled?: ((value: any) => any) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<any>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":252,"length":4,"line":6,"character":22,"targetString":"then"},{"text":"(parameter) echarts: any","docs":"","start":257,"length":7,"line":6,"character":27,"targetString":"echarts"},{"text":"const setLib: any","docs":"","start":268,"length":6,"line":6,"character":38,"targetString":"setLib"},{"text":"(parameter) echarts: any","docs":"","start":275,"length":7,"line":6,"character":45,"targetString":"echarts"},{"text":"const lib: any","docs":"","start":303,"length":3,"line":8,"character":9,"targetString":"lib"},{"text":"type UseEchartsResult = [any, boolean]","docs":"","start":315,"length":16,"line":11,"character":5,"targetString":"UseEchartsResult"},{"text":"import React","docs":"","start":335,"length":5,"line":11,"character":25,"targetString":"React"},{"text":"interface HTMLDivElement","docs":"Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <div> elements.","start":358,"length":14,"line":11,"character":48,"targetString":"HTMLDivElement"},{"text":"function useEcharts(callback: (chart: any) => any, deps?: any): UseEchartsResult (+1 overload)","docs":"","start":401,"length":10,"line":13,"character":16,"targetString":"useEcharts"},{"text":"(parameter) callback: (chart: any) => any","docs":"","start":415,"length":8,"line":14,"character":2,"targetString":"callback"},{"text":"(parameter) chart: any","docs":"","start":426,"length":5,"line":14,"character":13,"targetString":"chart"},{"text":"import ECharts","docs":"","start":433,"length":7,"line":14,"character":20,"targetString":"ECharts"},{"text":"(parameter) deps: any","docs":"","start":452,"length":4,"line":15,"character":2,"targetString":"deps"},{"text":"import DependencyList","docs":"","start":459,"length":14,"line":15,"character":9,"targetString":"DependencyList"},{"text":"type UseEchartsResult = [any, boolean]","docs":"","start":477,"length":16,"line":16,"character":3,"targetString":"UseEchartsResult"},{"text":"function useEcharts(options: object, deps?: any): UseEchartsResult (+1 overload)","docs":"","start":510,"length":10,"line":17,"character":16,"targetString":"useEcharts"},{"text":"(parameter) options: object","docs":"","start":524,"length":7,"line":18,"character":2,"targetString":"options"},{"text":"(parameter) deps: any","docs":"","start":543,"length":4,"line":19,"character":2,"targetString":"deps"},{"text":"import DependencyList","docs":"","start":550,"length":14,"line":19,"character":9,"targetString":"DependencyList"},{"text":"type UseEchartsResult = [any, boolean]","docs":"","start":568,"length":16,"line":20,"character":3,"targetString":"UseEchartsResult"},{"text":"function useEcharts(callback: (chart: any) => any, deps?: any): UseEchartsResult (+1 overload)","docs":"","start":602,"length":10,"line":22,"character":16,"targetString":"useEcharts"},{"text":"(parameter) options: object | ((chart: any) => any | Promise<any>)","docs":"","start":616,"length":7,"line":23,"character":2,"targetString":"options"},{"text":"(parameter) chart: any","docs":"","start":627,"length":5,"line":23,"character":13,"targetString":"chart"},{"text":"import ECharts","docs":"","start":634,"length":7,"line":23,"character":20,"targetString":"ECharts"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":652,"length":7,"line":23,"character":38,"targetString":"Promise"},{"text":"(parameter) deps: any","docs":"","start":678,"length":4,"line":24,"character":2,"targetString":"deps"},{"text":"import DependencyList","docs":"","start":684,"length":14,"line":24,"character":8,"targetString":"DependencyList"},{"text":"type UseEchartsResult = [any, boolean]","docs":"","start":707,"length":16,"line":25,"character":3,"targetString":"UseEchartsResult"},{"text":"const ref: any","docs":"","start":734,"length":3,"line":26,"character":8,"targetString":"ref"},{"text":"import useRef","docs":"","start":740,"length":6,"line":26,"character":14,"targetString":"useRef"},{"text":"interface HTMLDivElement","docs":"Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <div> elements.","start":747,"length":14,"line":26,"character":21,"targetString":"HTMLDivElement"},{"text":"const loading: any","docs":"","start":774,"length":7,"line":27,"character":9,"targetString":"loading"},{"text":"const setLoading: any","docs":"","start":783,"length":10,"line":27,"character":18,"targetString":"setLoading"},{"text":"import useState","docs":"","start":797,"length":8,"line":27,"character":32,"targetString":"useState"},{"text":"const echarts: any","docs":"","start":822,"length":7,"line":29,"character":8,"targetString":"echarts"},{"text":"const useEchartsLib: () => any","docs":"","start":832,"length":13,"line":29,"character":18,"targetString":"useEchartsLib"},{"text":"import useEffect","docs":"","start":851,"length":9,"line":31,"character":2,"targetString":"useEffect"},{"text":"(parameter) options: object | ((chart: any) => any | Promise<any>)","docs":"","start":877,"length":7,"line":32,"character":8,"targetString":"options"},{"text":"const setLoading: any","docs":"","start":920,"length":10,"line":35,"character":4,"targetString":"setLoading"},{"text":"let chart: any","docs":"","start":945,"length":5,"line":36,"character":8,"targetString":"chart"},{"text":"import ECharts","docs":"","start":952,"length":7,"line":36,"character":15,"targetString":"ECharts"},{"text":"const echarts: any","docs":"","start":975,"length":7,"line":37,"character":8,"targetString":"echarts"},{"text":"let chart: any","docs":"","start":992,"length":5,"line":38,"character":6,"targetString":"chart"},{"text":"const echarts: any","docs":"","start":1000,"length":7,"line":38,"character":14,"targetString":"echarts"},{"text":"const ref: any","docs":"","start":1013,"length":3,"line":38,"character":27,"targetString":"ref"},{"text":"(parameter) options: object | ((chart: any) => any | Promise<any>)","docs":"","start":1043,"length":7,"line":39,"character":17,"targetString":"options"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":1077,"length":7,"line":40,"character":8,"targetString":"Promise"},{"text":"(method) PromiseConstructor.resolve<any>(value: any): Promise<any> (+1 overload)","docs":"Creates a new resolved promise for the provided value.","start":1085,"length":7,"line":40,"character":16,"targetString":"resolve"},{"text":"(parameter) options: (chart: any) => any | Promise<any>","docs":"","start":1093,"length":7,"line":40,"character":24,"targetString":"options"},{"text":"let chart: any","docs":"","start":1101,"length":5,"line":40,"character":32,"targetString":"chart"},{"text":"(method) Promise<any>.then<any, never>(onfulfilled?: ((value: any) => any) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<any>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":1109,"length":4,"line":40,"character":40,"targetString":"then"},{"text":"const setLoading: any","docs":"","start":1120,"length":10,"line":40,"character":51,"targetString":"setLoading"},{"text":"let chart: any","docs":"","start":1162,"length":5,"line":42,"character":8,"targetString":"chart"},{"text":"(parameter) options: object","docs":"","start":1178,"length":7,"line":42,"character":24,"targetString":"options"},{"text":"const setLoading: any","docs":"","start":1195,"length":10,"line":43,"character":8,"targetString":"setLoading"},{"text":"let chart: any","docs":"","start":1256,"length":5,"line":47,"character":10,"targetString":"chart"},{"text":"let chart: any","docs":"","start":1273,"length":5,"line":48,"character":8,"targetString":"chart"},{"text":"const echarts: any","docs":"","start":1309,"length":7,"line":51,"character":6,"targetString":"echarts"},{"text":"(parameter) deps: any","docs":"","start":1321,"length":4,"line":51,"character":18,"targetString":"deps"},{"text":"const ref: any","docs":"","start":1339,"length":3,"line":53,"character":10,"targetString":"ref"},{"text":"const loading: any","docs":"","start":1344,"length":7,"line":53,"character":15,"targetString":"loading"}],[{"text":"const ref: any","docs":"","start":7,"length":3,"line":0,"character":7,"targetString":"ref"},{"text":"const loading: any","docs":"","start":12,"length":7,"line":0,"character":12,"targetString":"loading"},{"text":"(property) data: never[]","docs":"","start":38,"length":4,"line":1,"character":2,"targetString":"data"},{"text":"(property) tooltip: {}","docs":"","start":50,"length":7,"line":2,"character":2,"targetString":"tooltip"},{"text":"const ref: boolean","docs":"","start":75,"length":3,"line":5,"character":5,"targetString":"ref"},{"text":"(property) ref: any","docs":"","start":80,"length":3,"line":5,"character":10,"targetString":"ref"}]],"/blog/React-Hooks/useI18N":[[{"text":"type I18NProps = {\n    [key: string]: {\n        zh: string;\n        en: string;\n    };\n}","docs":"","start":12,"length":9,"line":0,"character":12,"targetString":"I18NProps"},{"text":"(parameter) key: string","docs":"","start":29,"length":3,"line":1,"character":3,"targetString":"key"},{"text":"(property) zh: string","docs":"","start":49,"length":2,"line":2,"character":4,"targetString":"zh"},{"text":"(property) en: string","docs":"","start":65,"length":2,"line":3,"character":4,"targetString":"en"},{"text":"const useI18N: <T extends I18NProps>(options: T) => (key: keyof T) => string","docs":"","start":99,"length":7,"line":7,"character":13,"targetString":"useI18N"},{"text":"(type parameter) T in <T extends I18NProps>(options: T): (key: keyof T) => string","docs":"","start":110,"length":1,"line":7,"character":24,"targetString":"T"},{"text":"type I18NProps = {\n    [key: string]: {\n        zh: string;\n        en: string;\n    };\n}","docs":"","start":120,"length":9,"line":7,"character":34,"targetString":"I18NProps"},{"text":"(parameter) options: T extends I18NProps","docs":"","start":131,"length":7,"line":7,"character":45,"targetString":"options"},{"text":"(type parameter) T in <T extends I18NProps>(options: T): (key: keyof T) => string","docs":"","start":140,"length":1,"line":7,"character":54,"targetString":"T"},{"text":"const locale: any","docs":"","start":156,"length":6,"line":8,"character":8,"targetString":"locale"},{"text":"const isCN: boolean","docs":"","start":194,"length":4,"line":9,"character":8,"targetString":"isCN"},{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":212,"length":4,"line":9,"character":26,"targetString":"test"},{"text":"const locale: any","docs":"","start":217,"length":6,"line":9,"character":31,"targetString":"locale"},{"text":"(parameter) key: keyof T","docs":"","start":236,"length":3,"line":10,"character":10,"targetString":"key"},{"text":"(type parameter) T in <T extends I18NProps>(options: T): (key: keyof T) => string","docs":"","start":247,"length":1,"line":10,"character":21,"targetString":"T"},{"text":"(parameter) options: T extends I18NProps","docs":"","start":253,"length":7,"line":10,"character":27,"targetString":"options"},{"text":"(parameter) key: keyof T","docs":"","start":261,"length":3,"line":10,"character":35,"targetString":"key"},{"text":"const isCN: boolean","docs":"","start":266,"length":4,"line":10,"character":40,"targetString":"isCN"}],[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"const i18n: any","docs":"","start":28,"length":4,"line":1,"character":8,"targetString":"i18n"},{"text":"(property) placeholder: {\n    zh: string;\n    en: string;\n}","docs":"","start":49,"length":11,"line":2,"character":4,"targetString":"placeholder"},{"text":"(property) zh: string","docs":"","start":70,"length":2,"line":3,"character":6,"targetString":"zh"},{"text":"(property) en: string","docs":"","start":91,"length":2,"line":4,"character":6,"targetString":"en"},{"text":"const i18n: any","docs":"","start":145,"length":4,"line":7,"character":15,"targetString":"i18n"}]],"/blog/React-Hooks/useInputHistory":[[{"text":"import useEffect","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"useEffect"},{"text":"import useState","docs":"","start":20,"length":8,"line":0,"character":20,"targetString":"useState"},{"text":"const InputHistory: {\n    max: number;\n    getList(key: string): string[];\n    pushItem(key: string, value: any): void;\n}","docs":"","start":51,"length":12,"line":2,"character":6,"targetString":"InputHistory"},{"text":"(property) max: number","docs":"","start":70,"length":3,"line":3,"character":2,"targetString":"max"},{"text":"(method) getList(key: string): string[]","docs":"","start":80,"length":7,"line":4,"character":2,"targetString":"getList"},{"text":"(parameter) key: string","docs":"","start":88,"length":3,"line":4,"character":10,"targetString":"key"},{"text":"const list: string | null","docs":"","start":123,"length":4,"line":5,"character":10,"targetString":"list"},{"text":"var localStorage: Storage","docs":"","start":130,"length":12,"line":5,"character":17,"targetString":"localStorage"},{"text":"(method) Storage.getItem(key: string): string | null","docs":"Returns the current value associated with the given key, or null if the given key does not exist.","start":143,"length":7,"line":5,"character":30,"targetString":"getItem"},{"text":"(parameter) key: string","docs":"","start":151,"length":3,"line":5,"character":38,"targetString":"key"},{"text":"const list: string | null","docs":"","start":164,"length":4,"line":6,"character":8,"targetString":"list"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":185,"length":4,"line":7,"character":13,"targetString":"JSON"},{"text":"(method) JSON.parse(text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined): any","docs":"Converts a JavaScript Object Notation (JSON) string into an object.","start":190,"length":5,"line":7,"character":18,"targetString":"parse"},{"text":"const list: string","docs":"","start":196,"length":4,"line":7,"character":24,"targetString":"list"},{"text":"(method) pushItem(key: string, value: any): void","docs":"","start":244,"length":8,"line":12,"character":2,"targetString":"pushItem"},{"text":"(parameter) key: string","docs":"","start":253,"length":3,"line":12,"character":11,"targetString":"key"},{"text":"(parameter) value: any","docs":"","start":266,"length":5,"line":12,"character":24,"targetString":"value"},{"text":"const list: string[]","docs":"","start":296,"length":4,"line":13,"character":10,"targetString":"list"},{"text":"const InputHistory: {\n    max: number;\n    getList(key: string): string[];\n    pushItem(key: string, value: any): void;\n}","docs":"","start":303,"length":12,"line":13,"character":17,"targetString":"InputHistory"},{"text":"(method) getList(key: string): string[]","docs":"","start":316,"length":7,"line":13,"character":30,"targetString":"getList"},{"text":"(parameter) key: string","docs":"","start":324,"length":3,"line":13,"character":38,"targetString":"key"},{"text":"const list: string[]","docs":"","start":339,"length":4,"line":14,"character":4,"targetString":"list"},{"text":"(method) Array<string>.unshift(...items: string[]): number","docs":"Inserts new elements at the start of an array, and returns the new length of the array.","start":344,"length":7,"line":14,"character":9,"targetString":"unshift"},{"text":"(parameter) value: any","docs":"","start":352,"length":5,"line":14,"character":17,"targetString":"value"},{"text":"var localStorage: Storage","docs":"","start":363,"length":12,"line":15,"character":4,"targetString":"localStorage"},{"text":"(method) Storage.setItem(key: string, value: string): void","docs":"Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n\nThrows a \"QuotaExceededError\" DOMException exception if the new value couldn't be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n\nDispatches a storage event on Window objects holding an equivalent Storage object.","start":376,"length":7,"line":15,"character":17,"targetString":"setItem"},{"text":"(parameter) key: string","docs":"","start":391,"length":3,"line":16,"character":6,"targetString":"key"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":402,"length":4,"line":17,"character":6,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":407,"length":9,"line":17,"character":11,"targetString":"stringify"},{"text":"var Set: SetConstructor\nnew <string>(iterable?: Iterable<string> | null | undefined) => Set<string> (+1 overload)","docs":"","start":425,"length":3,"line":17,"character":29,"targetString":"Set"},{"text":"const list: string[]","docs":"","start":429,"length":4,"line":17,"character":33,"targetString":"list"},{"text":"(method) Array<string>.slice(start?: number | undefined, end?: number | undefined): string[]","docs":"Returns a copy of a section of an array.\r\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\r\nFor example, -2 refers to the second to last element of the array.","start":436,"length":5,"line":17,"character":40,"targetString":"slice"},{"text":"const InputHistory: {\n    max: number;\n    getList(key: string): string[];\n    pushItem(key: string, value: any): void;\n}","docs":"","start":445,"length":12,"line":17,"character":49,"targetString":"InputHistory"},{"text":"(property) max: number","docs":"","start":458,"length":3,"line":17,"character":62,"targetString":"max"},{"text":"const useInputHistory: (key: string, defaultList?: never[]) => [string[], (value: string) => void]","docs":"","start":491,"length":15,"line":22,"character":13,"targetString":"useInputHistory"},{"text":"(parameter) key: string","docs":"","start":513,"length":3,"line":23,"character":2,"targetString":"key"},{"text":"(parameter) defaultList: never[]","docs":"","start":528,"length":11,"line":24,"character":2,"targetString":"defaultList"},{"text":"(parameter) value: string","docs":"","start":560,"length":5,"line":25,"character":15,"targetString":"value"},{"text":"const list: any","docs":"","start":598,"length":4,"line":26,"character":9,"targetString":"list"},{"text":"const setList: any","docs":"","start":604,"length":7,"line":26,"character":15,"targetString":"setList"},{"text":"import useState","docs":"","start":615,"length":8,"line":26,"character":26,"targetString":"useState"},{"text":"const setDisplayList: (list: string[]) => void","docs":"","start":647,"length":14,"line":28,"character":8,"targetString":"setDisplayList"},{"text":"(parameter) list: string[]","docs":"","start":665,"length":4,"line":28,"character":26,"targetString":"list"},{"text":"(parameter) list: string[]","docs":"","start":694,"length":4,"line":29,"character":8,"targetString":"list"},{"text":"(property) Array<string>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":699,"length":6,"line":29,"character":13,"targetString":"length"},{"text":"const setList: any","docs":"","start":715,"length":7,"line":30,"character":6,"targetString":"setList"},{"text":"(parameter) list: string[]","docs":"","start":723,"length":4,"line":30,"character":14,"targetString":"list"},{"text":"const setList: any","docs":"","start":748,"length":7,"line":32,"character":6,"targetString":"setList"},{"text":"(parameter) defaultList: never[]","docs":"","start":756,"length":11,"line":32,"character":14,"targetString":"defaultList"},{"text":"const initHistoryList: () => void","docs":"","start":788,"length":15,"line":36,"character":8,"targetString":"initHistoryList"},{"text":"const history: string[]","docs":"","start":824,"length":7,"line":37,"character":10,"targetString":"history"},{"text":"const InputHistory: {\n    max: number;\n    getList(key: string): string[];\n    pushItem(key: string, value: any): void;\n}","docs":"","start":834,"length":12,"line":37,"character":20,"targetString":"InputHistory"},{"text":"(method) getList(key: string): string[]","docs":"","start":847,"length":7,"line":37,"character":33,"targetString":"getList"},{"text":"(parameter) key: string","docs":"","start":855,"length":3,"line":37,"character":41,"targetString":"key"},{"text":"const history: string[]","docs":"","start":868,"length":7,"line":38,"character":8,"targetString":"history"},{"text":"const setDisplayList: (list: string[]) => void","docs":"","start":885,"length":14,"line":39,"character":6,"targetString":"setDisplayList"},{"text":"const history: string[]","docs":"","start":900,"length":7,"line":39,"character":21,"targetString":"history"},{"text":"import useEffect","docs":"","start":922,"length":9,"line":43,"character":2,"targetString":"useEffect"},{"text":"const initHistoryList: () => void","docs":"","start":944,"length":15,"line":44,"character":4,"targetString":"initHistoryList"},{"text":"(parameter) key: string","docs":"","start":968,"length":3,"line":45,"character":6,"targetString":"key"},{"text":"const pushItem: (value: string) => void","docs":"","start":983,"length":8,"line":47,"character":8,"targetString":"pushItem"},{"text":"(parameter) value: string","docs":"","start":995,"length":5,"line":47,"character":20,"targetString":"value"},{"text":"(parameter) value: string","docs":"","start":1023,"length":5,"line":48,"character":8,"targetString":"value"},{"text":"const InputHistory: {\n    max: number;\n    getList(key: string): string[];\n    pushItem(key: string, value: any): void;\n}","docs":"","start":1038,"length":12,"line":49,"character":6,"targetString":"InputHistory"},{"text":"(method) pushItem(key: string, value: any): void","docs":"","start":1051,"length":8,"line":49,"character":19,"targetString":"pushItem"},{"text":"(parameter) key: string","docs":"","start":1060,"length":3,"line":49,"character":28,"targetString":"key"},{"text":"(parameter) value: string","docs":"","start":1065,"length":5,"line":49,"character":33,"targetString":"value"},{"text":"const initHistoryList: () => void","docs":"","start":1078,"length":15,"line":50,"character":6,"targetString":"initHistoryList"},{"text":"const list: any","docs":"","start":1117,"length":4,"line":54,"character":10,"targetString":"list"},{"text":"const pushItem: (value: string) => void","docs":"","start":1123,"length":8,"line":54,"character":16,"targetString":"pushItem"}],[{"text":"const searchList: any","docs":"","start":7,"length":10,"line":0,"character":7,"targetString":"searchList"},{"text":"const setSearchList: any","docs":"","start":19,"length":13,"line":0,"character":19,"targetString":"setSearchList"}]],"/blog/React-Hooks/useIntersection":[[{"text":"import useEffect","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"useEffect"},{"text":"import useRef","docs":"","start":20,"length":6,"line":0,"character":20,"targetString":"useRef"},{"text":"const map: WeakMap<Element, (target: Element) => void>","docs":"","start":49,"length":3,"line":2,"character":6,"targetString":"map"},{"text":"var WeakMap: WeakMapConstructor\nnew <Element, (target: Element) => void>(entries?: readonly [Element, (target: Element) => void][] | null | undefined) => WeakMap<Element, (target: Element) => void> (+1 overload)","docs":"","start":59,"length":7,"line":2,"character":16,"targetString":"WeakMap"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":67,"length":7,"line":2,"character":24,"targetString":"Element"},{"text":"(parameter) target: Element","docs":"","start":77,"length":6,"line":2,"character":34,"targetString":"target"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":85,"length":7,"line":2,"character":42,"targetString":"Element"},{"text":"let IO: IntersectionObserver","docs":"","start":110,"length":2,"line":4,"character":4,"targetString":"IO"},{"text":"interface IntersectionObserver","docs":"provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.","start":114,"length":20,"line":4,"character":8,"targetString":"IntersectionObserver"},{"text":"var window: Window & typeof globalThis","docs":"","start":156,"length":6,"line":6,"character":9,"targetString":"window"},{"text":"var IntersectionObserver: {\n    new (callback: IntersectionObserverCallback, options?: IntersectionObserverInit | undefined): IntersectionObserver;\n    prototype: IntersectionObserver;\n}","docs":"provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.","start":191,"length":20,"line":7,"character":9,"targetString":"IntersectionObserver"},{"text":"let IO: IntersectionObserver","docs":"","start":234,"length":2,"line":9,"character":2,"targetString":"IO"},{"text":"var IntersectionObserver: new (callback: IntersectionObserverCallback, options?: IntersectionObserverInit | undefined) => IntersectionObserver","docs":"provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.","start":243,"length":20,"line":9,"character":11,"targetString":"IntersectionObserver"},{"text":"(parameter) entries: IntersectionObserverEntry[]","docs":"","start":264,"length":7,"line":9,"character":32,"targetString":"entries"},{"text":"(parameter) entries: IntersectionObserverEntry[]","docs":"","start":281,"length":7,"line":10,"character":4,"targetString":"entries"},{"text":"(method) Array<IntersectionObserverEntry>.forEach(callbackfn: (value: IntersectionObserverEntry, index: number, array: IntersectionObserverEntry[]) => void, thisArg?: any): void","docs":"Performs the specified action for each element in an array.","start":289,"length":7,"line":10,"character":12,"targetString":"forEach"},{"text":"(parameter) item: IntersectionObserverEntry","docs":"","start":297,"length":4,"line":10,"character":20,"targetString":"item"},{"text":"(parameter) item: IntersectionObserverEntry","docs":"","start":317,"length":4,"line":11,"character":10,"targetString":"item"},{"text":"(property) IntersectionObserverEntry.isIntersecting: boolean","docs":"","start":322,"length":14,"line":11,"character":15,"targetString":"isIntersecting"},{"text":"const map: WeakMap<Element, (target: Element) => void>","docs":"","start":348,"length":3,"line":12,"character":8,"targetString":"map"},{"text":"(method) WeakMap<Element, (target: Element) => void>.get(key: Element): ((target: Element) => void) | undefined","docs":"","start":352,"length":3,"line":12,"character":12,"targetString":"get"},{"text":"(parameter) item: IntersectionObserverEntry","docs":"","start":356,"length":4,"line":12,"character":16,"targetString":"item"},{"text":"(property) IntersectionObserverEntry.target: Element","docs":"","start":361,"length":6,"line":12,"character":21,"targetString":"target"},{"text":"(parameter) item: IntersectionObserverEntry","docs":"","start":369,"length":4,"line":12,"character":29,"targetString":"item"},{"text":"(property) IntersectionObserverEntry.target: Element","docs":"","start":374,"length":6,"line":12,"character":34,"targetString":"target"},{"text":"const useIntersection: (callback: (target: Element) => void, enable?: boolean) => any","docs":"","start":418,"length":15,"line":18,"character":13,"targetString":"useIntersection"},{"text":"(parameter) callback: (target: Element) => void","docs":"","start":440,"length":8,"line":19,"character":2,"targetString":"callback"},{"text":"(parameter) target: Element","docs":"","start":451,"length":6,"line":19,"character":13,"targetString":"target"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":459,"length":7,"line":19,"character":21,"targetString":"Element"},{"text":"(parameter) enable: boolean","docs":"","start":479,"length":6,"line":20,"character":2,"targetString":"enable"},{"text":"const ref: any","docs":"","start":508,"length":3,"line":22,"character":8,"targetString":"ref"},{"text":"import useRef","docs":"","start":514,"length":6,"line":22,"character":14,"targetString":"useRef"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":521,"length":11,"line":22,"character":21,"targetString":"HTMLElement"},{"text":"import useEffect","docs":"","start":538,"length":9,"line":23,"character":2,"targetString":"useEffect"},{"text":"(parameter) enable: boolean","docs":"","start":565,"length":6,"line":24,"character":9,"targetString":"enable"},{"text":"let IO: IntersectionObserver","docs":"","start":588,"length":2,"line":25,"character":8,"targetString":"IO"},{"text":"(parameter) callback: (target: Element) => void","docs":"","start":674,"length":8,"line":27,"character":13,"targetString":"callback"},{"text":"const ref: any","docs":"","start":683,"length":3,"line":27,"character":22,"targetString":"ref"},{"text":"const map: WeakMap<Element, (target: Element) => void>","docs":"","start":706,"length":3,"line":29,"character":4,"targetString":"map"},{"text":"(method) WeakMap<Element, (target: Element) => void>.set(key: Element, value: (target: Element) => void): WeakMap<Element, (target: Element) => void>","docs":"","start":710,"length":3,"line":29,"character":8,"targetString":"set"},{"text":"const ref: any","docs":"","start":714,"length":3,"line":29,"character":12,"targetString":"ref"},{"text":"(parameter) callback: (target: Element) => void","docs":"","start":727,"length":8,"line":29,"character":25,"targetString":"callback"},{"text":"let IO: IntersectionObserver","docs":"","start":741,"length":2,"line":30,"character":4,"targetString":"IO"},{"text":"(method) IntersectionObserver.observe(target: Element): void","docs":"","start":744,"length":7,"line":30,"character":7,"targetString":"observe"},{"text":"const ref: any","docs":"","start":752,"length":3,"line":30,"character":15,"targetString":"ref"},{"text":"let IO: IntersectionObserver","docs":"","start":790,"length":2,"line":32,"character":6,"targetString":"IO"},{"text":"(method) IntersectionObserver.unobserve(target: Element): void","docs":"","start":793,"length":9,"line":32,"character":9,"targetString":"unobserve"},{"text":"const ref: any","docs":"","start":803,"length":3,"line":32,"character":19,"targetString":"ref"},{"text":"const map: WeakMap<Element, (target: Element) => void>","docs":"","start":822,"length":3,"line":33,"character":6,"targetString":"map"},{"text":"(method) WeakMap<Element, (target: Element) => void>.delete(key: Element): boolean","docs":"","start":826,"length":6,"line":33,"character":10,"targetString":"delete"},{"text":"const ref: any","docs":"","start":833,"length":3,"line":33,"character":17,"targetString":"ref"},{"text":"(parameter) callback: (target: Element) => void","docs":"","start":858,"length":8,"line":35,"character":6,"targetString":"callback"},{"text":"(parameter) enable: boolean","docs":"","start":868,"length":6,"line":35,"character":16,"targetString":"enable"},{"text":"const ref: any","docs":"","start":887,"length":3,"line":37,"character":9,"targetString":"ref"}],[{"text":"import AntdAvatar","docs":"","start":7,"length":10,"line":0,"character":7,"targetString":"AntdAvatar"},{"text":"import AvatarProps","docs":"","start":21,"length":11,"line":0,"character":21,"targetString":"AvatarProps"},{"text":"import React","docs":"","start":65,"length":5,"line":1,"character":7,"targetString":"React"},{"text":"import useState","docs":"","start":74,"length":8,"line":1,"character":16,"targetString":"useState"},{"text":"import useUpdateEffect","docs":"","start":107,"length":15,"line":2,"character":9,"targetString":"useUpdateEffect"},{"text":"interface Avatar","docs":"","start":160,"length":6,"line":4,"character":17,"targetString":"Avatar"},{"text":"import AvatarProps","docs":"","start":175,"length":11,"line":4,"character":32,"targetString":"AvatarProps"},{"text":"(property) Avatar.src?: string | undefined","docs":"","start":191,"length":3,"line":5,"character":2,"targetString":"src"},{"text":"(property) Avatar.lazy?: boolean | undefined","docs":"","start":206,"length":4,"line":6,"character":2,"targetString":"lazy"},{"text":"const Avatar: ({ src, lazy, ...props }: Avatar) => any","docs":"","start":237,"length":6,"line":9,"character":13,"targetString":"Avatar"},{"text":"var src: string | undefined","docs":"","start":249,"length":3,"line":9,"character":25,"targetString":"src"},{"text":"var lazy: boolean","docs":"","start":254,"length":4,"line":9,"character":30,"targetString":"lazy"},{"text":"var props: {}","docs":"","start":271,"length":5,"line":9,"character":47,"targetString":"props"},{"text":"interface Avatar","docs":"","start":280,"length":6,"line":9,"character":56,"targetString":"Avatar"},{"text":"const display: any","docs":"","start":302,"length":7,"line":10,"character":9,"targetString":"display"},{"text":"const setDisplay: any","docs":"","start":311,"length":10,"line":10,"character":18,"targetString":"setDisplay"},{"text":"import useState","docs":"","start":325,"length":8,"line":10,"character":32,"targetString":"useState"},{"text":"var lazy: boolean","docs":"","start":342,"length":4,"line":10,"character":49,"targetString":"lazy"},{"text":"var src: string | undefined","docs":"","start":356,"length":3,"line":10,"character":63,"targetString":"src"},{"text":"import useUpdateEffect","docs":"","start":364,"length":15,"line":12,"character":2,"targetString":"useUpdateEffect"},{"text":"const setDisplay: any","docs":"","start":392,"length":10,"line":13,"character":4,"targetString":"setDisplay"},{"text":"var src: string | undefined","docs":"","start":403,"length":3,"line":13,"character":15,"targetString":"src"},{"text":"var src: string | undefined","docs":"","start":414,"length":3,"line":14,"character":6,"targetString":"src"},{"text":"const ref: any","docs":"","start":429,"length":3,"line":16,"character":8,"targetString":"ref"},{"text":"const setDisplay: any","docs":"","start":463,"length":10,"line":17,"character":4,"targetString":"setDisplay"},{"text":"var src: string | undefined","docs":"","start":474,"length":3,"line":17,"character":15,"targetString":"src"},{"text":"var lazy: boolean","docs":"","start":484,"length":4,"line":18,"character":5,"targetString":"lazy"},{"text":"import AntdAvatar","docs":"","start":501,"length":10,"line":20,"character":10,"targetString":"AntdAvatar"},{"text":"(JSX attribute) ref: any","docs":"","start":512,"length":3,"line":20,"character":21,"targetString":"ref"},{"text":"const ref: any","docs":"","start":517,"length":3,"line":20,"character":26,"targetString":"ref"},{"text":"var props: {}","docs":"","start":526,"length":5,"line":20,"character":35,"targetString":"props"},{"text":"(JSX attribute) src: any","docs":"","start":533,"length":3,"line":20,"character":42,"targetString":"src"},{"text":"const display: any","docs":"","start":538,"length":7,"line":20,"character":47,"targetString":"display"},{"text":"const avatar: any","docs":"","start":559,"length":6,"line":23,"character":6,"targetString":"avatar"},{"text":"const Avatar: ({ src, lazy, ...props }: Avatar) => any","docs":"","start":569,"length":6,"line":23,"character":16,"targetString":"Avatar"},{"text":"(JSX attribute) Avatar.src?: string | undefined","docs":"","start":576,"length":3,"line":23,"character":23,"targetString":"src"},{"text":"(JSX attribute) Avatar.lazy?: boolean | undefined","docs":"","start":586,"length":4,"line":23,"character":33,"targetString":"lazy"}]],"/blog/React-Hooks/useInterval":[[{"text":"import useEffect","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"useEffect"},{"text":"import useRef","docs":"","start":20,"length":6,"line":0,"character":20,"targetString":"useRef"},{"text":"type Delay = number | null","docs":"","start":48,"length":5,"line":2,"character":5,"targetString":"Delay"},{"text":"type TimerHandler = (...args: any[]) => void","docs":"","start":75,"length":12,"line":3,"character":5,"targetString":"TimerHandler"},{"text":"(parameter) args: any[]","docs":"","start":94,"length":4,"line":3,"character":24,"targetString":"args"},{"text":"const useInterval: (callback: TimerHandler, delay: Delay) => void","docs":"","start":129,"length":11,"line":5,"character":13,"targetString":"useInterval"},{"text":"(parameter) callback: TimerHandler","docs":"","start":144,"length":8,"line":5,"character":28,"targetString":"callback"},{"text":"type TimerHandler = (...args: any[]) => void","docs":"","start":154,"length":12,"line":5,"character":38,"targetString":"TimerHandler"},{"text":"(parameter) delay: Delay","docs":"","start":168,"length":5,"line":5,"character":52,"targetString":"delay"},{"text":"type Delay = number | null","docs":"","start":175,"length":5,"line":5,"character":59,"targetString":"Delay"},{"text":"const savedCallbackRef: any","docs":"","start":195,"length":16,"line":6,"character":8,"targetString":"savedCallbackRef"},{"text":"import useRef","docs":"","start":214,"length":6,"line":6,"character":27,"targetString":"useRef"},{"text":"type TimerHandler = (...args: any[]) => void","docs":"","start":221,"length":12,"line":6,"character":34,"targetString":"TimerHandler"},{"text":"import useEffect","docs":"","start":240,"length":9,"line":8,"character":2,"targetString":"useEffect"},{"text":"const savedCallbackRef: any","docs":"","start":262,"length":16,"line":9,"character":4,"targetString":"savedCallbackRef"},{"text":"(parameter) callback: TimerHandler","docs":"","start":289,"length":8,"line":9,"character":31,"targetString":"callback"},{"text":"(parameter) callback: TimerHandler","docs":"","start":304,"length":8,"line":10,"character":6,"targetString":"callback"},{"text":"import useEffect","docs":"","start":318,"length":9,"line":12,"character":2,"targetString":"useEffect"},{"text":"const handler: (...args: any[]) => any","docs":"","start":346,"length":7,"line":13,"character":10,"targetString":"handler"},{"text":"(parameter) args: any[]","docs":"","start":360,"length":4,"line":13,"character":24,"targetString":"args"},{"text":"const savedCallbackRef: any","docs":"","start":376,"length":16,"line":13,"character":40,"targetString":"savedCallbackRef"},{"text":"(parameter) args: any[]","docs":"","start":405,"length":4,"line":13,"character":69,"targetString":"args"},{"text":"(parameter) delay: Delay","docs":"","start":420,"length":5,"line":15,"character":8,"targetString":"delay"},{"text":"const intervalId: number","docs":"","start":450,"length":10,"line":16,"character":12,"targetString":"intervalId"},{"text":"function setInterval(handler: globalThis.TimerHandler, timeout?: number | undefined, ...arguments: any[]): number","docs":"","start":463,"length":11,"line":16,"character":25,"targetString":"setInterval"},{"text":"const handler: (...args: any[]) => any","docs":"","start":475,"length":7,"line":16,"character":37,"targetString":"handler"},{"text":"(parameter) delay: number","docs":"","start":484,"length":5,"line":16,"character":46,"targetString":"delay"},{"text":"function clearInterval(handle?: number | undefined): void","docs":"","start":510,"length":13,"line":17,"character":19,"targetString":"clearInterval"},{"text":"const intervalId: number","docs":"","start":524,"length":10,"line":17,"character":33,"targetString":"intervalId"},{"text":"(parameter) delay: Delay","docs":"","start":548,"length":5,"line":19,"character":6,"targetString":"delay"}]],"/blog/React-Hooks/useLoadScript":[[{"text":"import useEffect","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"useEffect"},{"text":"import useRef","docs":"","start":20,"length":6,"line":0,"character":20,"targetString":"useRef"},{"text":"import useState","docs":"","start":28,"length":8,"line":0,"character":28,"targetString":"useState"},{"text":"type Cache = {\n    dom: HTMLScriptElement;\n    lib: any;\n}","docs":"","start":58,"length":5,"line":2,"character":5,"targetString":"Cache"},{"text":"(property) dom: HTMLScriptElement","docs":"","start":70,"length":3,"line":3,"character":2,"targetString":"dom"},{"text":"interface HTMLScriptElement","docs":"HTML <script> elements expose the HTMLScriptElement interface, which provides special properties and methods for manipulating the behavior and execution of <script> elements (beyond the inherited HTMLElement interface).","start":75,"length":17,"line":3,"character":7,"targetString":"HTMLScriptElement"},{"text":"(property) lib: any","docs":"","start":95,"length":3,"line":4,"character":2,"targetString":"lib"},{"text":"const map: Map<string, Cache>","docs":"","start":113,"length":3,"line":7,"character":6,"targetString":"map"},{"text":"var Map: MapConstructor\nnew <string, Cache>(entries?: readonly (readonly [string, Cache])[] | null | undefined) => Map<string, Cache> (+2 overloads)","docs":"","start":123,"length":3,"line":7,"character":16,"targetString":"Map"},{"text":"type Cache = {\n    dom: HTMLScriptElement;\n    lib: any;\n}","docs":"","start":135,"length":5,"line":7,"character":28,"targetString":"Cache"},{"text":"const useLoadScript: any","docs":"","start":158,"length":13,"line":9,"character":13,"targetString":"useLoadScript"}],[{"text":"const Hls: any","docs":"","start":7,"length":3,"line":0,"character":7,"targetString":"Hls"},{"text":"const loading: any","docs":"","start":12,"length":7,"line":0,"character":12,"targetString":"loading"}]],"/blog/React-Hooks/useRouter":[[{"text":"import StackActions","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"StackActions"},{"text":"import useNavigation","docs":"","start":23,"length":13,"line":0,"character":23,"targetString":"useNavigation"},{"text":"import useRoute","docs":"","start":38,"length":8,"line":0,"character":38,"targetString":"useRoute"},{"text":"const useRouter: <P extends {\n    [k: string]: any;\n}>() => {\n    push: any;\n    back: () => void;\n    reset: (screen: string, params?: any) => void;\n    exit: () => void;\n    replace: (screen: string, params?: any) => any;\n    getParams: () => P;\n}","docs":"","start":94,"length":9,"line":2,"character":13,"targetString":"useRouter"},{"text":"(type parameter) P in <P extends {\n    [k: string]: any;\n}>(): {\n    push: any;\n    back: () => void;\n    reset: (screen: string, params?: any) => void;\n    exit: () => void;\n    replace: (screen: string, params?: any) => any;\n    getParams: () => P;\n}","docs":"","start":107,"length":1,"line":2,"character":26,"targetString":"P"},{"text":"(parameter) k: string","docs":"","start":120,"length":1,"line":2,"character":39,"targetString":"k"},{"text":"const navigation: any","docs":"","start":154,"length":10,"line":3,"character":8,"targetString":"navigation"},{"text":"import useNavigation","docs":"","start":167,"length":13,"line":3,"character":21,"targetString":"useNavigation"},{"text":"const route: any","docs":"","start":192,"length":5,"line":4,"character":8,"targetString":"route"},{"text":"import useRoute","docs":"","start":200,"length":8,"line":4,"character":16,"targetString":"useRoute"},{"text":"(property) push: any","docs":"","start":227,"length":4,"line":6,"character":4,"targetString":"push"},{"text":"const navigation: any","docs":"","start":233,"length":10,"line":6,"character":10,"targetString":"navigation"},{"text":"(property) back: () => void","docs":"","start":258,"length":4,"line":7,"character":4,"targetString":"back"},{"text":"const navigation: any","docs":"","start":282,"length":10,"line":8,"character":10,"targetString":"navigation"},{"text":"const navigation: any","docs":"","start":316,"length":10,"line":9,"character":8,"targetString":"navigation"},{"text":"(property) reset: (screen: string, params?: any) => void","docs":"","start":398,"length":5,"line":14,"character":4,"targetString":"reset"},{"text":"(parameter) screen: string","docs":"","start":406,"length":6,"line":14,"character":12,"targetString":"screen"},{"text":"(parameter) params: any","docs":"","start":422,"length":6,"line":14,"character":28,"targetString":"params"},{"text":"const navigation: any","docs":"","start":447,"length":10,"line":15,"character":6,"targetString":"navigation"},{"text":"(property) index: number","docs":"","start":474,"length":5,"line":16,"character":8,"targetString":"index"},{"text":"(property) routes: {\n    name: string;\n    params: any;\n}[]","docs":"","start":492,"length":6,"line":17,"character":8,"targetString":"routes"},{"text":"(property) name: string","docs":"","start":503,"length":4,"line":17,"character":19,"targetString":"name"},{"text":"(parameter) screen: string","docs":"","start":509,"length":6,"line":17,"character":25,"targetString":"screen"},{"text":"(property) params: any","docs":"","start":517,"length":6,"line":17,"character":33,"targetString":"params"},{"text":"(property) exit: () => void","docs":"","start":549,"length":4,"line":20,"character":4,"targetString":"exit"},{"text":"(property) replace: (screen: string, params?: any) => any","docs":"","start":594,"length":7,"line":21,"character":4,"targetString":"replace"},{"text":"(parameter) screen: string","docs":"","start":604,"length":6,"line":21,"character":14,"targetString":"screen"},{"text":"(parameter) params: any","docs":"","start":620,"length":6,"line":21,"character":30,"targetString":"params"},{"text":"const navigation: any","docs":"","start":643,"length":10,"line":22,"character":6,"targetString":"navigation"},{"text":"import StackActions","docs":"","start":663,"length":12,"line":22,"character":26,"targetString":"StackActions"},{"text":"(parameter) screen: string","docs":"","start":684,"length":6,"line":22,"character":47,"targetString":"screen"},{"text":"(parameter) params: any","docs":"","start":692,"length":6,"line":22,"character":55,"targetString":"params"},{"text":"(property) getParams: () => P","docs":"","start":706,"length":9,"line":23,"character":4,"targetString":"getParams"},{"text":"const route: any","docs":"","start":724,"length":5,"line":23,"character":22,"targetString":"route"},{"text":"(type parameter) P in <P extends {\n    [k: string]: any;\n}>(): {\n    push: any;\n    back: () => void;\n    reset: (screen: string, params?: any) => void;\n    exit: () => void;\n    replace: (screen: string, params?: any) => any;\n    getParams: () => P;\n}","docs":"","start":749,"length":1,"line":23,"character":47,"targetString":"P"}]],"/blog/React-Hooks/useSetParticalState":[[{"text":"import useState","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"useState"},{"text":"const useSetParticalState: any","docs":"","start":48,"length":19,"line":2,"character":13,"targetString":"useSetParticalState"}]],"/blog/React-Hooks/useTimer":[[{"text":"import useMemo","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"useMemo"},{"text":"import useRef","docs":"","start":18,"length":6,"line":0,"character":18,"targetString":"useRef"},{"text":"import useState","docs":"","start":26,"length":8,"line":0,"character":26,"targetString":"useState"},{"text":"import useInterval","docs":"","start":60,"length":11,"line":2,"character":9,"targetString":"useInterval"},{"text":"const useTimer: (s?: number, interval?: number) => any","docs":"","start":109,"length":8,"line":4,"character":13,"targetString":"useTimer"},{"text":"(parameter) s: number","docs":"","start":121,"length":1,"line":4,"character":25,"targetString":"s"},{"text":"(parameter) interval: number","docs":"","start":128,"length":8,"line":4,"character":32,"targetString":"interval"},{"text":"const ref: any","docs":"","start":155,"length":3,"line":5,"character":8,"targetString":"ref"},{"text":"import useRef","docs":"","start":161,"length":6,"line":5,"character":14,"targetString":"useRef"},{"text":"(parameter) s: number","docs":"","start":168,"length":1,"line":5,"character":21,"targetString":"s"},{"text":"const _: any","docs":"","start":180,"length":1,"line":6,"character":9,"targetString":"_"},{"text":"const setState: any","docs":"","start":183,"length":8,"line":6,"character":12,"targetString":"setState"},{"text":"import useState","docs":"","start":195,"length":8,"line":6,"character":24,"targetString":"useState"},{"text":"import useMemo","docs":"","start":211,"length":7,"line":8,"character":2,"targetString":"useMemo"},{"text":"const ref: any","docs":"","start":231,"length":3,"line":9,"character":4,"targetString":"ref"},{"text":"(parameter) s: number","docs":"","start":245,"length":1,"line":9,"character":18,"targetString":"s"},{"text":"(parameter) s: number","docs":"","start":253,"length":1,"line":10,"character":6,"targetString":"s"},{"text":"import useInterval","docs":"","start":260,"length":11,"line":12,"character":2,"targetString":"useInterval"},{"text":"const ref: any","docs":"","start":284,"length":3,"line":13,"character":4,"targetString":"ref"},{"text":"(parameter) interval: number","docs":"","start":299,"length":8,"line":13,"character":19,"targetString":"interval"},{"text":"const setState: any","docs":"","start":312,"length":8,"line":14,"character":4,"targetString":"setState"},{"text":"(parameter) interval: number","docs":"","start":337,"length":8,"line":15,"character":12,"targetString":"interval"},{"text":"const ref: any","docs":"","start":357,"length":3,"line":17,"character":9,"targetString":"ref"}]],"/blog/Javascript基础/ES7,ES8,ES9,ES10新特性":[[{"text":"(method) Array<number>.includes(searchElement: number, fromIndex?: number | undefined): boolean","docs":"Determines whether an array includes a certain element, returning true or false as appropriate.","start":11,"length":8,"line":0,"character":11,"targetString":"includes"},{"text":"(method) Array<number>.includes(searchElement: number, fromIndex?: number | undefined): boolean","docs":"Determines whether an array includes a certain element, returning true or false as appropriate.","start":42,"length":8,"line":1,"character":11,"targetString":"includes"}],[],[{"text":"function get(): Promise<any>","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"get"},{"text":"const res: any","docs":"","start":31,"length":3,"line":1,"character":8,"targetString":"res"},{"text":"const res: any","docs":"","start":66,"length":3,"line":2,"character":9,"targetString":"res"},{"text":"const get: () => Promise<any>","docs":"","start":84,"length":3,"line":5,"character":6,"targetString":"get"},{"text":"const res: any","docs":"","start":112,"length":3,"line":6,"character":8,"targetString":"res"},{"text":"const res: any","docs":"","start":147,"length":3,"line":7,"character":9,"targetString":"res"}],[{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":0,"length":6,"line":0,"character":0,"targetString":"Object"},{"text":"(property) a: number","docs":"","start":16,"length":1,"line":0,"character":16,"targetString":"a"},{"text":"(property) b: number","docs":"","start":22,"length":1,"line":0,"character":22,"targetString":"b"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":41,"length":6,"line":2,"character":0,"targetString":"Object"},{"text":"(property) a: number","docs":"","start":58,"length":1,"line":2,"character":17,"targetString":"a"},{"text":"(property) b: number","docs":"","start":64,"length":1,"line":2,"character":23,"targetString":"b"}],[],[{"text":"const a: number","docs":"","start":8,"length":1,"line":0,"character":8,"targetString":"a"},{"text":"const rest: {\n    b: number;\n    c: number;\n}","docs":"","start":14,"length":4,"line":0,"character":14,"targetString":"rest"},{"text":"(property) a: any","docs":"","start":25,"length":1,"line":0,"character":25,"targetString":"a"},{"text":"(property) b: number","docs":"","start":31,"length":1,"line":0,"character":31,"targetString":"b"},{"text":"(property) c: number","docs":"","start":37,"length":1,"line":0,"character":37,"targetString":"c"},{"text":"const rest: {\n    b: number;\n    c: number;\n}","docs":"","start":44,"length":4,"line":1,"character":0,"targetString":"rest"},{"text":"const state: any","docs":"","start":73,"length":5,"line":3,"character":7,"targetString":"state"},{"text":"const setState: any","docs":"","start":80,"length":8,"line":3,"character":14,"targetString":"setState"},{"text":"(property) id: number","docs":"","start":103,"length":2,"line":3,"character":37,"targetString":"id"},{"text":"(property) name: string","docs":"","start":110,"length":4,"line":3,"character":44,"targetString":"name"},{"text":"const setState: any","docs":"","start":192,"length":8,"line":5,"character":0,"targetString":"setState"},{"text":"const state: any","docs":"","start":206,"length":5,"line":5,"character":14,"targetString":"state"},{"text":"(property) name: string","docs":"","start":213,"length":4,"line":5,"character":21,"targetString":"name"}],[{"text":"const arrAsy: Promise<unknown>[]","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"arrAsy"},{"text":"(method) Array<number>.map<Promise<unknown>>(callbackfn: (value: number, index: number, array: number[]) => Promise<unknown>, thisArg?: any): Promise<unknown>[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":22,"length":3,"line":0,"character":22,"targetString":"map"},{"text":"(parameter) v: number","docs":"","start":26,"length":1,"line":0,"character":26,"targetString":"v"},{"text":"var Promise: PromiseConstructor\nnew <unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise<unknown>","docs":"Creates a new Promise.","start":35,"length":7,"line":0,"character":35,"targetString":"Promise"},{"text":"(parameter) res: (value: unknown) => void","docs":"","start":43,"length":3,"line":0,"character":43,"targetString":"res"},{"text":"function setTimeout(handler: TimerHandler, timeout?: number | undefined, ...arguments: any[]): number","docs":"","start":50,"length":10,"line":0,"character":50,"targetString":"setTimeout"},{"text":"(parameter) res: (value: unknown) => void","docs":"","start":61,"length":3,"line":0,"character":61,"targetString":"res"},{"text":"(parameter) v: number","docs":"","start":72,"length":1,"line":0,"character":72,"targetString":"v"},{"text":"const v: unknown","docs":"","start":119,"length":1,"line":3,"character":19,"targetString":"v"},{"text":"const arrAsy: Promise<unknown>[]","docs":"","start":124,"length":6,"line":3,"character":24,"targetString":"arrAsy"},{"text":"var console: Console","docs":"","start":138,"length":7,"line":4,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":146,"length":3,"line":4,"character":12,"targetString":"log"},{"text":"const v: unknown","docs":"","start":150,"length":1,"line":4,"character":16,"targetString":"v"}],[{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":10,"length":4,"line":0,"character":10,"targetString":"test"}],[{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":11,"length":4,"line":0,"character":11,"targetString":"test"}],[{"text":"(method) String.replace(searchValue: {\n    [Symbol.replace](string: string, replaceValue: string): string;\n}, replaceValue: string): string (+3 overloads)","docs":"Replaces first match with string or all matches with RegExp.","start":6,"length":7,"line":0,"character":6,"targetString":"replace"},{"text":"(method) String.replace(searchValue: {\n    [Symbol.replace](string: string, replaceValue: string): string;\n}, replaceValue: string): string (+3 overloads)","docs":"Replaces first match with string or all matches with RegExp.","start":57,"length":7,"line":3,"character":6,"targetString":"replace"}]],"/blog/Javascript基础/HTML特殊字符转义":[[{"text":"const element: \"<script>hello</script>\"","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"element"},{"text":"const transform0: (element: any) => any","docs":"","start":48,"length":10,"line":2,"character":6,"targetString":"transform0"},{"text":"(parameter) element: any","docs":"","start":61,"length":7,"line":2,"character":19,"targetString":"element"},{"text":"const words: any","docs":"","start":94,"length":5,"line":4,"character":8,"targetString":"words"},{"text":"(parameter) element: any","docs":"","start":102,"length":7,"line":4,"character":16,"targetString":"element"},{"text":"const reg: RegExp","docs":"","start":128,"length":3,"line":5,"character":8,"targetString":"reg"},{"text":"let res: RegExpExecArray | null","docs":"","start":147,"length":3,"line":6,"character":6,"targetString":"res"},{"text":"const reg: RegExp","docs":"","start":153,"length":3,"line":6,"character":12,"targetString":"reg"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":157,"length":4,"line":6,"character":16,"targetString":"exec"},{"text":"(parameter) element: any","docs":"","start":162,"length":7,"line":6,"character":21,"targetString":"element"},{"text":"let res: RegExpExecArray | null","docs":"","start":180,"length":3,"line":7,"character":9,"targetString":"res"},{"text":"const index: number","docs":"","start":241,"length":5,"line":9,"character":10,"targetString":"index"},{"text":"const reg: RegExp","docs":"","start":249,"length":3,"line":9,"character":18,"targetString":"reg"},{"text":"(property) RegExp.lastIndex: number","docs":"","start":253,"length":9,"line":9,"character":22,"targetString":"lastIndex"},{"text":"const words: any","docs":"","start":287,"length":5,"line":11,"character":4,"targetString":"words"},{"text":"const index: number","docs":"","start":300,"length":5,"line":11,"character":17,"targetString":"index"},{"text":"(parameter) element: any","docs":"","start":310,"length":7,"line":11,"character":27,"targetString":"element"},{"text":"const index: number","docs":"","start":329,"length":5,"line":11,"character":46,"targetString":"index"},{"text":"let res: RegExpExecArray | null","docs":"","start":358,"length":3,"line":13,"character":4,"targetString":"res"},{"text":"const reg: RegExp","docs":"","start":364,"length":3,"line":13,"character":10,"targetString":"reg"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":368,"length":4,"line":13,"character":14,"targetString":"exec"},{"text":"(parameter) element: any","docs":"","start":373,"length":7,"line":13,"character":19,"targetString":"element"},{"text":"const words: any","docs":"","start":395,"length":5,"line":15,"character":9,"targetString":"words"},{"text":"var console: Console","docs":"","start":413,"length":7,"line":18,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":421,"length":3,"line":18,"character":8,"targetString":"log"},{"text":"const transform0: (element: any) => any","docs":"","start":425,"length":10,"line":18,"character":12,"targetString":"transform0"},{"text":"const element: \"<script>hello</script>\"","docs":"","start":436,"length":7,"line":18,"character":23,"targetString":"element"}],[{"text":"const transform1: (element: any) => string","docs":"","start":33,"length":10,"line":1,"character":6,"targetString":"transform1"},{"text":"(parameter) element: any","docs":"","start":46,"length":7,"line":1,"character":19,"targetString":"element"},{"text":"const dom: HTMLSpanElement","docs":"","start":67,"length":3,"line":2,"character":8,"targetString":"dom"},{"text":"var document: Document","docs":"","start":73,"length":8,"line":2,"character":14,"targetString":"document"},{"text":"(method) Document.createElement<\"span\">(tagName: \"span\", options?: ElementCreationOptions | undefined): HTMLSpanElement (+2 overloads)","docs":"Creates an instance of the element for the specified tag.","start":82,"length":13,"line":2,"character":23,"targetString":"createElement"},{"text":"const dom: HTMLSpanElement","docs":"","start":106,"length":3,"line":3,"character":2,"targetString":"dom"},{"text":"(property) HTMLElement.innerText: string","docs":"","start":110,"length":9,"line":3,"character":6,"targetString":"innerText"},{"text":"(parameter) element: any","docs":"","start":122,"length":7,"line":3,"character":18,"targetString":"element"},{"text":"const dom: HTMLSpanElement","docs":"","start":139,"length":3,"line":4,"character":9,"targetString":"dom"},{"text":"(property) InnerHTML.innerHTML: string","docs":"","start":143,"length":9,"line":4,"character":13,"targetString":"innerHTML"},{"text":"var console: Console","docs":"","start":156,"length":7,"line":7,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":164,"length":3,"line":7,"character":8,"targetString":"log"},{"text":"const transform1: (element: any) => string","docs":"","start":168,"length":10,"line":7,"character":12,"targetString":"transform1"}],[{"text":"import ReactDOM","docs":"","start":7,"length":8,"line":0,"character":7,"targetString":"ReactDOM"},{"text":"const transformHTML: (element: any) => any","docs":"","start":47,"length":13,"line":2,"character":6,"targetString":"transformHTML"},{"text":"(parameter) element: any","docs":"","start":63,"length":7,"line":2,"character":22,"targetString":"element"},{"text":"import ReactDOM","docs":"","start":74,"length":8,"line":2,"character":33,"targetString":"ReactDOM"},{"text":"(parameter) element: any","docs":"","start":101,"length":7,"line":2,"character":60,"targetString":"element"}]],"/blog/Javascript基础/JSONP跨域":[[{"text":"const jsonp: (url: any) => Promise<unknown>","docs":"","start":37,"length":5,"line":3,"character":6,"targetString":"jsonp"},{"text":"(parameter) url: any","docs":"","start":45,"length":3,"line":3,"character":14,"targetString":"url"},{"text":"var Promise: PromiseConstructor\nnew <unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise<unknown>","docs":"Creates a new Promise.","start":58,"length":7,"line":4,"character":6,"targetString":"Promise"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":67,"length":7,"line":4,"character":15,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":76,"length":6,"line":4,"character":24,"targetString":"reject"},{"text":"const script: HTMLScriptElement","docs":"","start":111,"length":6,"line":6,"character":10,"targetString":"script"},{"text":"var document: Document","docs":"","start":120,"length":8,"line":6,"character":19,"targetString":"document"},{"text":"(method) Document.createElement<\"script\">(tagName: \"script\", options?: ElementCreationOptions | undefined): HTMLScriptElement (+2 overloads)","docs":"Creates an instance of the element for the specified tag.","start":129,"length":13,"line":6,"character":28,"targetString":"createElement"},{"text":"const callbackId: string","docs":"","start":176,"length":10,"line":8,"character":10,"targetString":"callbackId"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":198,"length":4,"line":8,"character":32,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":203,"length":3,"line":8,"character":37,"targetString":"now"},{"text":"const script: HTMLScriptElement","docs":"","start":249,"length":6,"line":10,"character":4,"targetString":"script"},{"text":"(property) HTMLScriptElement.src: string","docs":"Retrieves the URL to an external file that contains the source code or data.","start":256,"length":3,"line":10,"character":11,"targetString":"src"},{"text":"(parameter) url: any","docs":"","start":262,"length":3,"line":10,"character":17,"targetString":"url"},{"text":"(parameter) url: any","docs":"","start":291,"length":3,"line":11,"character":11,"targetString":"url"},{"text":"const callbackId: string","docs":"","start":307,"length":10,"line":11,"character":27,"targetString":"callbackId"},{"text":"(parameter) url: any","docs":"","start":331,"length":3,"line":12,"character":11,"targetString":"url"},{"text":"const callbackId: string","docs":"","start":347,"length":10,"line":12,"character":27,"targetString":"callbackId"},{"text":"const script: HTMLScriptElement","docs":"","start":396,"length":6,"line":14,"character":4,"targetString":"script"},{"text":"(property) HTMLScriptElement.referrerPolicy: string","docs":"","start":403,"length":14,"line":14,"character":11,"targetString":"referrerPolicy"},{"text":"var window: Window & typeof globalThis","docs":"","start":473,"length":6,"line":16,"character":4,"targetString":"window"},{"text":"const callbackId: string","docs":"","start":480,"length":10,"line":16,"character":11,"targetString":"callbackId"},{"text":"(parameter) result: any","docs":"","start":494,"length":6,"line":16,"character":25,"targetString":"result"},{"text":"var window: Window & typeof globalThis","docs":"","start":533,"length":6,"line":18,"character":13,"targetString":"window"},{"text":"const callbackId: string","docs":"","start":540,"length":10,"line":18,"character":20,"targetString":"callbackId"},{"text":"var document: Document","docs":"","start":558,"length":8,"line":19,"character":6,"targetString":"document"},{"text":"(property) Document.body: HTMLElement","docs":"Specifies the beginning and end of the document body.","start":567,"length":4,"line":19,"character":15,"targetString":"body"},{"text":"(method) Node.removeChild<HTMLScriptElement>(child: HTMLScriptElement): HTMLScriptElement","docs":"","start":572,"length":11,"line":19,"character":20,"targetString":"removeChild"},{"text":"const script: HTMLScriptElement","docs":"","start":584,"length":6,"line":19,"character":32,"targetString":"script"},{"text":"(parameter) result: any","docs":"","start":610,"length":6,"line":21,"character":6,"targetString":"result"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":619,"length":7,"line":21,"character":15,"targetString":"resolve"},{"text":"(parameter) result: any","docs":"","start":627,"length":6,"line":21,"character":23,"targetString":"result"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":637,"length":6,"line":21,"character":33,"targetString":"reject"},{"text":"const script: HTMLScriptElement","docs":"","start":661,"length":6,"line":23,"character":4,"targetString":"script"},{"text":"(method) HTMLScriptElement.addEventListener<\"error\">(type: \"error\", listener: (this: HTMLScriptElement, ev: ErrorEvent) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"\n\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":668,"length":16,"line":23,"character":11,"targetString":"addEventListener"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":700,"length":6,"line":23,"character":43,"targetString":"reject"},{"text":"var document: Document","docs":"","start":746,"length":8,"line":25,"character":4,"targetString":"document"},{"text":"(property) Document.body: HTMLElement","docs":"Specifies the beginning and end of the document body.","start":755,"length":4,"line":25,"character":13,"targetString":"body"},{"text":"(method) Node.appendChild<HTMLScriptElement>(node: HTMLScriptElement): HTMLScriptElement","docs":"","start":760,"length":11,"line":25,"character":18,"targetString":"appendChild"},{"text":"const script: HTMLScriptElement","docs":"","start":772,"length":6,"line":25,"character":30,"targetString":"script"},{"text":"const jsonp: (url: any) => Promise<unknown>","docs":"","start":786,"length":5,"line":28,"character":0,"targetString":"jsonp"},{"text":"(method) Promise<unknown>.then<void, never>(onfulfilled?: ((value: unknown) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":844,"length":4,"line":28,"character":58,"targetString":"then"},{"text":"var console: Console","docs":"","start":849,"length":7,"line":28,"character":63,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":857,"length":3,"line":28,"character":71,"targetString":"log"}]],"/blog/Javascript基础/bind call apply和原理":[[{"text":"const objContext: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}","docs":"","start":15,"length":10,"line":1,"character":6,"targetString":"objContext"},{"text":"(property) value: number","docs":"","start":32,"length":5,"line":2,"character":2,"targetString":"value"},{"text":"(method) getValue(v1: any, v2: any): any","docs":"","start":44,"length":8,"line":3,"character":2,"targetString":"getValue"},{"text":"(parameter) v1: any","docs":"","start":53,"length":2,"line":3,"character":11,"targetString":"v1"},{"text":"(parameter) v2: any","docs":"","start":57,"length":2,"line":3,"character":15,"targetString":"v2"},{"text":"(parameter) v1: any","docs":"","start":71,"length":2,"line":4,"character":8,"targetString":"v1"},{"text":"(parameter) v2: any","docs":"","start":77,"length":2,"line":4,"character":14,"targetString":"v2"},{"text":"(parameter) v1: any","docs":"","start":88,"length":2,"line":4,"character":25,"targetString":"v1"},{"text":"(parameter) v2: any","docs":"","start":93,"length":2,"line":4,"character":30,"targetString":"v2"},{"text":"(property) value: number","docs":"","start":103,"length":5,"line":4,"character":40,"targetString":"value"},{"text":"(property) value: number","docs":"","start":125,"length":5,"line":5,"character":16,"targetString":"value"},{"text":"const method: (v1: any, v2: any) => any","docs":"","start":158,"length":6,"line":9,"character":6,"targetString":"method"},{"text":"const objContext: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}","docs":"","start":167,"length":10,"line":9,"character":15,"targetString":"objContext"},{"text":"(method) getValue(v1: any, v2: any): any","docs":"","start":178,"length":8,"line":9,"character":26,"targetString":"getValue"},{"text":"var console: Console","docs":"","start":213,"length":7,"line":12,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":221,"length":3,"line":12,"character":8,"targetString":"log"},{"text":"const method: (v1: any, v2: any) => any","docs":"","start":225,"length":6,"line":12,"character":12,"targetString":"method"},{"text":"var console: Console","docs":"","start":284,"length":7,"line":15,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":292,"length":3,"line":15,"character":8,"targetString":"log"},{"text":"const method: (v1: any, v2: any) => any","docs":"","start":296,"length":6,"line":15,"character":12,"targetString":"method"},{"text":"(method) CallableFunction.apply<{\n    value: number;\n    getValue(v1: any, v2: any): any;\n}, any>(this: (this: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}) => any, thisArg: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}): any (+1 overload)","docs":"Calls the function with the specified object as the this value and the elements of specified array as the arguments.","start":303,"length":5,"line":15,"character":19,"targetString":"apply"},{"text":"const objContext: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}","docs":"","start":309,"length":10,"line":15,"character":25,"targetString":"objContext"},{"text":"var console: Console","docs":"","start":327,"length":7,"line":16,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":335,"length":3,"line":16,"character":8,"targetString":"log"},{"text":"const method: (v1: any, v2: any) => any","docs":"","start":339,"length":6,"line":16,"character":12,"targetString":"method"},{"text":"(method) CallableFunction.call<{\n    value: number;\n    getValue(v1: any, v2: any): any;\n}, [v1: any, v2: any], any>(this: (this: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}, v1: any, v2: any) => any, thisArg: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}, v1: any, v2: any): any","docs":"Calls the function with the specified object as the this value and the specified rest arguments as the arguments.","start":346,"length":4,"line":16,"character":19,"targetString":"call"},{"text":"const objContext: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}","docs":"","start":351,"length":10,"line":16,"character":24,"targetString":"objContext"},{"text":"var console: Console","docs":"","start":369,"length":7,"line":17,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":377,"length":3,"line":17,"character":8,"targetString":"log"},{"text":"const method: (v1: any, v2: any) => any","docs":"","start":381,"length":6,"line":17,"character":12,"targetString":"method"},{"text":"(method) CallableFunction.bind<(v1: any, v2: any) => any>(this: (v1: any, v2: any) => any, thisArg: unknown): (v1: any, v2: any) => any (+5 overloads)","docs":"For a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","start":388,"length":4,"line":17,"character":19,"targetString":"bind"},{"text":"const objContext: {\n    value: number;\n    getValue(v1: any, v2: any): any;\n}","docs":"","start":393,"length":10,"line":17,"character":24,"targetString":"objContext"}],[{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":0,"length":8,"line":0,"character":0,"targetString":"Function"},{"text":"(property) FunctionConstructor.prototype: Function","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"prototype"},{"text":"(parameter) thisArg: any","docs":"","start":37,"length":7,"line":0,"character":37,"targetString":"thisArg"},{"text":"(parameter) argArray: any[]","docs":"","start":49,"length":8,"line":0,"character":49,"targetString":"argArray"},{"text":"const id: unique symbol","docs":"","start":108,"length":2,"line":2,"character":8,"targetString":"id"},{"text":"var Symbol: SymbolConstructor\n(description?: string | number | undefined) => symbol","docs":"Returns a new unique Symbol value.","start":113,"length":6,"line":2,"character":13,"targetString":"Symbol"},{"text":"(parameter) thisArg: any","docs":"","start":149,"length":7,"line":4,"character":12,"targetString":"thisArg"},{"text":"var window: Window & typeof globalThis","docs":"","start":160,"length":6,"line":4,"character":23,"targetString":"window"},{"text":"const id: unique symbol","docs":"","start":198,"length":2,"line":6,"character":10,"targetString":"id"},{"text":"const result: any","docs":"","start":241,"length":6,"line":8,"character":8,"targetString":"result"},{"text":"const id: unique symbol","docs":"","start":258,"length":2,"line":8,"character":25,"targetString":"id"},{"text":"(parameter) argArray: any[]","docs":"","start":265,"length":8,"line":8,"character":32,"targetString":"argArray"},{"text":"const id: unique symbol","docs":"","start":316,"length":2,"line":10,"character":17,"targetString":"id"},{"text":"const result: any","docs":"","start":339,"length":6,"line":12,"character":9,"targetString":"result"}],[{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":0,"length":8,"line":0,"character":0,"targetString":"Function"},{"text":"(property) FunctionConstructor.prototype: Function","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"prototype"},{"text":"(parameter) thisArg: any","docs":"","start":37,"length":7,"line":0,"character":37,"targetString":"thisArg"},{"text":"(parameter) argArray: any[]","docs":"","start":49,"length":8,"line":0,"character":49,"targetString":"argArray"},{"text":"(parameter) thisArg: any","docs":"","start":88,"length":7,"line":1,"character":27,"targetString":"thisArg"},{"text":"(parameter) argArray: any[]","docs":"","start":100,"length":8,"line":1,"character":39,"targetString":"argArray"}],[{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":0,"length":8,"line":0,"character":0,"targetString":"Function"},{"text":"(property) FunctionConstructor.prototype: Function","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"prototype"},{"text":"(parameter) thisArg: any","docs":"","start":38,"length":7,"line":0,"character":38,"targetString":"thisArg"},{"text":"(parameter) argArray: never[]","docs":"","start":47,"length":8,"line":0,"character":47,"targetString":"argArray"},{"text":"(parameter) thisArg: any","docs":"","start":85,"length":7,"line":1,"character":21,"targetString":"thisArg"},{"text":"(parameter) argArray: never[]","docs":"","start":97,"length":8,"line":1,"character":33,"targetString":"argArray"}],[{"text":"var console: Console","docs":"","start":0,"length":7,"line":0,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":8,"length":3,"line":0,"character":8,"targetString":"log"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":12,"length":4,"line":0,"character":12,"targetString":"Math"},{"text":"(method) Math.max(...values: number[]): number","docs":"Returns the larger of a set of supplied numeric expressions.","start":17,"length":3,"line":0,"character":17,"targetString":"max"},{"text":"var console: Console","docs":"","start":55,"length":7,"line":2,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":63,"length":3,"line":2,"character":8,"targetString":"log"},{"text":"var console: Console","docs":"","start":108,"length":7,"line":3,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":116,"length":3,"line":3,"character":8,"targetString":"log"},{"text":"var console: Console","docs":"","start":158,"length":7,"line":4,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":166,"length":3,"line":4,"character":8,"targetString":"log"},{"text":"var console: Console","docs":"","start":211,"length":7,"line":6,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":219,"length":3,"line":6,"character":8,"targetString":"log"}]],"/blog/Javascript基础/classnames":[[{"text":"type Value = string | number | boolean | null | undefined","docs":"","start":12,"length":5,"line":0,"character":12,"targetString":"Value"},{"text":"type Mapping = {\n    [key: string]: any;\n}","docs":"","start":77,"length":7,"line":1,"character":12,"targetString":"Mapping"},{"text":"(parameter) key: string","docs":"","start":90,"length":3,"line":1,"character":25,"targetString":"key"},{"text":"type Argument = Value | Mapping | Argument[]","docs":"","start":122,"length":8,"line":2,"character":12,"targetString":"Argument"},{"text":"type Value = string | number | boolean | null | undefined","docs":"","start":133,"length":5,"line":2,"character":23,"targetString":"Value"},{"text":"type Mapping = {\n    [key: string]: any;\n}","docs":"","start":141,"length":7,"line":2,"character":31,"targetString":"Mapping"},{"text":"type Argument = Value | Mapping | Argument[]","docs":"","start":151,"length":8,"line":2,"character":41,"targetString":"Argument"},{"text":"const classnames: (...args: Argument[]) => string","docs":"","start":176,"length":10,"line":4,"character":13,"targetString":"classnames"},{"text":"(parameter) args: Argument[]","docs":"","start":193,"length":4,"line":4,"character":30,"targetString":"args"},{"text":"type Argument = Value | Mapping | Argument[]","docs":"","start":199,"length":8,"line":4,"character":36,"targetString":"Argument"},{"text":"const classes: any[]","docs":"","start":232,"length":7,"line":5,"character":8,"targetString":"classes"},{"text":"let i: number","docs":"","start":257,"length":1,"line":7,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":264,"length":1,"line":7,"character":18,"targetString":"i"},{"text":"(parameter) args: Argument[]","docs":"","start":268,"length":4,"line":7,"character":22,"targetString":"args"},{"text":"(property) Array<Argument>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":273,"length":6,"line":7,"character":27,"targetString":"length"},{"text":"let i: number","docs":"","start":281,"length":1,"line":7,"character":35,"targetString":"i"},{"text":"const arg: Argument","docs":"","start":298,"length":3,"line":8,"character":10,"targetString":"arg"},{"text":"(parameter) args: Argument[]","docs":"","start":304,"length":4,"line":8,"character":16,"targetString":"args"},{"text":"let i: number","docs":"","start":309,"length":1,"line":8,"character":21,"targetString":"i"},{"text":"const arg: Argument","docs":"","start":351,"length":3,"line":10,"character":9,"targetString":"arg"},{"text":"const argType: \"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\"","docs":"","start":376,"length":7,"line":12,"character":10,"targetString":"argType"},{"text":"const arg: string | number | true | Mapping | Argument[]","docs":"","start":393,"length":3,"line":12,"character":27,"targetString":"arg"},{"text":"const argType: \"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\"","docs":"","start":405,"length":7,"line":13,"character":8,"targetString":"argType"},{"text":"const argType: \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\"","docs":"","start":429,"length":7,"line":13,"character":32,"targetString":"argType"},{"text":"const classes: any[]","docs":"","start":459,"length":7,"line":14,"character":6,"targetString":"classes"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":467,"length":4,"line":14,"character":14,"targetString":"push"},{"text":"const arg: string | number | true | Mapping | Argument[]","docs":"","start":472,"length":3,"line":14,"character":19,"targetString":"arg"},{"text":"var Array: ArrayConstructor","docs":"","start":492,"length":5,"line":15,"character":15,"targetString":"Array"},{"text":"(method) ArrayConstructor.isArray(arg: any): arg is any[]","docs":"","start":498,"length":7,"line":15,"character":21,"targetString":"isArray"},{"text":"const arg: string | number | true | Mapping | Argument[]","docs":"","start":506,"length":3,"line":15,"character":29,"targetString":"arg"},{"text":"const arg: Argument[]","docs":"","start":552,"length":3,"line":17,"character":10,"targetString":"arg"},{"text":"(property) Array<T>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":556,"length":6,"line":17,"character":14,"targetString":"length"},{"text":"const inner: string","docs":"","start":580,"length":5,"line":18,"character":14,"targetString":"inner"},{"text":"const classnames: (...args: Argument[]) => string","docs":"","start":588,"length":10,"line":18,"character":22,"targetString":"classnames"},{"text":"const arg: Argument[]","docs":"","start":602,"length":3,"line":18,"character":36,"targetString":"arg"},{"text":"const inner: string","docs":"","start":619,"length":5,"line":19,"character":12,"targetString":"inner"},{"text":"const classes: any[]","docs":"","start":638,"length":7,"line":20,"character":10,"targetString":"classes"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":646,"length":4,"line":20,"character":18,"targetString":"push"},{"text":"const inner: string","docs":"","start":651,"length":5,"line":20,"character":23,"targetString":"inner"},{"text":"const arg: string | number | true | Mapping","docs":"","start":698,"length":3,"line":23,"character":22,"targetString":"arg"},{"text":"const key: string","docs":"","start":735,"length":3,"line":24,"character":17,"targetString":"key"},{"text":"const arg: Mapping","docs":"","start":742,"length":3,"line":24,"character":24,"targetString":"arg"},{"text":"const arg: Mapping","docs":"","start":791,"length":3,"line":26,"character":12,"targetString":"arg"},{"text":"const key: string","docs":"","start":795,"length":3,"line":26,"character":16,"targetString":"key"},{"text":"const classes: any[]","docs":"","start":813,"length":7,"line":27,"character":10,"targetString":"classes"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":821,"length":4,"line":27,"character":18,"targetString":"push"},{"text":"const key: string","docs":"","start":826,"length":3,"line":27,"character":23,"targetString":"key"},{"text":"const classes: (string | number | boolean | Mapping)[]","docs":"","start":869,"length":7,"line":33,"character":9,"targetString":"classes"},{"text":"(method) Array<string | number | boolean | Mapping>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":877,"length":4,"line":33,"character":17,"targetString":"join"}]],"/blog/Javascript基础/fiber遍历":[[{"text":"function VDom(props: any, children: any): void","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"VDom"},{"text":"(parameter) props: any","docs":"","start":14,"length":5,"line":0,"character":14,"targetString":"props"},{"text":"(parameter) children: any","docs":"","start":21,"length":8,"line":0,"character":21,"targetString":"children"},{"text":"(parameter) props: any","docs":"","start":48,"length":5,"line":1,"character":15,"targetString":"props"},{"text":"(parameter) children: any","docs":"","start":72,"length":8,"line":2,"character":18,"targetString":"children"}],[{"text":"function Fiber(instance: any, parent: any, child: any, sibling: any): void","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Fiber"},{"text":"(parameter) instance: any","docs":"","start":15,"length":8,"line":0,"character":15,"targetString":"instance"},{"text":"(parameter) parent: any","docs":"","start":25,"length":6,"line":0,"character":25,"targetString":"parent"},{"text":"(parameter) child: any","docs":"","start":33,"length":5,"line":0,"character":33,"targetString":"child"},{"text":"(parameter) sibling: any","docs":"","start":40,"length":7,"line":0,"character":40,"targetString":"sibling"},{"text":"(parameter) instance: any","docs":"","start":69,"length":8,"line":1,"character":18,"targetString":"instance"},{"text":"(parameter) parent: any","docs":"","start":94,"length":6,"line":2,"character":16,"targetString":"parent"},{"text":"(parameter) child: any","docs":"","start":116,"length":5,"line":3,"character":15,"targetString":"child"},{"text":"(parameter) sibling: any","docs":"","start":139,"length":7,"line":4,"character":17,"targetString":"sibling"}],[{"text":"function link(fiber: any): any","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"link"},{"text":"(parameter) fiber: any","docs":"","start":14,"length":5,"line":0,"character":14,"targetString":"fiber"},{"text":"(parameter) fiber: any","docs":"","start":30,"length":5,"line":1,"character":7,"targetString":"fiber"},{"text":"(parameter) fiber: any","docs":"","start":77,"length":5,"line":2,"character":10,"targetString":"fiber"},{"text":"(parameter) fiber: any","docs":"","start":91,"length":5,"line":2,"character":24,"targetString":"fiber"},{"text":"(parameter) sibling: any","docs":"","start":133,"length":7,"line":3,"character":5,"targetString":"sibling"},{"text":"(parameter) current: any","docs":"","start":142,"length":7,"line":3,"character":14,"targetString":"current"},{"text":"(parameter) current: any","docs":"","start":164,"length":7,"line":3,"character":36,"targetString":"current"},{"text":"(parameter) fiber: any","docs":"","start":173,"length":5,"line":3,"character":45,"targetString":"fiber"},{"text":"(parameter) sibling: any","docs":"","start":186,"length":7,"line":3,"character":58,"targetString":"sibling"}],[{"text":"function next(fiber: any): any","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"next"},{"text":"(parameter) fiber: any","docs":"","start":14,"length":5,"line":0,"character":14,"targetString":"fiber"},{"text":"const child: any","docs":"","start":31,"length":5,"line":1,"character":8,"targetString":"child"},{"text":"(parameter) fiber: any","docs":"","start":44,"length":5,"line":1,"character":21,"targetString":"fiber"},{"text":"const child: any","docs":"","start":57,"length":5,"line":2,"character":6,"targetString":"child"},{"text":"const child: any","docs":"","start":71,"length":5,"line":2,"character":20,"targetString":"child"},{"text":"let current: any","docs":"","start":83,"length":7,"line":3,"character":6,"targetString":"current"},{"text":"(parameter) fiber: any","docs":"","start":93,"length":5,"line":3,"character":16,"targetString":"fiber"},{"text":"let current: any","docs":"","start":108,"length":7,"line":4,"character":9,"targetString":"current"},{"text":"let current: any","docs":"","start":127,"length":7,"line":5,"character":8,"targetString":"current"},{"text":"let current: any","docs":"","start":151,"length":7,"line":5,"character":32,"targetString":"current"},{"text":"let current: any","docs":"","start":171,"length":7,"line":6,"character":4,"targetString":"current"},{"text":"let current: any","docs":"","start":181,"length":7,"line":6,"character":14,"targetString":"current"},{"text":"function loop(fiber: any, callback: any): void","docs":"循环迭代","start":294,"length":4,"line":14,"character":9,"targetString":"loop"},{"text":"(parameter) fiber: any","docs":"","start":299,"length":5,"line":14,"character":14,"targetString":"fiber"},{"text":"(parameter) callback: any","docs":"","start":306,"length":8,"line":14,"character":21,"targetString":"callback"},{"text":"let current: any","docs":"","start":324,"length":7,"line":15,"character":6,"targetString":"current"},{"text":"(parameter) fiber: any","docs":"","start":334,"length":5,"line":15,"character":16,"targetString":"fiber"},{"text":"let current: any","docs":"","start":349,"length":7,"line":16,"character":9,"targetString":"current"},{"text":"(parameter) callback: any","docs":"","start":364,"length":8,"line":17,"character":4,"targetString":"callback"},{"text":"let current: any","docs":"","start":373,"length":7,"line":17,"character":13,"targetString":"current"},{"text":"let current: any","docs":"","start":386,"length":7,"line":18,"character":4,"targetString":"current"},{"text":"function next(fiber: any): any","docs":"","start":396,"length":4,"line":18,"character":14,"targetString":"next"},{"text":"let current: any","docs":"","start":401,"length":7,"line":18,"character":19,"targetString":"current"}],[{"text":"const root: any","docs":"","start":16,"length":4,"line":1,"character":6,"targetString":"root"},{"text":"(property) value: number","docs":"","start":34,"length":5,"line":1,"character":24,"targetString":"value"},{"text":"(property) value: number","docs":"","start":61,"length":5,"line":2,"character":13,"targetString":"value"},{"text":"(property) value: number","docs":"","start":85,"length":5,"line":2,"character":37,"targetString":"value"},{"text":"(property) value: number","docs":"","start":113,"length":5,"line":3,"character":13,"targetString":"value"},{"text":"(property) value: number","docs":"","start":137,"length":5,"line":3,"character":37,"targetString":"value"},{"text":"const root: any","docs":"","start":194,"length":4,"line":7,"character":15,"targetString":"root"},{"text":"(parameter) fiber: any","docs":"","start":201,"length":5,"line":7,"character":22,"targetString":"fiber"},{"text":"var console: Console","docs":"","start":210,"length":7,"line":7,"character":31,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":218,"length":3,"line":7,"character":39,"targetString":"log"},{"text":"(parameter) fiber: any","docs":"","start":222,"length":5,"line":7,"character":43,"targetString":"fiber"},{"text":"let __current: any","docs":"","start":250,"length":9,"line":9,"character":4,"targetString":"__current"},{"text":"const root: any","docs":"","start":272,"length":4,"line":9,"character":26,"targetString":"root"},{"text":"function work(dline: any): void","docs":"","start":321,"length":4,"line":11,"character":9,"targetString":"work"},{"text":"(parameter) dline: any","docs":"","start":326,"length":5,"line":11,"character":14,"targetString":"dline"},{"text":"var console: Console","docs":"","start":337,"length":7,"line":12,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":345,"length":3,"line":12,"character":10,"targetString":"log"},{"text":"let __current: any","docs":"","start":349,"length":9,"line":12,"character":14,"targetString":"__current"},{"text":"(parameter) dline: any","docs":"","start":375,"length":5,"line":12,"character":40,"targetString":"dline"},{"text":"let __current: any","docs":"","start":400,"length":9,"line":13,"character":2,"targetString":"__current"},{"text":"let __current: any","docs":"","start":417,"length":9,"line":13,"character":19,"targetString":"__current"},{"text":"let __current: any","docs":"","start":434,"length":9,"line":14,"character":6,"targetString":"__current"},{"text":"function requestIdleCallback(callback: IdleRequestCallback, options?: IdleRequestOptions | undefined): number","docs":"","start":445,"length":19,"line":14,"character":17,"targetString":"requestIdleCallback"},{"text":"function work(dline: any): void","docs":"","start":465,"length":4,"line":14,"character":37,"targetString":"work"},{"text":"function requestIdleCallback(callback: IdleRequestCallback, options?: IdleRequestOptions | undefined): number","docs":"","start":474,"length":19,"line":17,"character":0,"targetString":"requestIdleCallback"},{"text":"function work(dline: any): void","docs":"","start":494,"length":4,"line":17,"character":20,"targetString":"work"}]],"/blog/Javascript基础/is常用判断":[[{"text":"const isUndefined: (val: any) => val is undefined","docs":"","start":13,"length":11,"line":0,"character":13,"targetString":"isUndefined"},{"text":"(parameter) val: any","docs":"","start":28,"length":3,"line":0,"character":28,"targetString":"val"},{"text":"(parameter) val: any","docs":"","start":39,"length":3,"line":0,"character":39,"targetString":"val"},{"text":"(parameter) val: any","docs":"","start":68,"length":3,"line":1,"character":9,"targetString":"val"},{"text":"const isNull: (val: any) => val is null","docs":"","start":102,"length":6,"line":3,"character":13,"targetString":"isNull"},{"text":"(parameter) val: any","docs":"","start":112,"length":3,"line":3,"character":23,"targetString":"val"},{"text":"(parameter) val: any","docs":"","start":123,"length":3,"line":3,"character":34,"targetString":"val"},{"text":"(parameter) val: any","docs":"","start":138,"length":3,"line":3,"character":49,"targetString":"val"},{"text":"const isNullOrUndefined: (val: any) => boolean","docs":"值不存在","start":181,"length":17,"line":8,"character":13,"targetString":"isNullOrUndefined"},{"text":"(parameter) val: any","docs":"","start":202,"length":3,"line":8,"character":34,"targetString":"val"},{"text":"const isNull: (val: any) => val is null","docs":"","start":215,"length":6,"line":8,"character":47,"targetString":"isNull"},{"text":"(parameter) val: any","docs":"","start":222,"length":3,"line":8,"character":54,"targetString":"val"},{"text":"const isUndefined: (val: any) => val is undefined","docs":"","start":230,"length":11,"line":8,"character":62,"targetString":"isUndefined"},{"text":"(parameter) val: any","docs":"","start":242,"length":3,"line":8,"character":74,"targetString":"val"},{"text":"const isNotNullOrUndefined: (val: any) => boolean","docs":"值存在","start":276,"length":20,"line":13,"character":13,"targetString":"isNotNullOrUndefined"},{"text":"(parameter) val: any","docs":"","start":300,"length":3,"line":13,"character":37,"targetString":"val"},{"text":"const isNullOrUndefined: (val: any) => boolean","docs":"值不存在","start":314,"length":17,"line":13,"character":51,"targetString":"isNullOrUndefined"},{"text":"(parameter) val: any","docs":"","start":332,"length":3,"line":13,"character":69,"targetString":"val"},{"text":"const isBrowser: () => boolean","docs":"","start":351,"length":9,"line":15,"character":13,"targetString":"isBrowser"},{"text":"var window: Window & typeof globalThis","docs":"","start":376,"length":6,"line":15,"character":38,"targetString":"window"},{"text":"const isMobAgent: (userAgent: string) => boolean","docs":"","start":413,"length":10,"line":17,"character":13,"targetString":"isMobAgent"},{"text":"(parameter) userAgent: string","docs":"","start":427,"length":9,"line":17,"character":27,"targetString":"userAgent"},{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":597,"length":4,"line":18,"character":148,"targetString":"test"},{"text":"(parameter) userAgent: string","docs":"","start":607,"length":9,"line":19,"character":4,"targetString":"userAgent"},{"text":"(parameter) userAgent: string","docs":"","start":624,"length":9,"line":20,"character":7,"targetString":"userAgent"},{"text":"(method) String.toLowerCase(): string","docs":"Converts all the alphabetic characters in a string to lowercase.","start":634,"length":11,"line":20,"character":17,"targetString":"toLowerCase"},{"text":"(method) String.indexOf(searchString: string, position?: number | undefined): number","docs":"Returns the position of the first occurrence of a substring.","start":648,"length":7,"line":20,"character":31,"targetString":"indexOf"},{"text":"const isJSON: (str: string) => boolean","docs":"","start":695,"length":6,"line":22,"character":13,"targetString":"isJSON"},{"text":"(parameter) str: string","docs":"","start":705,"length":3,"line":22,"character":23,"targetString":"str"},{"text":"(parameter) str: string","docs":"","start":736,"length":3,"line":23,"character":13,"targetString":"str"},{"text":"const obj: any","docs":"","start":777,"length":3,"line":25,"character":12,"targetString":"obj"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":783,"length":4,"line":25,"character":18,"targetString":"JSON"},{"text":"(method) JSON.parse(text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined): any","docs":"Converts a JavaScript Object Notation (JSON) string into an object.","start":788,"length":5,"line":25,"character":23,"targetString":"parse"},{"text":"(parameter) str: string","docs":"","start":794,"length":3,"line":25,"character":29,"targetString":"str"},{"text":"const obj: any","docs":"","start":816,"length":3,"line":26,"character":17,"targetString":"obj"},{"text":"const obj: any","docs":"","start":836,"length":3,"line":26,"character":37,"targetString":"obj"},{"text":"(local var) e: unknown","docs":"","start":920,"length":1,"line":31,"character":13,"targetString":"e"},{"text":"const compareId: (a: string | number, b: string | number) => boolean","docs":"","start":998,"length":9,"line":39,"character":13,"targetString":"compareId"},{"text":"(parameter) a: string | number","docs":"","start":1011,"length":1,"line":39,"character":26,"targetString":"a"},{"text":"(parameter) b: string | number","docs":"","start":1031,"length":1,"line":39,"character":46,"targetString":"b"},{"text":"(parameter) a: string | number","docs":"","start":1054,"length":1,"line":39,"character":69,"targetString":"a"},{"text":"(parameter) b: string | number","docs":"","start":1059,"length":1,"line":39,"character":74,"targetString":"b"}]],"/blog/Javascript基础/join":[[{"text":"const join: (...paths: string[]) => string","docs":"","start":13,"length":4,"line":0,"character":13,"targetString":"join"},{"text":"(parameter) paths: string[]","docs":"","start":24,"length":5,"line":0,"character":24,"targetString":"paths"},{"text":"(parameter) paths: string[]","docs":"","start":46,"length":5,"line":1,"character":2,"targetString":"paths"},{"text":"(method) Array<string>.filter(predicate: (value: string, index: number, array: string[]) => unknown, thisArg?: any): string[] (+1 overload)","docs":"Returns the elements of an array that meet the condition specified in a callback function.","start":57,"length":6,"line":2,"character":5,"targetString":"filter"},{"text":"(parameter) ch: string","docs":"","start":64,"length":2,"line":2,"character":12,"targetString":"ch"},{"text":"(parameter) ch: string","docs":"","start":72,"length":2,"line":2,"character":20,"targetString":"ch"},{"text":"(method) Array<string>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":96,"length":4,"line":4,"character":5,"targetString":"join"},{"text":"(method) String.replace(searchValue: {\n    [Symbol.replace](string: string, replaceValue: string): string;\n}, replaceValue: string): string (+3 overloads)","docs":"Replaces first match with string or all matches with RegExp.","start":129,"length":7,"line":6,"character":5,"targetString":"replace"}]],"/blog/Javascript基础/rem布局原理":[[{"text":"const clientWidth: number","docs":"","start":6,"length":11,"line":0,"character":6,"targetString":"clientWidth"},{"text":"var window: Window & typeof globalThis","docs":"","start":22,"length":6,"line":1,"character":2,"targetString":"window"},{"text":"(property) innerWidth: number","docs":"","start":29,"length":10,"line":1,"character":9,"targetString":"innerWidth"},{"text":"var document: Document","docs":"","start":45,"length":8,"line":2,"character":2,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":54,"length":15,"line":2,"character":11,"targetString":"documentElement"},{"text":"(property) Element.clientWidth: number","docs":"","start":70,"length":11,"line":2,"character":27,"targetString":"clientWidth"},{"text":"var document: Document","docs":"","start":87,"length":8,"line":3,"character":2,"targetString":"document"},{"text":"(property) Document.body: HTMLElement","docs":"Specifies the beginning and end of the document body.","start":96,"length":4,"line":3,"character":11,"targetString":"body"},{"text":"(property) Element.clientWidth: number","docs":"","start":101,"length":11,"line":3,"character":16,"targetString":"clientWidth"}],[{"text":"function fontSize(size: number, designWidth?: number): number","docs":"","start":16,"length":8,"line":0,"character":16,"targetString":"fontSize"},{"text":"(parameter) size: number","docs":"","start":25,"length":4,"line":0,"character":25,"targetString":"size"},{"text":"(parameter) designWidth: number","docs":"","start":39,"length":11,"line":0,"character":39,"targetString":"designWidth"},{"text":"const clientWidth: number","docs":"","start":69,"length":11,"line":1,"character":8,"targetString":"clientWidth"},{"text":"var window: Window & typeof globalThis","docs":"","start":87,"length":6,"line":2,"character":4,"targetString":"window"},{"text":"(property) innerWidth: number","docs":"","start":94,"length":10,"line":2,"character":11,"targetString":"innerWidth"},{"text":"var document: Document","docs":"","start":112,"length":8,"line":3,"character":4,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":121,"length":15,"line":3,"character":13,"targetString":"documentElement"},{"text":"(property) Element.clientWidth: number","docs":"","start":137,"length":11,"line":3,"character":29,"targetString":"clientWidth"},{"text":"var document: Document","docs":"","start":156,"length":8,"line":4,"character":4,"targetString":"document"},{"text":"(property) Document.body: HTMLElement","docs":"Specifies the beginning and end of the document body.","start":165,"length":4,"line":4,"character":13,"targetString":"body"},{"text":"(property) Element.clientWidth: number","docs":"","start":170,"length":11,"line":4,"character":18,"targetString":"clientWidth"},{"text":"(parameter) size: number","docs":"","start":192,"length":4,"line":5,"character":10,"targetString":"size"},{"text":"const clientWidth: number","docs":"","start":199,"length":11,"line":5,"character":17,"targetString":"clientWidth"},{"text":"(parameter) designWidth: number","docs":"","start":214,"length":11,"line":5,"character":32,"targetString":"designWidth"}],[{"text":"const rs: any","docs":"","start":6,"length":2,"line":0,"character":6,"targetString":"rs"}],[{"text":"(property) plugins: {\n    'postcss-pxtorem': {\n        rootValue: number;\n        propList: string[];\n        selectorBlackList: RegExp[];\n        replace: boolean;\n        mediaQuery: boolean;\n        exclude: RegExp;\n    };\n}","docs":"","start":43,"length":7,"line":3,"character":2,"targetString":"plugins"},{"text":"(property) rootValue: number","docs":"所有px除100+'rem'","start":129,"length":9,"line":8,"character":6,"targetString":"rootValue"},{"text":"(property) propList: string[]","docs":"转换的css属性","start":189,"length":8,"line":12,"character":6,"targetString":"propList"},{"text":"(property) selectorBlackList: RegExp[]","docs":"不换算html的单位","start":252,"length":17,"line":16,"character":6,"targetString":"selectorBlackList"},{"text":"(property) replace: boolean","docs":"如果需要兼容ie9以下（不支持rem）,replace设为false","start":353,"length":7,"line":20,"character":6,"targetString":"replace"},{"text":"(property) mediaQuery: boolean","docs":"","start":374,"length":10,"line":21,"character":6,"targetString":"mediaQuery"},{"text":"(property) exclude: RegExp","docs":"","start":399,"length":7,"line":22,"character":6,"targetString":"exclude"}]],"/blog/Javascript基础/vdom渲染":[[{"text":"function VDom(type: any, props: any, children: any): void","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"VDom"},{"text":"(parameter) type: any","docs":"","start":14,"length":4,"line":0,"character":14,"targetString":"type"},{"text":"(parameter) props: any","docs":"","start":20,"length":5,"line":0,"character":20,"targetString":"props"},{"text":"(parameter) children: any","docs":"","start":27,"length":8,"line":0,"character":27,"targetString":"children"},{"text":"(parameter) type: any","docs":"","start":53,"length":4,"line":1,"character":14,"targetString":"type"},{"text":"(parameter) props: any","docs":"","start":73,"length":5,"line":2,"character":15,"targetString":"props"},{"text":"(parameter) children: any","docs":"","start":97,"length":8,"line":3,"character":18,"targetString":"children"},{"text":"function h(type: any, props: any, children?: never[]): any","docs":"","start":118,"length":1,"line":6,"character":9,"targetString":"h"},{"text":"(parameter) type: any","docs":"","start":120,"length":4,"line":6,"character":11,"targetString":"type"},{"text":"(parameter) props: any","docs":"","start":126,"length":5,"line":6,"character":17,"targetString":"props"},{"text":"(parameter) children: never[]","docs":"","start":133,"length":8,"line":6,"character":24,"targetString":"children"},{"text":"function VDom(type: any, props: any, children: any): void","docs":"","start":163,"length":4,"line":7,"character":13,"targetString":"VDom"},{"text":"(parameter) type: any","docs":"","start":168,"length":4,"line":7,"character":18,"targetString":"type"},{"text":"(parameter) props: any","docs":"","start":174,"length":5,"line":7,"character":24,"targetString":"props"},{"text":"(parameter) children: never[]","docs":"","start":181,"length":8,"line":7,"character":31,"targetString":"children"},{"text":"const tree: any","docs":"","start":200,"length":4,"line":10,"character":6,"targetString":"tree"},{"text":"function h(type: any, props: any, children?: never[]): any","docs":"","start":207,"length":1,"line":10,"character":13,"targetString":"h"},{"text":"function h(type: any, props: any, children?: never[]): any","docs":"","start":221,"length":1,"line":10,"character":27,"targetString":"h"},{"text":"(property) innerText: string","docs":"","start":230,"length":9,"line":10,"character":36,"targetString":"innerText"}],[{"text":"function renderDom(vdom: any, container: any): void","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"renderDom"},{"text":"(parameter) vdom: any","docs":"","start":19,"length":4,"line":0,"character":19,"targetString":"vdom"},{"text":"(parameter) container: any","docs":"","start":25,"length":9,"line":0,"character":25,"targetString":"container"},{"text":"const dom: any","docs":"","start":46,"length":3,"line":1,"character":8,"targetString":"dom"},{"text":"var document: Document","docs":"","start":52,"length":8,"line":1,"character":14,"targetString":"document"},{"text":"(method) Document.createElement<any>(tagName: any, options?: ElementCreationOptions | undefined): any (+2 overloads)","docs":"Creates an instance of the element for the specified tag.","start":61,"length":13,"line":1,"character":23,"targetString":"createElement"},{"text":"(parameter) vdom: any","docs":"","start":75,"length":4,"line":1,"character":37,"targetString":"vdom"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":88,"length":6,"line":2,"character":2,"targetString":"Object"},{"text":"(parameter) vdom: any","docs":"","start":103,"length":4,"line":2,"character":17,"targetString":"vdom"},{"text":"var k: any","docs":"","start":125,"length":1,"line":2,"character":39,"targetString":"k"},{"text":"var v: any","docs":"","start":128,"length":1,"line":2,"character":42,"targetString":"v"},{"text":"const dom: any","docs":"","start":136,"length":3,"line":2,"character":50,"targetString":"dom"},{"text":"var k: any","docs":"","start":140,"length":1,"line":2,"character":54,"targetString":"k"},{"text":"var v: any","docs":"","start":145,"length":1,"line":2,"character":59,"targetString":"v"},{"text":"(parameter) container: any","docs":"","start":151,"length":9,"line":3,"character":2,"targetString":"container"},{"text":"const dom: any","docs":"","start":168,"length":3,"line":3,"character":19,"targetString":"dom"},{"text":"(parameter) vdom: any","docs":"","start":175,"length":4,"line":4,"character":2,"targetString":"vdom"},{"text":"(parameter) vdom: any","docs":"","start":192,"length":4,"line":4,"character":19,"targetString":"vdom"},{"text":"(parameter) child: any","docs":"","start":214,"length":5,"line":4,"character":41,"targetString":"child"},{"text":"function renderDom(vdom: any, container: any): void","docs":"","start":223,"length":9,"line":4,"character":50,"targetString":"renderDom"},{"text":"(parameter) child: any","docs":"","start":233,"length":5,"line":4,"character":60,"targetString":"child"},{"text":"const dom: any","docs":"","start":240,"length":3,"line":4,"character":67,"targetString":"dom"},{"text":"function renderDom(vdom: any, container: any): void","docs":"","start":249,"length":9,"line":7,"character":0,"targetString":"renderDom"},{"text":"var document: Document","docs":"","start":265,"length":8,"line":7,"character":16,"targetString":"document"},{"text":"(method) Document.getElementById(elementId: string): HTMLElement | null","docs":"Returns a reference to the first object with the specified value of the ID attribute.","start":274,"length":14,"line":7,"character":25,"targetString":"getElementById"}],[{"text":"function toIterable(vdom: any, stack?: any[]): Generator<any, void, unknown>","docs":"","start":10,"length":10,"line":0,"character":10,"targetString":"toIterable"},{"text":"(parameter) vdom: any","docs":"","start":21,"length":4,"line":0,"character":21,"targetString":"vdom"},{"text":"(parameter) stack: any[]","docs":"","start":27,"length":5,"line":0,"character":27,"targetString":"stack"},{"text":"(parameter) vdom: any","docs":"","start":36,"length":4,"line":0,"character":36,"targetString":"vdom"},{"text":"(parameter) stack: any[]","docs":"","start":54,"length":5,"line":1,"character":9,"targetString":"stack"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":60,"length":6,"line":1,"character":15,"targetString":"length"},{"text":"const node: any","docs":"","start":80,"length":4,"line":2,"character":10,"targetString":"node"},{"text":"(parameter) stack: any[]","docs":"","start":87,"length":5,"line":2,"character":17,"targetString":"stack"},{"text":"(method) Array<any>.pop(): any","docs":"Removes the last element from an array and returns it.\r\nIf the array is empty, undefined is returned and the array is not modified.","start":93,"length":3,"line":2,"character":23,"targetString":"pop"},{"text":"const node: any","docs":"","start":103,"length":4,"line":3,"character":4,"targetString":"node"},{"text":"(parameter) stack: any[]","docs":"","start":120,"length":5,"line":3,"character":21,"targetString":"stack"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":126,"length":4,"line":3,"character":27,"targetString":"push"},{"text":"const node: any","docs":"","start":134,"length":4,"line":3,"character":35,"targetString":"node"},{"text":"const node: any","docs":"","start":159,"length":4,"line":4,"character":10,"targetString":"node"},{"text":"var console: Console","docs":"","start":170,"length":7,"line":7,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":178,"length":3,"line":7,"character":8,"targetString":"log"},{"text":"var Array: ArrayConstructor","docs":"","start":182,"length":5,"line":7,"character":12,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<any>(iterable: Iterable<any> | ArrayLike<any>): any[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":188,"length":4,"line":7,"character":18,"targetString":"from"},{"text":"function toIterable(vdom: any, stack?: any[]): Generator<any, void, unknown>","docs":"","start":193,"length":10,"line":7,"character":23,"targetString":"toIterable"}]],"/blog/Javascript基础/上传和发送图片":[[{"text":"const onChange: (e: any) => void","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"onChange"},{"text":"(parameter) e: any","docs":"","start":17,"length":1,"line":0,"character":17,"targetString":"e"},{"text":"const files: any","docs":"","start":32,"length":5,"line":1,"character":8,"targetString":"files"},{"text":"(parameter) e: any","docs":"","start":40,"length":1,"line":1,"character":16,"targetString":"e"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":57,"length":7,"line":2,"character":2,"targetString":"Promise"},{"text":"(method) PromiseConstructor.all<any>(values: readonly any[]): Promise<any[]> (+10 overloads)","docs":"Creates a Promise that is resolved with an array of results when all of the provided Promises\r\nresolve, or rejected when any Promise is rejected.","start":65,"length":3,"line":2,"character":10,"targetString":"all"},{"text":"var Array: ArrayConstructor","docs":"","start":74,"length":5,"line":3,"character":4,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<unknown>(iterable: Iterable<unknown> | ArrayLike<unknown>): unknown[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":80,"length":4,"line":3,"character":10,"targetString":"from"},{"text":"const files: any","docs":"","start":85,"length":5,"line":3,"character":15,"targetString":"files"},{"text":"(method) Array<unknown>.map<any>(callbackfn: (value: unknown, index: number, array: unknown[]) => any, thisArg?: any): any[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":92,"length":3,"line":3,"character":22,"targetString":"map"},{"text":"(parameter) file: unknown","docs":"","start":96,"length":4,"line":3,"character":26,"targetString":"file"},{"text":"(parameter) file: unknown","docs":"","start":119,"length":4,"line":4,"character":15,"targetString":"file"},{"text":"(parameter) base64Str: any","docs":"","start":130,"length":9,"line":4,"character":26,"targetString":"base64Str"},{"text":"(property) body: any","docs":"","start":163,"length":4,"line":4,"character":59,"targetString":"body"},{"text":"(parameter) base64Str: any","docs":"","start":169,"length":9,"line":4,"character":65,"targetString":"base64Str"}],[{"text":"const readFile: (file: File) => Promise<string>","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"readFile"},{"text":"(parameter) file: File","docs":"","start":18,"length":4,"line":0,"character":18,"targetString":"file"},{"text":"interface File","docs":"Provides information about files and allows JavaScript in a web page to access their content.","start":24,"length":4,"line":0,"character":24,"targetString":"File"},{"text":"var Promise: PromiseConstructor\nnew <string>(executor: (resolve: (value: string | PromiseLike<string>) => void, reject: (reason?: any) => void) => void) => Promise<string>","docs":"Creates a new Promise.","start":39,"length":7,"line":1,"character":6,"targetString":"Promise"},{"text":"(parameter) resolve: (value: string | PromiseLike<string>) => void","docs":"","start":56,"length":7,"line":1,"character":23,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":65,"length":6,"line":1,"character":32,"targetString":"reject"},{"text":"const reader: FileReader","docs":"","start":88,"length":6,"line":2,"character":10,"targetString":"reader"},{"text":"var FileReader: new () => FileReader","docs":"Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.","start":101,"length":10,"line":2,"character":23,"targetString":"FileReader"},{"text":"const reader: FileReader","docs":"","start":118,"length":6,"line":3,"character":4,"targetString":"reader"},{"text":"(method) FileReader.readAsDataURL(blob: Blob): void","docs":"","start":125,"length":13,"line":3,"character":11,"targetString":"readAsDataURL"},{"text":"(parameter) file: File","docs":"","start":139,"length":4,"line":3,"character":25,"targetString":"file"},{"text":"const reader: FileReader","docs":"","start":149,"length":6,"line":4,"character":4,"targetString":"reader"},{"text":"(method) FileReader.addEventListener<\"load\">(type: \"load\", listener: (this: FileReader, ev: ProgressEvent<FileReader>) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":156,"length":16,"line":4,"character":11,"targetString":"addEventListener"},{"text":"(parameter) resolve: (value: string | PromiseLike<string>) => void","docs":"","start":187,"length":7,"line":4,"character":42,"targetString":"resolve"},{"text":"const reader: FileReader","docs":"","start":195,"length":6,"line":4,"character":50,"targetString":"reader"},{"text":"(property) FileReader.result: string | ArrayBuffer | null","docs":"","start":202,"length":6,"line":4,"character":57,"targetString":"result"},{"text":"(method) toString(): string","docs":"Returns a string representation of a string.","start":209,"length":8,"line":4,"character":64,"targetString":"toString"},{"text":"const reader: FileReader","docs":"","start":226,"length":6,"line":5,"character":4,"targetString":"reader"},{"text":"(method) FileReader.addEventListener<\"error\">(type: \"error\", listener: (this: FileReader, ev: ProgressEvent<FileReader>) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":233,"length":16,"line":5,"character":11,"targetString":"addEventListener"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":265,"length":6,"line":5,"character":43,"targetString":"reject"},{"text":"const reader: FileReader","docs":"","start":272,"length":6,"line":5,"character":50,"targetString":"reader"},{"text":"(property) FileReader.result: string | ArrayBuffer | null","docs":"","start":279,"length":6,"line":5,"character":57,"targetString":"result"}]],"/blog/Javascript基础/作用域和闭包":[[{"text":"var val: number","docs":"","start":47,"length":3,"line":2,"character":6,"targetString":"val"},{"text":"var console: Console","docs":"","start":68,"length":7,"line":6,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":76,"length":3,"line":6,"character":10,"targetString":"log"},{"text":"var val: number","docs":"","start":80,"length":3,"line":6,"character":14,"targetString":"val"},{"text":"var error: unknown","docs":"","start":101,"length":5,"line":7,"character":9,"targetString":"error"},{"text":"var console: Console","docs":"","start":112,"length":7,"line":8,"character":2,"targetString":"console"},{"text":"(method) Console.error(...data: any[]): void","docs":"","start":120,"length":5,"line":8,"character":10,"targetString":"error"},{"text":"var error: unknown","docs":"","start":126,"length":5,"line":8,"character":16,"targetString":"error"},{"text":"var console: Console","docs":"","start":157,"length":7,"line":13,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":165,"length":3,"line":13,"character":12,"targetString":"log"},{"text":"let _val: number","docs":"","start":169,"length":4,"line":13,"character":16,"targetString":"_val"},{"text":"var error: unknown","docs":"","start":240,"length":5,"line":14,"character":11,"targetString":"error"},{"text":"var console: Console","docs":"","start":253,"length":7,"line":15,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":261,"length":3,"line":15,"character":12,"targetString":"log"},{"text":"var error: unknown","docs":"","start":265,"length":5,"line":15,"character":16,"targetString":"error"},{"text":"let _val: number","docs":"","start":295,"length":4,"line":18,"character":6,"targetString":"_val"},{"text":"var console: Console","docs":"","start":317,"length":7,"line":22,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":325,"length":3,"line":22,"character":10,"targetString":"log"},{"text":"var error: unknown","docs":"","start":386,"length":5,"line":23,"character":9,"targetString":"error"},{"text":"var console: Console","docs":"","start":397,"length":7,"line":24,"character":2,"targetString":"console"},{"text":"(method) Console.error(...data: any[]): void","docs":"","start":405,"length":5,"line":24,"character":10,"targetString":"error"},{"text":"var error: unknown","docs":"","start":411,"length":5,"line":24,"character":16,"targetString":"error"},{"text":"function Block(): void","docs":"","start":443,"length":5,"line":28,"character":9,"targetString":"Block"},{"text":"(local var) _val_0: number","docs":"","start":472,"length":6,"line":30,"character":6,"targetString":"_val_0"},{"text":"var console: Console","docs":"","start":496,"length":7,"line":34,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":504,"length":3,"line":34,"character":10,"targetString":"log"},{"text":"var error: unknown","docs":"","start":550,"length":5,"line":35,"character":9,"targetString":"error"},{"text":"var console: Console","docs":"","start":561,"length":7,"line":36,"character":2,"targetString":"console"},{"text":"(method) Console.error(...data: any[]): void","docs":"","start":569,"length":5,"line":36,"character":10,"targetString":"error"},{"text":"var error: unknown","docs":"","start":575,"length":5,"line":36,"character":16,"targetString":"error"},{"text":"const People: (name: any) => void","docs":"","start":591,"length":6,"line":39,"character":6,"targetString":"People"},{"text":"(local var) _age: number","docs":"","start":654,"length":4,"line":43,"character":6,"targetString":"_age"},{"text":"(local function) People(name: any): void","docs":"","start":676,"length":6,"line":45,"character":11,"targetString":"People"},{"text":"(parameter) name: any","docs":"","start":683,"length":4,"line":45,"character":18,"targetString":"name"},{"text":"(parameter) name: any","docs":"","start":707,"length":4,"line":46,"character":16,"targetString":"name"},{"text":"(local function) People(name: any): void","docs":"","start":719,"length":6,"line":49,"character":2,"targetString":"People"},{"text":"(property) Function.prototype: any","docs":"","start":726,"length":9,"line":49,"character":9,"targetString":"prototype"},{"text":"(local var) _age: number","docs":"","start":769,"length":4,"line":50,"character":11,"targetString":"_age"},{"text":"(local function) People(name: any): void","docs":"","start":781,"length":6,"line":53,"character":2,"targetString":"People"},{"text":"(property) Function.prototype: any","docs":"","start":788,"length":9,"line":53,"character":9,"targetString":"prototype"},{"text":"(local var) _age: number","docs":"","start":824,"length":4,"line":54,"character":4,"targetString":"_age"},{"text":"(local function) People(name: any): void","docs":"","start":845,"length":6,"line":57,"character":9,"targetString":"People"},{"text":"const me: any","docs":"","start":864,"length":2,"line":60,"character":6,"targetString":"me"},{"text":"const People: (name: any) => void","docs":"","start":873,"length":6,"line":60,"character":15,"targetString":"People"},{"text":"const me: any","docs":"","start":892,"length":2,"line":61,"character":0,"targetString":"me"},{"text":"var console: Console","docs":"","start":904,"length":7,"line":62,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":912,"length":3,"line":62,"character":8,"targetString":"log"},{"text":"const me: any","docs":"","start":916,"length":2,"line":62,"character":12,"targetString":"me"},{"text":"const saber: any","docs":"","start":942,"length":5,"line":64,"character":6,"targetString":"saber"},{"text":"const People: (name: any) => void","docs":"","start":954,"length":6,"line":64,"character":18,"targetString":"People"},{"text":"const saber: any","docs":"","start":970,"length":5,"line":65,"character":0,"targetString":"saber"},{"text":"var console: Console","docs":"","start":985,"length":7,"line":66,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":993,"length":3,"line":66,"character":8,"targetString":"log"},{"text":"const saber: any","docs":"","start":997,"length":5,"line":66,"character":12,"targetString":"saber"}]],"/blog/Javascript基础/保存文件到本地":[[{"text":"function download(url: string, name?: string): void","docs":"","start":16,"length":8,"line":0,"character":16,"targetString":"download"},{"text":"(parameter) url: string","docs":"","start":25,"length":3,"line":0,"character":25,"targetString":"url"},{"text":"(parameter) name: string","docs":"","start":38,"length":4,"line":0,"character":38,"targetString":"name"},{"text":"var Date: DateConstructor\nnew () => Date (+4 overloads)","docs":"","start":49,"length":4,"line":0,"character":49,"targetString":"Date"},{"text":"(method) Date.toLocaleString(locales?: string | string[] | undefined, options?: Intl.DateTimeFormatOptions | undefined): string (+1 overload)","docs":"Converts a date and time to a string by using the current or specified locale.","start":56,"length":14,"line":0,"character":56,"targetString":"toLocaleString"},{"text":"const anchor: HTMLAnchorElement","docs":"","start":84,"length":6,"line":1,"character":8,"targetString":"anchor"},{"text":"var document: Document","docs":"","start":93,"length":8,"line":1,"character":17,"targetString":"document"},{"text":"(method) Document.createElement<\"a\">(tagName: \"a\", options?: ElementCreationOptions | undefined): HTMLAnchorElement (+2 overloads)","docs":"Creates an instance of the element for the specified tag.","start":102,"length":13,"line":1,"character":26,"targetString":"createElement"},{"text":"const anchor: HTMLAnchorElement","docs":"","start":123,"length":6,"line":2,"character":2,"targetString":"anchor"},{"text":"(property) HTMLAnchorElement.download: string","docs":"","start":130,"length":8,"line":2,"character":9,"targetString":"download"},{"text":"(parameter) name: string","docs":"","start":141,"length":4,"line":2,"character":20,"targetString":"name"},{"text":"const anchor: HTMLAnchorElement","docs":"","start":148,"length":6,"line":3,"character":2,"targetString":"anchor"},{"text":"(property) HTMLHyperlinkElementUtils.href: string","docs":"Returns the hyperlink's URL.\n\nCan be set, to change the URL.","start":155,"length":4,"line":3,"character":9,"targetString":"href"},{"text":"(parameter) url: string","docs":"","start":162,"length":3,"line":3,"character":16,"targetString":"url"},{"text":"const anchor: HTMLAnchorElement","docs":"","start":168,"length":6,"line":4,"character":2,"targetString":"anchor"},{"text":"(method) HTMLElement.click(): void","docs":"","start":175,"length":5,"line":4,"character":9,"targetString":"click"},{"text":"const anchor: HTMLAnchorElement","docs":"","start":185,"length":6,"line":5,"character":2,"targetString":"anchor"},{"text":"(method) ChildNode.remove(): void","docs":"Removes node.","start":192,"length":6,"line":5,"character":9,"targetString":"remove"}]],"/blog/Javascript基础/偏函数与柯理化":[[{"text":"const add: (a: number, b: number, c: number) => number","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"add"},{"text":"(parameter) a: number","docs":"","start":13,"length":1,"line":0,"character":13,"targetString":"a"},{"text":"(parameter) b: number","docs":"","start":24,"length":1,"line":0,"character":24,"targetString":"b"},{"text":"(parameter) c: number","docs":"","start":35,"length":1,"line":0,"character":35,"targetString":"c"},{"text":"(parameter) a: number","docs":"","start":49,"length":1,"line":0,"character":49,"targetString":"a"},{"text":"(parameter) b: number","docs":"","start":53,"length":1,"line":0,"character":53,"targetString":"b"},{"text":"(parameter) c: number","docs":"","start":57,"length":1,"line":0,"character":57,"targetString":"c"},{"text":"const add2: (b: number, c: number) => number","docs":"","start":66,"length":4,"line":2,"character":6,"targetString":"add2"},{"text":"const add: (a: number, b: number, c: number) => number","docs":"","start":73,"length":3,"line":2,"character":13,"targetString":"add"},{"text":"(method) CallableFunction.bind<(a: number, b: number, c: number) => number, 1, [b: number, c: number], number>(this: (this: (a: number, b: number, c: number) => number, arg0: 1, b: number, c: number) => number, thisArg: (a: number, b: number, c: number) => number, arg0: 1): (b: number, c: number) => number (+5 overloads)","docs":"For a given function, creates a bound function that has the same body as the original function.\r\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.","start":77,"length":4,"line":2,"character":17,"targetString":"bind"},{"text":"const add: (a: number, b: number, c: number) => number","docs":"","start":82,"length":3,"line":2,"character":22,"targetString":"add"},{"text":"var console: Console","docs":"","start":140,"length":7,"line":5,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":148,"length":3,"line":5,"character":8,"targetString":"log"},{"text":"const add2: (b: number, c: number) => number","docs":"","start":152,"length":4,"line":5,"character":12,"targetString":"add2"}],[{"text":"const curry: (fn: any) => (arg: any) => any","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"curry"},{"text":"(parameter) fn: any","docs":"","start":14,"length":2,"line":0,"character":14,"targetString":"fn"},{"text":"(parameter) arg: any","docs":"","start":20,"length":3,"line":0,"character":20,"targetString":"arg"},{"text":"(parameter) fn: any","docs":"","start":28,"length":2,"line":0,"character":28,"targetString":"fn"},{"text":"(parameter) fn: any","docs":"","start":46,"length":2,"line":0,"character":46,"targetString":"fn"},{"text":"(parameter) arg: any","docs":"","start":49,"length":3,"line":0,"character":49,"targetString":"arg"},{"text":"const curry: (fn: any) => (arg: any) => any","docs":"","start":56,"length":5,"line":0,"character":56,"targetString":"curry"},{"text":"(parameter) fn: any","docs":"","start":62,"length":2,"line":0,"character":62,"targetString":"fn"},{"text":"(parameter) fn: any","docs":"","start":70,"length":2,"line":0,"character":70,"targetString":"fn"},{"text":"(parameter) arg: any","docs":"","start":74,"length":3,"line":0,"character":74,"targetString":"arg"},{"text":"var console: Console","docs":"","start":82,"length":7,"line":2,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":90,"length":3,"line":2,"character":8,"targetString":"log"},{"text":"const curry: (fn: any) => (arg: any) => any","docs":"","start":94,"length":5,"line":2,"character":12,"targetString":"curry"}]],"/blog/Javascript基础/判断是不是移动端":[[{"text":"const isMob: boolean","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"isMob"},{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":160,"length":4,"line":0,"character":160,"targetString":"test"},{"text":"var navigator: Navigator","docs":"","start":168,"length":9,"line":1,"character":2,"targetString":"navigator"},{"text":"(property) NavigatorID.userAgent: string","docs":"","start":178,"length":9,"line":1,"character":12,"targetString":"userAgent"}]],"/blog/Javascript基础/判断页面滚动到底部（React）":[[{"text":"const useOnScroll: (callback: (event: Event) => void) => any","docs":"","start":25,"length":11,"line":1,"character":13,"targetString":"useOnScroll"},{"text":"(parameter) callback: (event: Event) => void","docs":"","start":40,"length":8,"line":1,"character":28,"targetString":"callback"},{"text":"(parameter) event: Event","docs":"","start":51,"length":5,"line":1,"character":39,"targetString":"event"},{"text":"interface Event","docs":"An event which takes place in the DOM.","start":58,"length":5,"line":1,"character":46,"targetString":"Event"},{"text":"const checkForBottom: (event: Event) => void","docs":"","start":107,"length":14,"line":3,"character":10,"targetString":"checkForBottom"},{"text":"(parameter) event: Event","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"event"},{"text":"interface Event","docs":"An event which takes place in the DOM.","start":132,"length":5,"line":3,"character":35,"targetString":"Event"},{"text":"(parameter) callback: (event: Event) => void","docs":"","start":142,"length":8,"line":3,"character":45,"targetString":"callback"},{"text":"(parameter) event: Event","docs":"","start":151,"length":5,"line":3,"character":54,"targetString":"event"},{"text":"var window: Window & typeof globalThis","docs":"","start":162,"length":6,"line":4,"character":4,"targetString":"window"},{"text":"(method) addEventListener<\"scroll\">(type: \"scroll\", listener: (this: Window, ev: Event) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":169,"length":16,"line":4,"character":11,"targetString":"addEventListener"},{"text":"const checkForBottom: (event: Event) => void","docs":"","start":196,"length":14,"line":4,"character":38,"targetString":"checkForBottom"},{"text":"var window: Window & typeof globalThis","docs":"","start":229,"length":6,"line":5,"character":17,"targetString":"window"},{"text":"(method) removeEventListener<\"scroll\">(type: \"scroll\", listener: (this: Window, ev: Event) => any, options?: boolean | EventListenerOptions | undefined): void (+1 overload)","docs":"Removes the event listener in target's event listener list with the same type, callback, and options.","start":236,"length":19,"line":5,"character":24,"targetString":"removeEventListener"},{"text":"const checkForBottom: (event: Event) => void","docs":"","start":266,"length":14,"line":5,"character":54,"targetString":"checkForBottom"},{"text":"const useOnScrollBottom: (callback: (event: Event) => void) => void","docs":"","start":315,"length":17,"line":9,"character":13,"targetString":"useOnScrollBottom"},{"text":"(parameter) callback: (event: Event) => void","docs":"","start":336,"length":8,"line":9,"character":34,"targetString":"callback"},{"text":"(parameter) event: Event","docs":"","start":347,"length":5,"line":9,"character":45,"targetString":"event"},{"text":"interface Event","docs":"An event which takes place in the DOM.","start":354,"length":5,"line":9,"character":52,"targetString":"Event"},{"text":"const container: HTMLElement","docs":"","start":383,"length":9,"line":10,"character":8,"targetString":"container"},{"text":"var document: Document","docs":"","start":395,"length":8,"line":10,"character":20,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":404,"length":15,"line":10,"character":29,"targetString":"documentElement"},{"text":"const useOnScroll: (callback: (event: Event) => void) => any","docs":"","start":422,"length":11,"line":11,"character":2,"targetString":"useOnScroll"},{"text":"(parameter) event: Event","docs":"","start":434,"length":5,"line":11,"character":14,"targetString":"event"},{"text":"const container: HTMLElement","docs":"","start":460,"length":9,"line":13,"character":6,"targetString":"container"},{"text":"(property) Element.scrollTop: number","docs":"","start":470,"length":9,"line":13,"character":16,"targetString":"scrollTop"},{"text":"const container: HTMLElement","docs":"","start":482,"length":9,"line":13,"character":28,"targetString":"container"},{"text":"(property) Element.clientHeight: number","docs":"","start":492,"length":12,"line":13,"character":38,"targetString":"clientHeight"},{"text":"const container: HTMLElement","docs":"","start":515,"length":9,"line":14,"character":6,"targetString":"container"},{"text":"(property) Element.scrollHeight: number","docs":"","start":525,"length":12,"line":14,"character":16,"targetString":"scrollHeight"},{"text":"(parameter) callback: (event: Event) => void","docs":"","start":552,"length":8,"line":16,"character":6,"targetString":"callback"},{"text":"(parameter) event: Event","docs":"","start":561,"length":5,"line":16,"character":15,"targetString":"event"}]],"/blog/Javascript基础/原型链":[[{"text":"function Cat(): void","docs":"","start":20,"length":3,"line":1,"character":9,"targetString":"Cat"},{"text":"const cat: any","docs":"","start":41,"length":3,"line":3,"character":6,"targetString":"cat"},{"text":"function Cat(): void","docs":"","start":51,"length":3,"line":3,"character":16,"targetString":"Cat"},{"text":"var console: Console","docs":"","start":83,"length":7,"line":6,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":91,"length":3,"line":6,"character":8,"targetString":"log"},{"text":"const cat: any","docs":"","start":95,"length":3,"line":6,"character":12,"targetString":"cat"},{"text":"function Cat(): void","docs":"","start":113,"length":3,"line":6,"character":30,"targetString":"Cat"},{"text":"(property) Function.prototype: any","docs":"","start":117,"length":9,"line":6,"character":34,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":151,"length":7,"line":9,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":159,"length":3,"line":9,"character":8,"targetString":"log"},{"text":"function Cat(): void","docs":"","start":163,"length":3,"line":9,"character":12,"targetString":"Cat"},{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":181,"length":8,"line":9,"character":30,"targetString":"Function"},{"text":"(property) FunctionConstructor.prototype: Function","docs":"","start":190,"length":9,"line":9,"character":39,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":222,"length":7,"line":12,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":230,"length":3,"line":12,"character":8,"targetString":"log"},{"text":"function Cat(): void","docs":"","start":234,"length":3,"line":12,"character":12,"targetString":"Cat"},{"text":"(property) Function.prototype: any","docs":"","start":238,"length":9,"line":12,"character":16,"targetString":"prototype"},{"text":"function Cat(): void","docs":"","start":264,"length":3,"line":12,"character":42,"targetString":"Cat"},{"text":"var console: Console","docs":"","start":299,"length":7,"line":15,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":307,"length":3,"line":15,"character":8,"targetString":"log"},{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":311,"length":8,"line":15,"character":12,"targetString":"Function"},{"text":"(property) FunctionConstructor.prototype: Function","docs":"","start":320,"length":9,"line":15,"character":21,"targetString":"prototype"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":344,"length":6,"line":15,"character":45,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":351,"length":9,"line":15,"character":52,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":362,"length":7,"line":16,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":370,"length":3,"line":16,"character":8,"targetString":"log"},{"text":"var Array: ArrayConstructor","docs":"","start":374,"length":5,"line":16,"character":12,"targetString":"Array"},{"text":"(property) ArrayConstructor.prototype: any[]","docs":"","start":380,"length":9,"line":16,"character":18,"targetString":"prototype"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":404,"length":6,"line":16,"character":42,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":411,"length":9,"line":16,"character":49,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":422,"length":7,"line":17,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":430,"length":3,"line":17,"character":8,"targetString":"log"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":434,"length":4,"line":17,"character":12,"targetString":"Date"},{"text":"(property) DateConstructor.prototype: Date","docs":"","start":439,"length":9,"line":17,"character":17,"targetString":"prototype"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":463,"length":6,"line":17,"character":41,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":470,"length":9,"line":17,"character":48,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":481,"length":7,"line":18,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":489,"length":3,"line":18,"character":8,"targetString":"log"},{"text":"var Error: ErrorConstructor","docs":"","start":493,"length":5,"line":18,"character":12,"targetString":"Error"},{"text":"(property) ErrorConstructor.prototype: Error","docs":"","start":499,"length":9,"line":18,"character":18,"targetString":"prototype"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":523,"length":6,"line":18,"character":42,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":530,"length":9,"line":18,"character":49,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":562,"length":7,"line":20,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":570,"length":3,"line":20,"character":8,"targetString":"log"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":574,"length":4,"line":20,"character":12,"targetString":"JSON"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":593,"length":6,"line":20,"character":31,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":600,"length":9,"line":20,"character":38,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":611,"length":7,"line":21,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":619,"length":3,"line":21,"character":8,"targetString":"log"},{"text":"namespace Reflect","docs":"","start":623,"length":7,"line":21,"character":12,"targetString":"Reflect"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":645,"length":6,"line":21,"character":34,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":652,"length":9,"line":21,"character":41,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":687,"length":7,"line":24,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":695,"length":3,"line":24,"character":8,"targetString":"log"},{"text":"function Cat(): void","docs":"","start":699,"length":3,"line":24,"character":12,"targetString":"Cat"},{"text":"(property) Function.prototype: any","docs":"","start":703,"length":9,"line":24,"character":16,"targetString":"prototype"},{"text":"function Cat(): void","docs":"","start":729,"length":3,"line":24,"character":42,"targetString":"Cat"},{"text":"var console: Console","docs":"","start":768,"length":7,"line":27,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":776,"length":3,"line":27,"character":8,"targetString":"log"},{"text":"function Cat(): void","docs":"","start":780,"length":3,"line":27,"character":12,"targetString":"Cat"},{"text":"(property) Function.prototype: any","docs":"","start":784,"length":9,"line":27,"character":16,"targetString":"prototype"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":808,"length":6,"line":27,"character":40,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":815,"length":9,"line":27,"character":47,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":850,"length":7,"line":30,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":858,"length":3,"line":30,"character":8,"targetString":"log"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":862,"length":6,"line":30,"character":12,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":869,"length":9,"line":30,"character":19,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":949,"length":7,"line":33,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":957,"length":3,"line":33,"character":8,"targetString":"log"},{"text":"const cat: any","docs":"","start":961,"length":3,"line":33,"character":12,"targetString":"cat"},{"text":"var console: Console","docs":"","start":1076,"length":7,"line":37,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":1084,"length":3,"line":37,"character":8,"targetString":"log"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":1088,"length":6,"line":37,"character":12,"targetString":"Object"},{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":1109,"length":8,"line":37,"character":33,"targetString":"Function"},{"text":"(property) FunctionConstructor.prototype: Function","docs":"","start":1118,"length":9,"line":37,"character":42,"targetString":"prototype"},{"text":"var console: Console","docs":"","start":1161,"length":7,"line":39,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":1169,"length":3,"line":39,"character":8,"targetString":"log"},{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":1173,"length":8,"line":39,"character":12,"targetString":"Function"},{"text":"var console: Console","docs":"","start":1218,"length":7,"line":41,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":1226,"length":3,"line":41,"character":8,"targetString":"log"},{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":1230,"length":8,"line":41,"character":12,"targetString":"Function"},{"text":"var Function: FunctionConstructor","docs":"Creates a new function.","start":1253,"length":8,"line":41,"character":35,"targetString":"Function"},{"text":"(property) FunctionConstructor.prototype: Function","docs":"","start":1262,"length":9,"line":41,"character":44,"targetString":"prototype"}]],"/blog/Javascript基础/去除文档中nbsp":[[{"text":"const noNbsp: (str: string) => string","docs":"","start":13,"length":6,"line":0,"character":13,"targetString":"noNbsp"},{"text":"(parameter) str: string","docs":"","start":23,"length":3,"line":0,"character":23,"targetString":"str"},{"text":"(parameter) str: string","docs":"","start":41,"length":3,"line":1,"character":2,"targetString":"str"},{"text":"(method) String.replace(searchValue: {\n    [Symbol.replace](string: string, replaceValue: string): string;\n}, replaceValue: string): string (+3 overloads)","docs":"Replaces first match with string or all matches with RegExp.","start":45,"length":7,"line":1,"character":6,"targetString":"replace"},{"text":"var RegExp: RegExpConstructor\nnew (pattern: string | RegExp, flags?: string | undefined) => RegExp (+2 overloads)","docs":"","start":57,"length":6,"line":1,"character":18,"targetString":"RegExp"}]],"/blog/Javascript基础/双向绑定":[[{"text":"const bind: (target: any, model: any, map: any) => void","docs":"bind","start":96,"length":4,"line":6,"character":6,"targetString":"bind"},{"text":"(parameter) target: any","docs":"","start":104,"length":6,"line":6,"character":14,"targetString":"target"},{"text":"(parameter) model: any","docs":"","start":112,"length":5,"line":6,"character":22,"targetString":"model"},{"text":"(parameter) map: any","docs":"","start":119,"length":3,"line":6,"character":29,"targetString":"map"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":129,"length":6,"line":7,"character":2,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":136,"length":4,"line":7,"character":9,"targetString":"keys"},{"text":"(parameter) map: any","docs":"","start":141,"length":3,"line":7,"character":14,"targetString":"map"},{"text":"(parameter) target: any","docs":"","start":148,"length":6,"line":7,"character":21,"targetString":"target"},{"text":"(method) Array<string>.forEach(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any): void","docs":"Performs the specified action for each element in an array.","start":156,"length":7,"line":7,"character":29,"targetString":"forEach"},{"text":"(parameter) key: string","docs":"","start":164,"length":3,"line":7,"character":37,"targetString":"key"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":175,"length":6,"line":8,"character":4,"targetString":"Object"},{"text":"(method) ObjectConstructor.defineProperty<any>(o: any, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>): any","docs":"Adds a property to an object, or modifies attributes of an existing property.","start":182,"length":14,"line":8,"character":11,"targetString":"defineProperty"},{"text":"(parameter) target: any","docs":"","start":197,"length":6,"line":8,"character":26,"targetString":"target"},{"text":"(parameter) key: string","docs":"","start":205,"length":3,"line":8,"character":34,"targetString":"key"},{"text":"(method) PropertyDescriptor.set?(v: any): void","docs":"","start":218,"length":3,"line":9,"character":6,"targetString":"set"},{"text":"(parameter) value: any","docs":"","start":222,"length":5,"line":9,"character":10,"targetString":"value"},{"text":"const mkey: any","docs":"","start":245,"length":4,"line":10,"character":14,"targetString":"mkey"},{"text":"(parameter) map: any","docs":"","start":252,"length":3,"line":10,"character":21,"targetString":"map"},{"text":"(parameter) map: any","docs":"","start":258,"length":3,"line":10,"character":27,"targetString":"map"},{"text":"(parameter) key: string","docs":"","start":262,"length":3,"line":10,"character":31,"targetString":"key"},{"text":"(parameter) key: string","docs":"","start":269,"length":3,"line":10,"character":38,"targetString":"key"},{"text":"(parameter) model: any","docs":"","start":281,"length":5,"line":11,"character":8,"targetString":"model"},{"text":"const mkey: any","docs":"","start":287,"length":4,"line":11,"character":14,"targetString":"mkey"},{"text":"(parameter) value: any","docs":"","start":295,"length":5,"line":11,"character":22,"targetString":"value"},{"text":"(method) PropertyDescriptor.get?(): any","docs":"","start":316,"length":3,"line":13,"character":6,"targetString":"get"},{"text":"const mkey: any","docs":"","start":338,"length":4,"line":14,"character":14,"targetString":"mkey"},{"text":"(parameter) map: any","docs":"","start":345,"length":3,"line":14,"character":21,"targetString":"map"},{"text":"(parameter) map: any","docs":"","start":351,"length":3,"line":14,"character":27,"targetString":"map"},{"text":"(parameter) key: string","docs":"","start":355,"length":3,"line":14,"character":31,"targetString":"key"},{"text":"(parameter) key: string","docs":"","start":362,"length":3,"line":14,"character":38,"targetString":"key"},{"text":"(parameter) model: any","docs":"","start":381,"length":5,"line":15,"character":15,"targetString":"model"},{"text":"const mkey: any","docs":"","start":387,"length":4,"line":15,"character":21,"targetString":"mkey"},{"text":"var window: Window & typeof globalThis","docs":"","start":413,"length":6,"line":20,"character":0,"targetString":"window"},{"text":"const p: HTMLElement | null","docs":"","start":443,"length":1,"line":21,"character":6,"targetString":"p"},{"text":"var document: Document","docs":"","start":447,"length":8,"line":21,"character":10,"targetString":"document"},{"text":"(method) Document.getElementById(elementId: string): HTMLElement | null","docs":"Returns a reference to the first object with the specified value of the ID attribute.","start":456,"length":14,"line":21,"character":19,"targetString":"getElementById"},{"text":"const bind: (target: any, model: any, map: any) => void","docs":"bind","start":477,"length":4,"line":23,"character":0,"targetString":"bind"},{"text":"const p: HTMLElement | null","docs":"","start":495,"length":1,"line":23,"character":18,"targetString":"p"},{"text":"(property) value: string","docs":"","start":502,"length":5,"line":24,"character":2,"targetString":"value"}],[{"text":"const bind: (model: any, map: any) => any","docs":"bind","start":70,"length":4,"line":5,"character":6,"targetString":"bind"},{"text":"(parameter) model: any","docs":"","start":78,"length":5,"line":5,"character":14,"targetString":"model"},{"text":"(parameter) map: any","docs":"","start":85,"length":3,"line":5,"character":21,"targetString":"map"},{"text":"var Proxy: ProxyConstructor\nnew <any>(target: any, handler: ProxyHandler<any>) => any","docs":"","start":99,"length":5,"line":6,"character":6,"targetString":"Proxy"},{"text":"(parameter) map: any","docs":"","start":105,"length":3,"line":6,"character":12,"targetString":"map"},{"text":"(parameter) model: any","docs":"","start":112,"length":5,"line":6,"character":19,"targetString":"model"},{"text":"(method) ProxyHandler<any>.get?(target: any, p: string | symbol, receiver: any): any","docs":"","start":125,"length":3,"line":7,"character":4,"targetString":"get"},{"text":"(parameter) _: any","docs":"","start":129,"length":1,"line":7,"character":8,"targetString":"_"},{"text":"(parameter) key: string | symbol","docs":"","start":132,"length":3,"line":7,"character":11,"targetString":"key"},{"text":"const mkey: any","docs":"","start":151,"length":4,"line":8,"character":12,"targetString":"mkey"},{"text":"(parameter) map: any","docs":"","start":158,"length":3,"line":8,"character":19,"targetString":"map"},{"text":"(parameter) map: any","docs":"","start":164,"length":3,"line":8,"character":25,"targetString":"map"},{"text":"(parameter) key: string | symbol","docs":"","start":168,"length":3,"line":8,"character":29,"targetString":"key"},{"text":"(parameter) key: string | symbol","docs":"","start":175,"length":3,"line":8,"character":36,"targetString":"key"},{"text":"namespace Reflect","docs":"","start":192,"length":7,"line":9,"character":13,"targetString":"Reflect"},{"text":"function Reflect.get(target: object, propertyKey: PropertyKey, receiver?: any): any","docs":"Gets the property of target, equivalent to `target[propertyKey]` when `receiver === target`.","start":200,"length":3,"line":9,"character":21,"targetString":"get"},{"text":"(parameter) model: any","docs":"","start":204,"length":5,"line":9,"character":25,"targetString":"model"},{"text":"const mkey: any","docs":"","start":211,"length":4,"line":9,"character":32,"targetString":"mkey"},{"text":"(method) ProxyHandler<any>.set?(target: any, p: string | symbol, value: any, receiver: any): boolean","docs":"","start":228,"length":3,"line":11,"character":4,"targetString":"set"},{"text":"(parameter) _: any","docs":"","start":232,"length":1,"line":11,"character":8,"targetString":"_"},{"text":"(parameter) key: string | symbol","docs":"","start":235,"length":3,"line":11,"character":11,"targetString":"key"},{"text":"(parameter) value: any","docs":"","start":240,"length":5,"line":11,"character":16,"targetString":"value"},{"text":"const mkey: any","docs":"","start":261,"length":4,"line":12,"character":12,"targetString":"mkey"},{"text":"(parameter) map: any","docs":"","start":268,"length":3,"line":12,"character":19,"targetString":"map"},{"text":"(parameter) map: any","docs":"","start":274,"length":3,"line":12,"character":25,"targetString":"map"},{"text":"(parameter) key: string | symbol","docs":"","start":278,"length":3,"line":12,"character":29,"targetString":"key"},{"text":"(parameter) key: string | symbol","docs":"","start":285,"length":3,"line":12,"character":36,"targetString":"key"},{"text":"namespace Reflect","docs":"","start":302,"length":7,"line":13,"character":13,"targetString":"Reflect"},{"text":"function Reflect.set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean","docs":"Sets the property of target, equivalent to `target[propertyKey] = value` when `receiver === target`.","start":310,"length":3,"line":13,"character":21,"targetString":"set"},{"text":"(parameter) model: any","docs":"","start":314,"length":5,"line":13,"character":25,"targetString":"model"},{"text":"const mkey: any","docs":"","start":321,"length":4,"line":13,"character":32,"targetString":"mkey"},{"text":"(parameter) value: any","docs":"","start":327,"length":5,"line":13,"character":38,"targetString":"value"},{"text":"var window: Window & typeof globalThis","docs":"","start":346,"length":6,"line":17,"character":0,"targetString":"window"},{"text":"const bind: (model: any, map: any) => any","docs":"bind","start":367,"length":4,"line":17,"character":21,"targetString":"bind"},{"text":"var document: Document","docs":"","start":372,"length":8,"line":17,"character":26,"targetString":"document"},{"text":"(method) Document.getElementById(elementId: string): HTMLElement | null","docs":"Returns a reference to the first object with the specified value of the ID attribute.","start":381,"length":14,"line":17,"character":35,"targetString":"getElementById"},{"text":"(property) value: string","docs":"","start":406,"length":5,"line":18,"character":2,"targetString":"value"}]],"/blog/Javascript基础/发布订阅":[[{"text":"class Dispatcher","docs":"","start":13,"length":10,"line":0,"character":13,"targetString":"Dispatcher"},{"text":"(property) Dispatcher.instance: Dispatcher","docs":"","start":70,"length":8,"line":2,"character":16,"targetString":"instance"},{"text":"constructor Dispatcher(): Dispatcher","docs":"","start":85,"length":10,"line":2,"character":31,"targetString":"Dispatcher"},{"text":"(property) Dispatcher.events: object","docs":"","start":108,"length":6,"line":3,"character":10,"targetString":"events"},{"text":"(method) Dispatcher.addEventListener(type: string, listener: Function): void","docs":"","start":138,"length":16,"line":5,"character":9,"targetString":"addEventListener"},{"text":"(parameter) type: string","docs":"","start":155,"length":4,"line":5,"character":26,"targetString":"type"},{"text":"(parameter) listener: Function","docs":"","start":169,"length":8,"line":5,"character":40,"targetString":"listener"},{"text":"interface Function","docs":"Creates a new function.","start":179,"length":8,"line":5,"character":50,"targetString":"Function"},{"text":"const listeners: any","docs":"","start":201,"length":9,"line":6,"character":10,"targetString":"listeners"},{"text":"(property) Dispatcher.events: object","docs":"","start":218,"length":6,"line":6,"character":27,"targetString":"events"},{"text":"(parameter) type: string","docs":"","start":225,"length":4,"line":6,"character":34,"targetString":"type"},{"text":"const listeners: any","docs":"","start":241,"length":9,"line":7,"character":4,"targetString":"listeners"},{"text":"(parameter) listener: Function","docs":"","start":256,"length":8,"line":7,"character":19,"targetString":"listener"},{"text":"(property) Dispatcher.events: object","docs":"","start":275,"length":6,"line":8,"character":9,"targetString":"events"},{"text":"(parameter) type: string","docs":"","start":282,"length":4,"line":8,"character":16,"targetString":"type"},{"text":"const listeners: any","docs":"","start":290,"length":9,"line":8,"character":24,"targetString":"listeners"},{"text":"(method) Dispatcher.removeEventListener(type: string, listener: Function): void","docs":"","start":314,"length":19,"line":11,"character":9,"targetString":"removeEventListener"},{"text":"(parameter) type: string","docs":"","start":334,"length":4,"line":11,"character":29,"targetString":"type"},{"text":"(parameter) listener: Function","docs":"","start":348,"length":8,"line":11,"character":43,"targetString":"listener"},{"text":"interface Function","docs":"Creates a new function.","start":358,"length":8,"line":11,"character":53,"targetString":"Function"},{"text":"const listeners: any","docs":"","start":380,"length":9,"line":12,"character":10,"targetString":"listeners"},{"text":"(property) Dispatcher.events: object","docs":"","start":397,"length":6,"line":12,"character":27,"targetString":"events"},{"text":"(parameter) type: string","docs":"","start":404,"length":4,"line":12,"character":34,"targetString":"type"},{"text":"const index: any","docs":"","start":426,"length":5,"line":13,"character":10,"targetString":"index"},{"text":"const listeners: any","docs":"","start":434,"length":9,"line":13,"character":18,"targetString":"listeners"},{"text":"(parameter) listener: Function","docs":"","start":452,"length":8,"line":13,"character":36,"targetString":"listener"},{"text":"const listeners: any","docs":"","start":466,"length":9,"line":14,"character":4,"targetString":"listeners"},{"text":"const index: any","docs":"","start":483,"length":5,"line":14,"character":21,"targetString":"index"},{"text":"(method) Dispatcher.dispatch(type: string, message: any): void","docs":"","start":507,"length":8,"line":17,"character":9,"targetString":"dispatch"},{"text":"(parameter) type: string","docs":"","start":516,"length":4,"line":17,"character":18,"targetString":"type"},{"text":"(parameter) message: any","docs":"","start":530,"length":7,"line":17,"character":32,"targetString":"message"},{"text":"const listeners: any","docs":"","start":556,"length":9,"line":18,"character":10,"targetString":"listeners"},{"text":"(property) Dispatcher.events: object","docs":"","start":573,"length":6,"line":18,"character":27,"targetString":"events"},{"text":"(parameter) type: string","docs":"","start":580,"length":4,"line":18,"character":34,"targetString":"type"},{"text":"const listener: any","docs":"","start":607,"length":8,"line":19,"character":15,"targetString":"listener"},{"text":"const listeners: any","docs":"","start":619,"length":9,"line":19,"character":27,"targetString":"listeners"},{"text":"const listener: any","docs":"","start":638,"length":8,"line":20,"character":6,"targetString":"listener"},{"text":"(parameter) message: any","docs":"","start":647,"length":7,"line":20,"character":15,"targetString":"message"}],[{"text":"const Eve: {\n    events: {};\n    on(type: any, listener: any): void;\n    off(type: any, listener: any): void;\n    emit(type: any, message: any): void;\n}","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"Eve"},{"text":"(property) events: {}","docs":"","start":16,"length":6,"line":1,"character":2,"targetString":"events"},{"text":"(method) on(type: any, listener: any): void","docs":"","start":30,"length":2,"line":2,"character":2,"targetString":"on"},{"text":"(parameter) type: any","docs":"","start":33,"length":4,"line":2,"character":5,"targetString":"type"},{"text":"(parameter) listener: any","docs":"","start":39,"length":8,"line":2,"character":11,"targetString":"listener"},{"text":"const listeners: any","docs":"","start":61,"length":9,"line":3,"character":10,"targetString":"listeners"},{"text":"(property) events: {}","docs":"","start":78,"length":6,"line":3,"character":27,"targetString":"events"},{"text":"(parameter) type: any","docs":"","start":85,"length":4,"line":3,"character":34,"targetString":"type"},{"text":"const listeners: any","docs":"","start":101,"length":9,"line":4,"character":4,"targetString":"listeners"},{"text":"(parameter) listener: any","docs":"","start":116,"length":8,"line":4,"character":19,"targetString":"listener"},{"text":"(property) events: {}","docs":"","start":135,"length":6,"line":5,"character":9,"targetString":"events"},{"text":"(parameter) type: any","docs":"","start":142,"length":4,"line":5,"character":16,"targetString":"type"},{"text":"const listeners: any","docs":"","start":150,"length":9,"line":5,"character":24,"targetString":"listeners"},{"text":"(method) off(type: any, listener: any): void","docs":"","start":167,"length":3,"line":7,"character":2,"targetString":"off"},{"text":"(parameter) type: any","docs":"","start":171,"length":4,"line":7,"character":6,"targetString":"type"},{"text":"(parameter) listener: any","docs":"","start":177,"length":8,"line":7,"character":12,"targetString":"listener"},{"text":"const listeners: any","docs":"","start":199,"length":9,"line":8,"character":10,"targetString":"listeners"},{"text":"(property) events: {}","docs":"","start":216,"length":6,"line":8,"character":27,"targetString":"events"},{"text":"(parameter) type: any","docs":"","start":223,"length":4,"line":8,"character":34,"targetString":"type"},{"text":"const index: any","docs":"","start":245,"length":5,"line":9,"character":10,"targetString":"index"},{"text":"const listeners: any","docs":"","start":253,"length":9,"line":9,"character":18,"targetString":"listeners"},{"text":"(parameter) listener: any","docs":"","start":271,"length":8,"line":9,"character":36,"targetString":"listener"},{"text":"const listeners: any","docs":"","start":285,"length":9,"line":10,"character":4,"targetString":"listeners"},{"text":"const index: any","docs":"","start":302,"length":5,"line":10,"character":21,"targetString":"index"},{"text":"(method) emit(type: any, message: any): void","docs":"","start":319,"length":4,"line":12,"character":2,"targetString":"emit"},{"text":"(parameter) type: any","docs":"","start":324,"length":4,"line":12,"character":7,"targetString":"type"},{"text":"(parameter) message: any","docs":"","start":330,"length":7,"line":12,"character":13,"targetString":"message"},{"text":"const listeners: any","docs":"","start":351,"length":9,"line":13,"character":10,"targetString":"listeners"},{"text":"(property) events: {}","docs":"","start":368,"length":6,"line":13,"character":27,"targetString":"events"},{"text":"(parameter) type: any","docs":"","start":375,"length":4,"line":13,"character":34,"targetString":"type"},{"text":"const listener: any","docs":"","start":430,"length":8,"line":15,"character":15,"targetString":"listener"},{"text":"const listeners: any","docs":"","start":442,"length":9,"line":15,"character":27,"targetString":"listeners"},{"text":"const listener: any","docs":"","start":469,"length":8,"line":16,"character":6,"targetString":"listener"},{"text":"(parameter) message: any","docs":"","start":478,"length":7,"line":16,"character":15,"targetString":"message"}]],"/blog/Javascript基础/可迭代对象（iterable）":[[{"text":"const obj: {\n    [Symbol.iterator]: () => Generator<number, void, unknown>;\n}","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"obj"},{"text":"var Symbol: SymbolConstructor","docs":"","start":17,"length":6,"line":1,"character":3,"targetString":"Symbol"},{"text":"(property) SymbolConstructor.iterator: typeof Symbol.iterator","docs":"A method that returns the default iterator for an object. Called by the semantics of the\r\nfor-of statement.","start":24,"length":8,"line":1,"character":10,"targetString":"iterator"},{"text":"let i: number","docs":"","start":62,"length":1,"line":2,"character":13,"targetString":"i"},{"text":"let i: number","docs":"","start":69,"length":1,"line":2,"character":20,"targetString":"i"},{"text":"let i: number","docs":"","start":76,"length":1,"line":2,"character":27,"targetString":"i"},{"text":"let i: number","docs":"","start":87,"length":1,"line":2,"character":38,"targetString":"i"},{"text":"let i: number","docs":"","start":105,"length":1,"line":6,"character":9,"targetString":"i"},{"text":"const obj: {\n    [Symbol.iterator]: () => Generator<number, void, unknown>;\n}","docs":"","start":110,"length":3,"line":6,"character":14,"targetString":"obj"},{"text":"var console: Console","docs":"","start":119,"length":7,"line":7,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":127,"length":3,"line":7,"character":10,"targetString":"log"},{"text":"let i: number","docs":"","start":131,"length":1,"line":7,"character":14,"targetString":"i"}],[{"text":"function isIterable(obj: any): boolean","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"isIterable"},{"text":"(parameter) obj: any","docs":"","start":20,"length":3,"line":0,"character":20,"targetString":"obj"},{"text":"(parameter) obj: any","docs":"","start":43,"length":3,"line":1,"character":16,"targetString":"obj"},{"text":"var Symbol: SymbolConstructor","docs":"","start":47,"length":6,"line":1,"character":20,"targetString":"Symbol"},{"text":"(property) SymbolConstructor.iterator: typeof Symbol.iterator","docs":"A method that returns the default iterator for an object. Called by the semantics of the\r\nfor-of statement.","start":54,"length":8,"line":1,"character":27,"targetString":"iterator"}],[{"text":"var console: Console","docs":"","start":0,"length":7,"line":0,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":8,"length":3,"line":0,"character":8,"targetString":"log"},{"text":"var console: Console","docs":"","start":36,"length":7,"line":1,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":44,"length":3,"line":1,"character":8,"targetString":"log"},{"text":"var console: Console","docs":"","start":72,"length":7,"line":2,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":80,"length":3,"line":2,"character":8,"targetString":"log"},{"text":"var Map: MapConstructor\nnew () => Map<any, any> (+2 overloads)","docs":"","start":99,"length":3,"line":2,"character":27,"targetString":"Map"},{"text":"var console: Console","docs":"","start":115,"length":7,"line":3,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":123,"length":3,"line":3,"character":8,"targetString":"log"},{"text":"var WeakMap: WeakMapConstructor\nnew <object, any>(entries?: readonly [object, any][] | null | undefined) => WeakMap<object, any> (+1 overload)","docs":"","start":142,"length":7,"line":3,"character":27,"targetString":"WeakMap"},{"text":"var console: Console","docs":"","start":163,"length":7,"line":4,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":171,"length":3,"line":4,"character":8,"targetString":"log"},{"text":"var Set: SetConstructor\nnew <unknown>(iterable?: Iterable<unknown> | null | undefined) => Set<unknown> (+1 overload)","docs":"","start":190,"length":3,"line":4,"character":27,"targetString":"Set"},{"text":"var console: Console","docs":"","start":206,"length":7,"line":5,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":214,"length":3,"line":5,"character":8,"targetString":"log"},{"text":"var WeakSet: WeakSetConstructor\nnew <object>(values?: readonly object[] | null | undefined) => WeakSet<object> (+1 overload)","docs":"","start":233,"length":7,"line":5,"character":27,"targetString":"WeakSet"},{"text":"var console: Console","docs":"","start":254,"length":7,"line":6,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":262,"length":3,"line":6,"character":8,"targetString":"log"},{"text":"var console: Console","docs":"","start":297,"length":7,"line":7,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":305,"length":3,"line":7,"character":8,"targetString":"log"},{"text":"var document: Document","docs":"","start":320,"length":8,"line":7,"character":23,"targetString":"document"},{"text":"(method) Document.getElementsByTagName<\"script\">(qualifiedName: \"script\"): HTMLCollectionOf<HTMLScriptElement> (+2 overloads)","docs":"Retrieves a collection of objects based on the specified element name.","start":329,"length":20,"line":7,"character":32,"targetString":"getElementsByTagName"},{"text":"var console: Console","docs":"","start":370,"length":7,"line":8,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":378,"length":3,"line":8,"character":8,"targetString":"log"}]],"/blog/Javascript基础/图片转base64":[[{"text":"const parseBase64: (imgUrl: string) => Promise<string>","docs":"","start":13,"length":11,"line":0,"character":13,"targetString":"parseBase64"},{"text":"(parameter) imgUrl: string","docs":"","start":28,"length":6,"line":0,"character":28,"targetString":"imgUrl"},{"text":"var Promise: PromiseConstructor\nnew <string>(executor: (resolve: (value: string | PromiseLike<string>) => void, reject: (reason?: any) => void) => void) => Promise<string>","docs":"Creates a new Promise.","start":53,"length":7,"line":1,"character":6,"targetString":"Promise"},{"text":"(parameter) resolve: (value: string | PromiseLike<string>) => void","docs":"","start":70,"length":7,"line":1,"character":23,"targetString":"resolve"},{"text":"var window: Window & typeof globalThis","docs":"","start":88,"length":6,"line":2,"character":4,"targetString":"window"},{"text":"var URL: {\n    new (url: string | URL, base?: string | URL | undefined): URL;\n    prototype: URL;\n    createObjectURL(object: any): string;\n    revokeObjectURL(url: string): void;\n}","docs":"The URL interface represents an object providing static methods used for creating object URLs.","start":95,"length":3,"line":2,"character":11,"targetString":"URL"},{"text":"var window: Window & typeof globalThis","docs":"","start":101,"length":6,"line":2,"character":17,"targetString":"window"},{"text":"var URL: {\n    new (url: string | URL, base?: string | URL | undefined): URL;\n    prototype: URL;\n    createObjectURL(object: any): string;\n    revokeObjectURL(url: string): void;\n}","docs":"The URL interface represents an object providing static methods used for creating object URLs.","start":108,"length":3,"line":2,"character":24,"targetString":"URL"},{"text":"var window: Window & typeof globalThis","docs":"","start":115,"length":6,"line":2,"character":31,"targetString":"window"},{"text":"var webkitURL: {\n    new (url: string | URL, base?: string | URL | undefined): URL;\n    prototype: URL;\n    createObjectURL(object: any): string;\n    revokeObjectURL(url: string): void;\n}","docs":"","start":122,"length":9,"line":2,"character":38,"targetString":"webkitURL"},{"text":"const xhr: XMLHttpRequest","docs":"","start":143,"length":3,"line":4,"character":10,"targetString":"xhr"},{"text":"var XMLHttpRequest: new () => XMLHttpRequest","docs":"Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.","start":153,"length":14,"line":4,"character":20,"targetString":"XMLHttpRequest"},{"text":"const xhr: XMLHttpRequest","docs":"","start":174,"length":3,"line":5,"character":4,"targetString":"xhr"},{"text":"(method) XMLHttpRequest.open(method: string, url: string | URL, async: boolean, username?: string | null | undefined, password?: string | null | undefined): void (+1 overload)","docs":"Sets the request method, request URL, and synchronous flag.\n\nThrows a \"SyntaxError\" DOMException if either method is not a valid method or url cannot be parsed.\n\nThrows a \"SecurityError\" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n\nThrows an \"InvalidAccessError\" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.","start":178,"length":4,"line":5,"character":8,"targetString":"open"},{"text":"(parameter) imgUrl: string","docs":"","start":190,"length":6,"line":5,"character":20,"targetString":"imgUrl"},{"text":"const xhr: XMLHttpRequest","docs":"","start":208,"length":3,"line":6,"character":4,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.responseType: XMLHttpRequestResponseType","docs":"Returns the response type.\n\nCan be set to change the response type. Values are: the empty string (default), \"arraybuffer\", \"blob\", \"document\", \"json\", and \"text\".\n\nWhen set: setting to \"document\" is ignored if current global object is not a Window object.\n\nWhen set: throws an \"InvalidStateError\" DOMException if state is loading or done.\n\nWhen set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.","start":212,"length":12,"line":6,"character":8,"targetString":"responseType"},{"text":"const xhr: XMLHttpRequest","docs":"","start":239,"length":3,"line":8,"character":4,"targetString":"xhr"},{"text":"(property) XMLHttpRequestEventTarget.onload: ((this: XMLHttpRequest, ev: ProgressEvent<EventTarget>) => any) | null","docs":"","start":243,"length":6,"line":8,"character":8,"targetString":"onload"},{"text":"const xhr: XMLHttpRequest","docs":"","start":270,"length":3,"line":9,"character":10,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.readyState: number","docs":"Returns client's state.","start":274,"length":10,"line":9,"character":14,"targetString":"readyState"},{"text":"const xhr: XMLHttpRequest","docs":"","start":294,"length":3,"line":9,"character":34,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.status: number","docs":"","start":298,"length":6,"line":9,"character":38,"targetString":"status"},{"text":"const blob: any","docs":"","start":330,"length":4,"line":10,"character":14,"targetString":"blob"},{"text":"const xhr: XMLHttpRequest","docs":"","start":337,"length":3,"line":10,"character":21,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.response: any","docs":"Returns the response body.","start":341,"length":8,"line":10,"character":25,"targetString":"response"},{"text":"const reader: FileReader","docs":"","start":364,"length":6,"line":11,"character":14,"targetString":"reader"},{"text":"var FileReader: new () => FileReader","docs":"Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.","start":377,"length":10,"line":11,"character":27,"targetString":"FileReader"},{"text":"const reader: FileReader","docs":"","start":398,"length":6,"line":12,"character":8,"targetString":"reader"},{"text":"(property) FileReader.onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null","docs":"","start":405,"length":9,"line":12,"character":15,"targetString":"onloadend"},{"text":"(parameter) e: ProgressEvent<FileReader>","docs":"","start":418,"length":1,"line":12,"character":28,"targetString":"e"},{"text":"(parameter) resolve: (value: string | PromiseLike<string>) => void","docs":"","start":436,"length":7,"line":13,"character":10,"targetString":"resolve"},{"text":"(parameter) e: ProgressEvent<FileReader>","docs":"","start":444,"length":1,"line":13,"character":18,"targetString":"e"},{"text":"(property) ProgressEvent<FileReader>.target: FileReader | null","docs":"Returns the object to which event is dispatched (its target).","start":446,"length":6,"line":13,"character":20,"targetString":"target"},{"text":"(property) FileReader.result: string | ArrayBuffer | null","docs":"","start":453,"length":6,"line":13,"character":27,"targetString":"result"},{"text":"const reader: FileReader","docs":"","start":489,"length":6,"line":15,"character":8,"targetString":"reader"},{"text":"(method) FileReader.readAsDataURL(blob: Blob): void","docs":"","start":496,"length":13,"line":15,"character":15,"targetString":"readAsDataURL"},{"text":"const blob: any","docs":"","start":510,"length":4,"line":15,"character":29,"targetString":"blob"},{"text":"const xhr: XMLHttpRequest","docs":"","start":535,"length":3,"line":19,"character":4,"targetString":"xhr"},{"text":"(method) XMLHttpRequest.send(body?: Document | XMLHttpRequestBodyInit | null | undefined): void","docs":"Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n\nThrows an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.","start":539,"length":4,"line":19,"character":8,"targetString":"send"}],[{"text":"interface Img","docs":"","start":17,"length":3,"line":0,"character":17,"targetString":"Img"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":84,"length":16,"line":2,"character":28,"targetString":"HTMLImageElement"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":107,"length":16,"line":3,"character":4,"targetString":"HTMLImageElement"},{"text":"const Img: ({ src, ...props }: Img) => any","docs":"","start":145,"length":3,"line":6,"character":13,"targetString":"Img"},{"text":"var src: any","docs":"","start":154,"length":3,"line":6,"character":22,"targetString":"src"},{"text":"var props: {}","docs":"","start":162,"length":5,"line":6,"character":30,"targetString":"props"},{"text":"interface Img","docs":"","start":171,"length":3,"line":6,"character":39,"targetString":"Img"},{"text":"const srcStr: any","docs":"","start":190,"length":6,"line":7,"character":9,"targetString":"srcStr"},{"text":"const setSrc: any","docs":"","start":198,"length":6,"line":7,"character":17,"targetString":"setSrc"},{"text":"var src: any","docs":"","start":217,"length":3,"line":7,"character":36,"targetString":"src"},{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":260,"length":4,"line":10,"character":17,"targetString":"test"},{"text":"var src: any","docs":"","start":265,"length":3,"line":10,"character":22,"targetString":"src"},{"text":"var src: any","docs":"","start":291,"length":3,"line":11,"character":18,"targetString":"src"},{"text":"const setSrc: any","docs":"","start":301,"length":6,"line":11,"character":28,"targetString":"setSrc"},{"text":"const setSrc: any","docs":"","start":328,"length":6,"line":13,"character":6,"targetString":"setSrc"},{"text":"var src: any","docs":"","start":335,"length":3,"line":13,"character":13,"targetString":"src"},{"text":"var src: any","docs":"","start":352,"length":3,"line":15,"character":6,"targetString":"src"},{"text":"var props: {}","docs":"","start":377,"length":5,"line":17,"character":18,"targetString":"props"},{"text":"(JSX attribute) src: any","docs":"","start":384,"length":3,"line":17,"character":25,"targetString":"src"},{"text":"const srcStr: any","docs":"","start":389,"length":6,"line":17,"character":30,"targetString":"srcStr"}]],"/blog/Javascript基础/实现URL参数parser":[[{"text":"const parseUrlParam: (url: string) => {}","docs":"","start":13,"length":13,"line":0,"character":13,"targetString":"parseUrlParam"},{"text":"(parameter) url: string","docs":"","start":30,"length":3,"line":0,"character":30,"targetString":"url"},{"text":"(parameter) url: string","docs":"","start":55,"length":3,"line":1,"character":7,"targetString":"url"},{"text":"(parameter) url: string","docs":"","start":63,"length":3,"line":1,"character":15,"targetString":"url"},{"text":"(method) String.includes(searchString: string, position?: number | undefined): boolean","docs":"Returns true if searchString appears as a substring of the result of converting this\r\nobject to a String, at one or more positions that are\r\ngreater than or equal to position; otherwise, returns false.","start":67,"length":8,"line":1,"character":19,"targetString":"includes"},{"text":"(parameter) url: string","docs":"","start":94,"length":3,"line":2,"character":2,"targetString":"url"},{"text":"(parameter) url: string","docs":"","start":100,"length":3,"line":2,"character":8,"targetString":"url"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":104,"length":5,"line":2,"character":12,"targetString":"split"},{"text":"const isNumber: RegExp","docs":"","start":126,"length":8,"line":3,"character":8,"targetString":"isNumber"},{"text":"function decodeURIComponent(encodedURIComponent: string): string","docs":"Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).","start":154,"length":18,"line":4,"character":9,"targetString":"decodeURIComponent"},{"text":"(parameter) url: string","docs":"","start":173,"length":3,"line":4,"character":28,"targetString":"url"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":183,"length":5,"line":5,"character":5,"targetString":"split"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":202,"length":5,"line":6,"character":5,"targetString":"split"},{"text":"(method) Array<string>.reduce<{}>(callbackfn: (previousValue: {}, currentValue: string, currentIndex: number, array: string[]) => {}, initialValue: {}): {} (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":218,"length":6,"line":7,"character":5,"targetString":"reduce"},{"text":"(parameter) out: {}","docs":"","start":226,"length":3,"line":7,"character":13,"targetString":"out"},{"text":"(parameter) s: string","docs":"","start":231,"length":1,"line":7,"character":18,"targetString":"s"},{"text":"const union: string[]","docs":"","start":251,"length":5,"line":8,"character":12,"targetString":"union"},{"text":"(parameter) s: string","docs":"","start":259,"length":1,"line":8,"character":20,"targetString":"s"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":261,"length":5,"line":8,"character":22,"targetString":"split"},{"text":"const key: string","docs":"","start":284,"length":3,"line":9,"character":12,"targetString":"key"},{"text":"const union: string[]","docs":"","start":290,"length":5,"line":9,"character":18,"targetString":"union"},{"text":"const value: string | number | true","docs":"","start":311,"length":5,"line":10,"character":12,"targetString":"value"},{"text":"const isNumber: RegExp","docs":"","start":319,"length":8,"line":10,"character":20,"targetString":"isNumber"},{"text":"(method) RegExp.test(string: string): boolean","docs":"Returns a Boolean value that indicates whether or not a pattern exists in a searched string.","start":328,"length":4,"line":10,"character":29,"targetString":"test"},{"text":"const union: string[]","docs":"","start":333,"length":5,"line":10,"character":34,"targetString":"union"},{"text":"var Number: NumberConstructor\n(value?: any) => number","docs":"An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.","start":353,"length":6,"line":11,"character":10,"targetString":"Number"},{"text":"const union: string[]","docs":"","start":360,"length":5,"line":11,"character":17,"targetString":"union"},{"text":"const union: string[]","docs":"","start":380,"length":5,"line":12,"character":10,"targetString":"union"},{"text":"const key: string","docs":"","start":407,"length":3,"line":13,"character":10,"targetString":"key"},{"text":"(parameter) out: {}","docs":"","start":414,"length":3,"line":13,"character":17,"targetString":"out"},{"text":"(parameter) out: {}","docs":"","start":429,"length":3,"line":14,"character":8,"targetString":"out"},{"text":"const key: string","docs":"","start":433,"length":3,"line":14,"character":12,"targetString":"key"},{"text":"(parameter) out: {}","docs":"","start":441,"length":3,"line":14,"character":20,"targetString":"out"},{"text":"const key: string","docs":"","start":445,"length":3,"line":14,"character":24,"targetString":"key"},{"text":"const value: string | number | true","docs":"","start":451,"length":5,"line":14,"character":30,"targetString":"value"},{"text":"(parameter) out: {}","docs":"","start":473,"length":3,"line":15,"character":15,"targetString":"out"},{"text":"(parameter) out: {}","docs":"","start":511,"length":3,"line":18,"character":11,"targetString":"out"},{"text":"const key: string","docs":"","start":525,"length":3,"line":19,"character":9,"targetString":"key"},{"text":"const value: string | number | true","docs":"","start":531,"length":5,"line":19,"character":15,"targetString":"value"}],[{"text":"const toQueryStr: (obj: any) => string","docs":"","start":13,"length":10,"line":0,"character":13,"targetString":"toQueryStr"},{"text":"(parameter) obj: any","docs":"","start":27,"length":3,"line":0,"character":27,"targetString":"obj"},{"text":"(parameter) obj: any","docs":"","start":48,"length":3,"line":1,"character":6,"targetString":"obj"},{"text":"const key: string","docs":"","start":70,"length":3,"line":2,"character":15,"targetString":"key"},{"text":"(parameter) obj: any","docs":"","start":77,"length":3,"line":2,"character":22,"targetString":"obj"},{"text":"(parameter) obj: any","docs":"","start":94,"length":3,"line":3,"character":10,"targetString":"obj"},{"text":"const key: string","docs":"","start":98,"length":3,"line":3,"character":14,"targetString":"key"},{"text":"(parameter) obj: any","docs":"","start":115,"length":3,"line":3,"character":31,"targetString":"obj"},{"text":"const key: string","docs":"","start":119,"length":3,"line":3,"character":35,"targetString":"key"},{"text":"var undefined","docs":"","start":128,"length":9,"line":3,"character":44,"targetString":"undefined"},{"text":"(parameter) obj: any","docs":"","start":156,"length":3,"line":4,"character":15,"targetString":"obj"},{"text":"const key: string","docs":"","start":160,"length":3,"line":4,"character":19,"targetString":"key"},{"text":"var URLSearchParams: new (init?: string | string[][] | Record<string, string> | URLSearchParams | undefined) => URLSearchParams","docs":"","start":194,"length":15,"line":7,"character":15,"targetString":"URLSearchParams"},{"text":"(parameter) obj: any","docs":"","start":210,"length":3,"line":7,"character":31,"targetString":"obj"},{"text":"(method) URLSearchParams.toString(): string","docs":"Returns a string containing a query string suitable for use in a URL. Does not include the question mark.","start":215,"length":8,"line":7,"character":36,"targetString":"toString"}]],"/blog/Javascript基础/封装一个ajax":[[{"text":"function request(url: any, method?: string, params?: null): Promise<unknown>","docs":"","start":104,"length":7,"line":6,"character":9,"targetString":"request"},{"text":"(parameter) url: any","docs":"","start":112,"length":3,"line":6,"character":17,"targetString":"url"},{"text":"(parameter) method: string","docs":"","start":117,"length":6,"line":6,"character":22,"targetString":"method"},{"text":"(parameter) params: null","docs":"","start":133,"length":6,"line":6,"character":38,"targetString":"params"},{"text":"var Promise: PromiseConstructor\nnew <unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise<unknown>","docs":"Creates a new Promise.","start":163,"length":7,"line":7,"character":13,"targetString":"Promise"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":172,"length":7,"line":7,"character":22,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":181,"length":6,"line":7,"character":31,"targetString":"reject"},{"text":"const xhr: XMLHttpRequest","docs":"","start":204,"length":3,"line":8,"character":10,"targetString":"xhr"},{"text":"var XMLHttpRequest: new () => XMLHttpRequest","docs":"Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.","start":214,"length":14,"line":8,"character":20,"targetString":"XMLHttpRequest"},{"text":"const xhr: XMLHttpRequest","docs":"","start":235,"length":3,"line":9,"character":4,"targetString":"xhr"},{"text":"(method) XMLHttpRequest.open(method: string, url: string | URL): void (+1 overload)","docs":"Sets the request method, request URL, and synchronous flag.\n\nThrows a \"SyntaxError\" DOMException if either method is not a valid method or url cannot be parsed.\n\nThrows a \"SecurityError\" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n\nThrows an \"InvalidAccessError\" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.","start":239,"length":4,"line":9,"character":8,"targetString":"open"},{"text":"(parameter) method: string","docs":"","start":244,"length":6,"line":9,"character":13,"targetString":"method"},{"text":"(parameter) url: any","docs":"","start":252,"length":3,"line":9,"character":21,"targetString":"url"},{"text":"const xhr: XMLHttpRequest","docs":"","start":261,"length":3,"line":10,"character":4,"targetString":"xhr"},{"text":"(method) XMLHttpRequest.addEventListener<\"readystatechange\">(type: \"readystatechange\", listener: (this: XMLHttpRequest, ev: Event) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":265,"length":16,"line":10,"character":8,"targetString":"addEventListener"},{"text":"const xhr: XMLHttpRequest","docs":"","start":320,"length":3,"line":11,"character":10,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.readyState: number","docs":"Returns client's state.","start":324,"length":10,"line":11,"character":14,"targetString":"readyState"},{"text":"const xhr: XMLHttpRequest","docs":"","start":356,"length":3,"line":12,"character":12,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.status: number","docs":"","start":360,"length":6,"line":12,"character":16,"targetString":"status"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":388,"length":7,"line":13,"character":10,"targetString":"resolve"},{"text":"const xhr: XMLHttpRequest","docs":"","start":396,"length":3,"line":13,"character":18,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.responseText: string","docs":"Returns response as text.\n\nThrows an \"InvalidStateError\" DOMException if responseType is not the empty string or \"text\".","start":400,"length":12,"line":13,"character":22,"targetString":"responseText"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":441,"length":6,"line":15,"character":10,"targetString":"reject"},{"text":"(property) code: number","docs":"","start":462,"length":4,"line":16,"character":12,"targetString":"code"},{"text":"const xhr: XMLHttpRequest","docs":"","start":468,"length":3,"line":16,"character":18,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.status: number","docs":"","start":472,"length":6,"line":16,"character":22,"targetString":"status"},{"text":"(property) response: any","docs":"","start":492,"length":8,"line":17,"character":12,"targetString":"response"},{"text":"const xhr: XMLHttpRequest","docs":"","start":502,"length":3,"line":17,"character":22,"targetString":"xhr"},{"text":"(property) XMLHttpRequest.response: any","docs":"Returns the response body.","start":506,"length":8,"line":17,"character":26,"targetString":"response"},{"text":"function setTimeout(handler: TimerHandler, timeout?: number | undefined, ...arguments: any[]): number","docs":"","start":557,"length":10,"line":22,"character":4,"targetString":"setTimeout"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":574,"length":6,"line":22,"character":21,"targetString":"reject"},{"text":"const xhr: XMLHttpRequest","docs":"","start":608,"length":3,"line":23,"character":4,"targetString":"xhr"},{"text":"(method) XMLHttpRequest.send(body?: Document | XMLHttpRequestBodyInit | null | undefined): void","docs":"Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n\nThrows an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.","start":612,"length":4,"line":23,"character":8,"targetString":"send"},{"text":"var JSON: JSON","docs":"An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.","start":617,"length":4,"line":23,"character":13,"targetString":"JSON"},{"text":"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)","docs":"Converts a JavaScript value to a JavaScript Object Notation (JSON) string.","start":622,"length":9,"line":23,"character":18,"targetString":"stringify"},{"text":"(parameter) params: null","docs":"","start":632,"length":6,"line":23,"character":28,"targetString":"params"},{"text":"function request(url: any, method?: string, params?: null): Promise<unknown>","docs":"","start":649,"length":7,"line":27,"character":0,"targetString":"request"},{"text":"(method) Promise<unknown>.then<void, never>(onfulfilled?: ((value: unknown) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":706,"length":4,"line":27,"character":57,"targetString":"then"},{"text":"var console: Console","docs":"","start":711,"length":7,"line":27,"character":62,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":719,"length":3,"line":27,"character":70,"targetString":"log"},{"text":"function request(url: any, method?: string, params?: null): Promise<unknown>","docs":"","start":724,"length":7,"line":28,"character":0,"targetString":"request"},{"text":"(property) name: string","docs":"","start":775,"length":4,"line":29,"character":2,"targetString":"name"},{"text":"(property) age: number","docs":"","start":792,"length":3,"line":30,"character":2,"targetString":"age"},{"text":"(method) Promise<unknown>.then<void, never>(onfulfilled?: ((value: unknown) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":804,"length":4,"line":31,"character":3,"targetString":"then"},{"text":"var console: Console","docs":"","start":809,"length":7,"line":31,"character":8,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":817,"length":3,"line":31,"character":16,"targetString":"log"},{"text":"function request(url: any, method?: string, params?: null): Promise<unknown>","docs":"","start":823,"length":7,"line":33,"character":0,"targetString":"request"},{"text":"(method) Promise<unknown>.then<void, never>(onfulfilled?: ((value: unknown) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":881,"length":4,"line":33,"character":58,"targetString":"then"},{"text":"var console: Console","docs":"","start":886,"length":7,"line":33,"character":63,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":894,"length":3,"line":33,"character":71,"targetString":"log"},{"text":"function request(url: any, method?: string, params?: null): Promise<unknown>","docs":"","start":899,"length":7,"line":34,"character":0,"targetString":"request"},{"text":"(property) name: string","docs":"","start":951,"length":4,"line":35,"character":2,"targetString":"name"},{"text":"(property) age: number","docs":"","start":968,"length":3,"line":36,"character":2,"targetString":"age"},{"text":"(method) Promise<unknown>.then<void, never>(onfulfilled?: ((value: unknown) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":980,"length":4,"line":37,"character":3,"targetString":"then"},{"text":"var console: Console","docs":"","start":985,"length":7,"line":37,"character":8,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":993,"length":3,"line":37,"character":16,"targetString":"log"}]],"/blog/Javascript基础/拖拽排序":[[{"text":"function createDragable(node: any): void","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"createDragable"},{"text":"(parameter) node: any","docs":"","start":24,"length":4,"line":0,"character":24,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":36,"length":4,"line":1,"character":4,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":60,"length":4,"line":1,"character":28,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":78,"length":4,"line":2,"character":8,"targetString":"node"},{"text":"let draging: any","docs":"","start":116,"length":7,"line":5,"character":8,"targetString":"draging"},{"text":"(parameter) node: any","docs":"","start":137,"length":4,"line":7,"character":4,"targetString":"node"},{"text":"(parameter) event: any","docs":"","start":172,"length":5,"line":7,"character":39,"targetString":"event"},{"text":"let draging: any","docs":"","start":191,"length":7,"line":8,"character":8,"targetString":"draging"},{"text":"(parameter) event: any","docs":"","start":201,"length":5,"line":8,"character":18,"targetString":"event"},{"text":"(parameter) node: any","docs":"","start":227,"length":4,"line":11,"character":4,"targetString":"node"},{"text":"(parameter) event: any","docs":"","start":261,"length":5,"line":11,"character":38,"targetString":"event"},{"text":"const target: any","docs":"","start":286,"length":6,"line":12,"character":14,"targetString":"target"},{"text":"(parameter) event: any","docs":"","start":295,"length":5,"line":12,"character":23,"targetString":"event"},{"text":"const target: any","docs":"","start":321,"length":6,"line":13,"character":12,"targetString":"target"},{"text":"const getIndex: (el: any) => number","docs":"","start":365,"length":8,"line":14,"character":16,"targetString":"getIndex"},{"text":"let draging: any","docs":"","start":374,"length":7,"line":14,"character":25,"targetString":"draging"},{"text":"const getIndex: (el: any) => number","docs":"","start":385,"length":8,"line":14,"character":36,"targetString":"getIndex"},{"text":"const target: any","docs":"","start":394,"length":6,"line":14,"character":45,"targetString":"target"},{"text":"const target: any","docs":"","start":421,"length":6,"line":15,"character":16,"targetString":"target"},{"text":"let draging: any","docs":"","start":452,"length":7,"line":15,"character":47,"targetString":"draging"},{"text":"const target: any","docs":"","start":461,"length":6,"line":15,"character":56,"targetString":"target"},{"text":"const target: any","docs":"","start":519,"length":6,"line":17,"character":16,"targetString":"target"},{"text":"let draging: any","docs":"","start":550,"length":7,"line":17,"character":47,"targetString":"draging"},{"text":"const target: any","docs":"","start":559,"length":6,"line":17,"character":56,"targetString":"target"},{"text":"const getIndex: (el: any) => number","docs":"","start":610,"length":8,"line":22,"character":10,"targetString":"getIndex"},{"text":"(parameter) el: any","docs":"","start":621,"length":2,"line":22,"character":21,"targetString":"el"},{"text":"let index: number","docs":"","start":641,"length":5,"line":23,"character":12,"targetString":"index"},{"text":"(parameter) el: any","docs":"","start":667,"length":2,"line":24,"character":15,"targetString":"el"},{"text":"let index: number","docs":"","start":685,"length":5,"line":25,"character":12,"targetString":"index"},{"text":"(parameter) el: any","docs":"","start":706,"length":2,"line":26,"character":12,"targetString":"el"},{"text":"(parameter) el: any","docs":"","start":711,"length":2,"line":26,"character":17,"targetString":"el"},{"text":"let index: number","docs":"","start":763,"length":5,"line":28,"character":15,"targetString":"index"},{"text":"function createDragable(node: any): void","docs":"","start":779,"length":14,"line":32,"character":0,"targetString":"createDragable"},{"text":"var document: Document","docs":"","start":794,"length":8,"line":32,"character":15,"targetString":"document"},{"text":"(method) ParentNode.querySelector<any>(selectors: string): any (+2 overloads)","docs":"Returns the first element that is a descendant of node that matches selectors.","start":803,"length":13,"line":32,"character":24,"targetString":"querySelector"}]],"/blog/Javascript基础/数组克隆-数组 ES6 API实现":[[{"text":"const isArray0: (obj: any) => boolean","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"isArray0"},{"text":"(parameter) obj: any","docs":"","start":17,"length":3,"line":0,"character":17,"targetString":"obj"},{"text":"var Array: ArrayConstructor","docs":"","start":24,"length":5,"line":0,"character":24,"targetString":"Array"},{"text":"(method) ArrayConstructor.isArray(arg: any): arg is any[]","docs":"","start":30,"length":7,"line":0,"character":30,"targetString":"isArray"},{"text":"(parameter) obj: any","docs":"","start":38,"length":3,"line":0,"character":38,"targetString":"obj"},{"text":"const isArray1: (obj: any) => boolean","docs":"","start":49,"length":8,"line":1,"character":6,"targetString":"isArray1"},{"text":"(parameter) obj: any","docs":"","start":60,"length":3,"line":1,"character":17,"targetString":"obj"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":67,"length":6,"line":1,"character":24,"targetString":"Object"},{"text":"(property) ObjectConstructor.prototype: Object","docs":"A reference to the prototype for a class of objects.","start":74,"length":9,"line":1,"character":31,"targetString":"prototype"},{"text":"(method) Object.toString(): string","docs":"Returns a string representation of an object.","start":84,"length":8,"line":1,"character":41,"targetString":"toString"},{"text":"(method) CallableFunction.call<any, [], string>(this: (this: any) => string, thisArg: any): string","docs":"Calls the function with the specified object as the this value and the specified rest arguments as the arguments.","start":93,"length":4,"line":1,"character":50,"targetString":"call"},{"text":"(parameter) obj: any","docs":"","start":98,"length":3,"line":1,"character":55,"targetString":"obj"},{"text":"var console: Console","docs":"","start":124,"length":7,"line":2,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":132,"length":3,"line":2,"character":8,"targetString":"log"},{"text":"const isArray0: (obj: any) => boolean","docs":"","start":136,"length":8,"line":2,"character":12,"targetString":"isArray0"},{"text":"var console: Console","docs":"","start":150,"length":7,"line":3,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":158,"length":3,"line":3,"character":8,"targetString":"log"},{"text":"const isArray0: (obj: any) => boolean","docs":"","start":165,"length":8,"line":4,"character":2,"targetString":"isArray0"},{"text":"(property) length: number","docs":"","start":196,"length":6,"line":6,"character":4,"targetString":"length"},{"text":"var console: Console","docs":"","start":213,"length":7,"line":9,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":221,"length":3,"line":9,"character":8,"targetString":"log"},{"text":"const isArray1: (obj: any) => boolean","docs":"","start":225,"length":8,"line":9,"character":12,"targetString":"isArray1"},{"text":"var console: Console","docs":"","start":239,"length":7,"line":10,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":247,"length":3,"line":10,"character":8,"targetString":"log"},{"text":"const isArray1: (obj: any) => boolean","docs":"","start":254,"length":8,"line":11,"character":2,"targetString":"isArray1"},{"text":"(property) length: number","docs":"","start":285,"length":6,"line":13,"character":4,"targetString":"length"},{"text":"var console: Console","docs":"","start":302,"length":7,"line":16,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":310,"length":3,"line":16,"character":8,"targetString":"log"},{"text":"const isArray0: (obj: any) => boolean","docs":"","start":314,"length":8,"line":16,"character":12,"targetString":"isArray0"},{"text":"var console: Console","docs":"","start":335,"length":7,"line":17,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":343,"length":3,"line":17,"character":8,"targetString":"log"},{"text":"const isArray1: (obj: any) => boolean","docs":"","start":347,"length":8,"line":17,"character":12,"targetString":"isArray1"},{"text":"var console: Console","docs":"","start":368,"length":7,"line":18,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":376,"length":3,"line":18,"character":8,"targetString":"log"},{"text":"const isArray0: (obj: any) => boolean","docs":"","start":380,"length":8,"line":18,"character":12,"targetString":"isArray0"},{"text":"var document: Document","docs":"","start":389,"length":8,"line":18,"character":21,"targetString":"document"},{"text":"(method) Document.getElementsByClassName(classNames: string): HTMLCollectionOf<Element>","docs":"Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.","start":398,"length":22,"line":18,"character":30,"targetString":"getElementsByClassName"},{"text":"var console: Console","docs":"","start":427,"length":7,"line":19,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":435,"length":3,"line":19,"character":8,"targetString":"log"},{"text":"const isArray1: (obj: any) => boolean","docs":"","start":439,"length":8,"line":19,"character":12,"targetString":"isArray1"},{"text":"var document: Document","docs":"","start":448,"length":8,"line":19,"character":21,"targetString":"document"},{"text":"(method) Document.getElementsByClassName(classNames: string): HTMLCollectionOf<Element>","docs":"Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.","start":457,"length":22,"line":19,"character":30,"targetString":"getElementsByClassName"},{"text":"var console: Console","docs":"","start":486,"length":7,"line":20,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":494,"length":3,"line":20,"character":8,"targetString":"log"},{"text":"const isArray0: (obj: any) => boolean","docs":"","start":498,"length":8,"line":20,"character":12,"targetString":"isArray0"},{"text":"var document: Document","docs":"","start":507,"length":8,"line":20,"character":21,"targetString":"document"},{"text":"(method) Document.getElementsByTagName<\"div\">(qualifiedName: \"div\"): HTMLCollectionOf<HTMLDivElement> (+2 overloads)","docs":"Retrieves a collection of objects based on the specified element name.","start":516,"length":20,"line":20,"character":30,"targetString":"getElementsByTagName"},{"text":"var console: Console","docs":"","start":546,"length":7,"line":21,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":554,"length":3,"line":21,"character":8,"targetString":"log"},{"text":"const isArray1: (obj: any) => boolean","docs":"","start":558,"length":8,"line":21,"character":12,"targetString":"isArray1"},{"text":"var document: Document","docs":"","start":567,"length":8,"line":21,"character":21,"targetString":"document"},{"text":"(method) Document.getElementsByTagName<\"div\">(qualifiedName: \"div\"): HTMLCollectionOf<HTMLDivElement> (+2 overloads)","docs":"Retrieves a collection of objects based on the specified element name.","start":576,"length":20,"line":21,"character":30,"targetString":"getElementsByTagName"},{"text":"var console: Console","docs":"","start":606,"length":7,"line":22,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":614,"length":3,"line":22,"character":8,"targetString":"log"},{"text":"var Array: ArrayConstructor","docs":"","start":621,"length":5,"line":23,"character":2,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<string>(iterable: Iterable<string> | ArrayLike<string>): string[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":627,"length":4,"line":23,"character":8,"targetString":"from"},{"text":"(property) ArrayLike<T>.length: number","docs":"","start":654,"length":6,"line":25,"character":4,"targetString":"length"},{"text":"var console: Console","docs":"","start":671,"length":7,"line":28,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":679,"length":3,"line":28,"character":8,"targetString":"log"},{"text":"const isArray0: (obj: any) => boolean","docs":"","start":686,"length":8,"line":29,"character":2,"targetString":"isArray0"},{"text":"var Array: ArrayConstructor","docs":"","start":700,"length":5,"line":30,"character":4,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<string>(iterable: Iterable<string> | ArrayLike<string>): string[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":706,"length":4,"line":30,"character":10,"targetString":"from"},{"text":"(property) ArrayLike<T>.length: number","docs":"","start":737,"length":6,"line":32,"character":6,"targetString":"length"},{"text":"var console: Console","docs":"","start":760,"length":7,"line":36,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":768,"length":3,"line":36,"character":8,"targetString":"log"},{"text":"const isArray1: (obj: any) => boolean","docs":"","start":775,"length":8,"line":37,"character":2,"targetString":"isArray1"},{"text":"var Array: ArrayConstructor","docs":"","start":789,"length":5,"line":38,"character":4,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<string>(iterable: Iterable<string> | ArrayLike<string>): string[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":795,"length":4,"line":38,"character":10,"targetString":"from"},{"text":"(property) ArrayLike<T>.length: number","docs":"","start":826,"length":6,"line":40,"character":6,"targetString":"length"}],[{"text":"const clone0: (arr: any) => any[]","docs":"","start":47,"length":6,"line":1,"character":6,"targetString":"clone0"},{"text":"(parameter) arr: any","docs":"","start":56,"length":3,"line":1,"character":15,"targetString":"arr"},{"text":"const result: any[]","docs":"","start":73,"length":6,"line":2,"character":8,"targetString":"result"},{"text":"let item: any","docs":"","start":96,"length":4,"line":3,"character":11,"targetString":"item"},{"text":"(parameter) arr: any","docs":"","start":104,"length":3,"line":3,"character":19,"targetString":"arr"},{"text":"const result: any[]","docs":"","start":115,"length":6,"line":4,"character":4,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":122,"length":4,"line":4,"character":11,"targetString":"push"},{"text":"let item: any","docs":"","start":127,"length":4,"line":4,"character":16,"targetString":"item"},{"text":"const result: any[]","docs":"","start":146,"length":6,"line":6,"character":9,"targetString":"result"},{"text":"const arr0: number[]","docs":"","start":162,"length":4,"line":9,"character":6,"targetString":"arr0"},{"text":"const newArr0: any[]","docs":"","start":185,"length":7,"line":10,"character":6,"targetString":"newArr0"},{"text":"const clone0: (arr: any) => any[]","docs":"","start":195,"length":6,"line":10,"character":16,"targetString":"clone0"},{"text":"const arr0: number[]","docs":"","start":202,"length":4,"line":10,"character":23,"targetString":"arr0"},{"text":"const arr0: number[]","docs":"","start":208,"length":4,"line":11,"character":0,"targetString":"arr0"},{"text":"var console: Console","docs":"","start":222,"length":7,"line":12,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":230,"length":3,"line":12,"character":8,"targetString":"log"},{"text":"const newArr0: any[]","docs":"","start":234,"length":7,"line":12,"character":12,"targetString":"newArr0"},{"text":"const arr1: number[]","docs":"","start":276,"length":4,"line":15,"character":6,"targetString":"arr1"},{"text":"const newArr1: number[]","docs":"","start":299,"length":7,"line":16,"character":6,"targetString":"newArr1"},{"text":"const arr1: number[]","docs":"","start":309,"length":4,"line":16,"character":16,"targetString":"arr1"},{"text":"(method) Array<number>.slice(start?: number | undefined, end?: number | undefined): number[]","docs":"Returns a copy of a section of an array.\r\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\r\nFor example, -2 refers to the second to last element of the array.","start":314,"length":5,"line":16,"character":21,"targetString":"slice"},{"text":"const arr1: number[]","docs":"","start":322,"length":4,"line":17,"character":0,"targetString":"arr1"},{"text":"var console: Console","docs":"","start":336,"length":7,"line":18,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":344,"length":3,"line":18,"character":8,"targetString":"log"},{"text":"const newArr1: number[]","docs":"","start":348,"length":7,"line":18,"character":12,"targetString":"newArr1"},{"text":"const arr2: number[]","docs":"","start":379,"length":4,"line":21,"character":6,"targetString":"arr2"},{"text":"const newArr2: any[]","docs":"","start":402,"length":7,"line":22,"character":6,"targetString":"newArr2"},{"text":"var Array: ArrayConstructor","docs":"","start":412,"length":5,"line":22,"character":16,"targetString":"Array"},{"text":"(property) ArrayConstructor.prototype: any[]","docs":"","start":418,"length":9,"line":22,"character":22,"targetString":"prototype"},{"text":"(method) Array<any>.concat(...items: ConcatArray<any>[]): any[] (+1 overload)","docs":"Combines two or more arrays.\r\nThis method returns a new array without modifying any existing arrays.","start":428,"length":6,"line":22,"character":32,"targetString":"concat"},{"text":"const arr2: number[]","docs":"","start":435,"length":4,"line":22,"character":39,"targetString":"arr2"},{"text":"const arr2: number[]","docs":"","start":441,"length":4,"line":23,"character":0,"targetString":"arr2"},{"text":"var console: Console","docs":"","start":455,"length":7,"line":24,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":463,"length":3,"line":24,"character":8,"targetString":"log"},{"text":"const newArr2: any[]","docs":"","start":467,"length":7,"line":24,"character":12,"targetString":"newArr2"}],[{"text":"const arr3: number[]","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"arr3"},{"text":"const newArr3: never[] & number[]","docs":"","start":29,"length":7,"line":1,"character":6,"targetString":"newArr3"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":39,"length":6,"line":1,"character":16,"targetString":"Object"},{"text":"(method) ObjectConstructor.assign<never[], number[]>(target: never[], source: number[]): never[] & number[] (+3 overloads)","docs":"Copy the values of all of the enumerable own properties from one or more source objects to a\r\ntarget object. Returns the target object.","start":46,"length":6,"line":1,"character":23,"targetString":"assign"},{"text":"const arr3: number[]","docs":"","start":57,"length":4,"line":1,"character":34,"targetString":"arr3"},{"text":"const arr3: number[]","docs":"","start":63,"length":4,"line":2,"character":0,"targetString":"arr3"},{"text":"var console: Console","docs":"","start":77,"length":7,"line":3,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":85,"length":3,"line":3,"character":8,"targetString":"log"},{"text":"const newArr3: never[] & number[]","docs":"","start":89,"length":7,"line":3,"character":12,"targetString":"newArr3"},{"text":"const arr4: number[]","docs":"","start":105,"length":4,"line":5,"character":6,"targetString":"arr4"},{"text":"const newArr4: number[]","docs":"","start":128,"length":7,"line":6,"character":6,"targetString":"newArr4"},{"text":"const arr4: number[]","docs":"","start":142,"length":4,"line":6,"character":20,"targetString":"arr4"},{"text":"const arr4: number[]","docs":"","start":148,"length":4,"line":7,"character":0,"targetString":"arr4"},{"text":"var console: Console","docs":"","start":162,"length":7,"line":8,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":170,"length":3,"line":8,"character":8,"targetString":"log"},{"text":"const newArr4: number[]","docs":"","start":174,"length":7,"line":8,"character":12,"targetString":"newArr4"},{"text":"const arr5: number[]","docs":"","start":190,"length":4,"line":10,"character":6,"targetString":"arr5"},{"text":"const newArr5: number[]","docs":"","start":213,"length":7,"line":11,"character":6,"targetString":"newArr5"},{"text":"const arr5: number[]","docs":"","start":223,"length":4,"line":11,"character":16,"targetString":"arr5"},{"text":"(method) Array<number>.map<number>(callbackfn: (value: number, index: number, array: number[]) => number, thisArg?: any): number[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":228,"length":3,"line":11,"character":21,"targetString":"map"},{"text":"(parameter) i: number","docs":"","start":232,"length":1,"line":11,"character":25,"targetString":"i"},{"text":"(parameter) i: number","docs":"","start":237,"length":1,"line":11,"character":30,"targetString":"i"},{"text":"const arr5: number[]","docs":"","start":240,"length":4,"line":12,"character":0,"targetString":"arr5"},{"text":"var console: Console","docs":"","start":254,"length":7,"line":13,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":262,"length":3,"line":13,"character":8,"targetString":"log"},{"text":"const newArr5: number[]","docs":"","start":266,"length":7,"line":13,"character":12,"targetString":"newArr5"},{"text":"const arr6: number[]","docs":"","start":282,"length":4,"line":15,"character":6,"targetString":"arr6"},{"text":"const newArr6: never[]","docs":"","start":305,"length":7,"line":16,"character":6,"targetString":"newArr6"},{"text":"const arr6: number[]","docs":"","start":315,"length":4,"line":16,"character":16,"targetString":"arr6"},{"text":"(method) Array<number>.reduce<never[]>(callbackfn: (previousValue: never[], currentValue: number, currentIndex: number, array: number[]) => never[], initialValue: never[]): never[] (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":320,"length":6,"line":16,"character":21,"targetString":"reduce"},{"text":"(parameter) out: never[]","docs":"","start":328,"length":3,"line":16,"character":29,"targetString":"out"},{"text":"(parameter) cur: number","docs":"","start":333,"length":3,"line":16,"character":34,"targetString":"cur"},{"text":"(parameter) out: never[]","docs":"","start":345,"length":3,"line":17,"character":2,"targetString":"out"},{"text":"(method) Array<never>.push(...items: never[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":349,"length":4,"line":17,"character":6,"targetString":"push"},{"text":"(parameter) cur: number","docs":"","start":354,"length":3,"line":17,"character":11,"targetString":"cur"},{"text":"(parameter) out: never[]","docs":"","start":368,"length":3,"line":18,"character":9,"targetString":"out"},{"text":"const arr6: number[]","docs":"","start":379,"length":4,"line":20,"character":0,"targetString":"arr6"},{"text":"var console: Console","docs":"","start":393,"length":7,"line":21,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":401,"length":3,"line":21,"character":8,"targetString":"log"},{"text":"const newArr6: never[]","docs":"","start":405,"length":7,"line":21,"character":12,"targetString":"newArr6"},{"text":"const arr7: number[]","docs":"","start":421,"length":4,"line":23,"character":6,"targetString":"arr7"},{"text":"const newArr7: number[]","docs":"","start":444,"length":7,"line":24,"character":6,"targetString":"newArr7"},{"text":"const arr7: number[]","docs":"","start":454,"length":4,"line":24,"character":16,"targetString":"arr7"},{"text":"(method) Array<number>.filter(predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any): number[] (+1 overload)","docs":"Returns the elements of an array that meet the condition specified in a callback function.","start":459,"length":6,"line":24,"character":21,"targetString":"filter"},{"text":"(parameter) _: number","docs":"","start":466,"length":1,"line":24,"character":28,"targetString":"_"},{"text":"const arr7: number[]","docs":"","start":474,"length":4,"line":25,"character":0,"targetString":"arr7"},{"text":"var console: Console","docs":"","start":488,"length":7,"line":26,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":496,"length":3,"line":26,"character":8,"targetString":"log"},{"text":"const newArr7: number[]","docs":"","start":500,"length":7,"line":26,"character":12,"targetString":"newArr7"}],[{"text":"var Array: ArrayConstructor","docs":"","start":0,"length":5,"line":0,"character":0,"targetString":"Array"},{"text":"(property) ArrayConstructor.prototype: any[]","docs":"","start":6,"length":9,"line":0,"character":6,"targetString":"prototype"},{"text":"(parameter) callbackfn: any","docs":"","start":33,"length":10,"line":0,"character":33,"targetString":"callbackfn"},{"text":"(parameter) thisArg: any","docs":"","start":45,"length":7,"line":0,"character":45,"targetString":"thisArg"},{"text":"const newArr: any[]","docs":"","start":64,"length":6,"line":1,"character":8,"targetString":"newArr"},{"text":"let i: number","docs":"","start":87,"length":1,"line":2,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":94,"length":1,"line":2,"character":18,"targetString":"i"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":103,"length":6,"line":2,"character":27,"targetString":"length"},{"text":"let i: number","docs":"","start":111,"length":1,"line":2,"character":35,"targetString":"i"},{"text":"const newArr: any[]","docs":"","start":122,"length":6,"line":3,"character":4,"targetString":"newArr"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":129,"length":4,"line":3,"character":11,"targetString":"push"},{"text":"(parameter) callbackfn: any","docs":"","start":134,"length":10,"line":3,"character":16,"targetString":"callbackfn"},{"text":"(parameter) thisArg: any","docs":"","start":150,"length":7,"line":3,"character":32,"targetString":"thisArg"},{"text":"let i: number","docs":"","start":164,"length":1,"line":3,"character":46,"targetString":"i"},{"text":"let i: number","docs":"","start":168,"length":1,"line":3,"character":50,"targetString":"i"},{"text":"const newArr: any[]","docs":"","start":191,"length":6,"line":5,"character":9,"targetString":"newArr"},{"text":"var console: Console","docs":"","start":200,"length":7,"line":7,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":208,"length":3,"line":7,"character":8,"targetString":"log"},{"text":"(parameter) i: any","docs":"","start":228,"length":1,"line":7,"character":28,"targetString":"i"},{"text":"(parameter) i: any","docs":"","start":233,"length":1,"line":7,"character":33,"targetString":"i"},{"text":"(parameter) i: any","docs":"","start":237,"length":1,"line":7,"character":37,"targetString":"i"}],[{"text":"var Array: ArrayConstructor","docs":"","start":0,"length":5,"line":0,"character":0,"targetString":"Array"},{"text":"(property) ArrayConstructor.prototype: any[]","docs":"","start":6,"length":9,"line":0,"character":6,"targetString":"prototype"},{"text":"(parameter) callbackfn: any","docs":"","start":36,"length":10,"line":0,"character":36,"targetString":"callbackfn"},{"text":"(parameter) initialValue: null","docs":"","start":48,"length":12,"line":0,"character":48,"targetString":"initialValue"},{"text":"let i: number","docs":"","start":82,"length":1,"line":1,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":89,"length":1,"line":1,"character":18,"targetString":"i"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":98,"length":6,"line":1,"character":27,"targetString":"length"},{"text":"let i: number","docs":"","start":106,"length":1,"line":1,"character":35,"targetString":"i"},{"text":"(parameter) initialValue: null","docs":"","start":117,"length":12,"line":2,"character":4,"targetString":"initialValue"},{"text":"(parameter) callbackfn: any","docs":"","start":132,"length":10,"line":2,"character":19,"targetString":"callbackfn"},{"text":"(parameter) initialValue: null","docs":"","start":143,"length":12,"line":2,"character":30,"targetString":"initialValue"},{"text":"let i: number","docs":"","start":162,"length":1,"line":2,"character":49,"targetString":"i"},{"text":"let i: number","docs":"","start":166,"length":1,"line":2,"character":53,"targetString":"i"},{"text":"(parameter) initialValue: null","docs":"","start":267,"length":12,"line":5,"character":9,"targetString":"initialValue"},{"text":"var console: Console","docs":"","start":282,"length":7,"line":7,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":290,"length":3,"line":7,"character":8,"targetString":"log"},{"text":"(parameter) pre: any","docs":"","start":314,"length":3,"line":7,"character":32,"targetString":"pre"},{"text":"(parameter) cur: any","docs":"","start":319,"length":3,"line":7,"character":37,"targetString":"cur"},{"text":"(parameter) pre: any","docs":"","start":327,"length":3,"line":7,"character":45,"targetString":"pre"},{"text":"(parameter) cur: any","docs":"","start":333,"length":3,"line":7,"character":51,"targetString":"cur"}],[{"text":"var Array: ArrayConstructor","docs":"","start":0,"length":5,"line":0,"character":0,"targetString":"Array"},{"text":"(property) ArrayConstructor.prototype: any[]","docs":"","start":6,"length":9,"line":0,"character":6,"targetString":"prototype"},{"text":"(parameter) callbackfn: any","docs":"","start":36,"length":10,"line":0,"character":36,"targetString":"callbackfn"},{"text":"(parameter) thisArg: any","docs":"","start":48,"length":7,"line":0,"character":48,"targetString":"thisArg"},{"text":"const newArr: any[]","docs":"","start":67,"length":6,"line":1,"character":8,"targetString":"newArr"},{"text":"let i: number","docs":"","start":90,"length":1,"line":2,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":97,"length":1,"line":2,"character":18,"targetString":"i"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":106,"length":6,"line":2,"character":27,"targetString":"length"},{"text":"let i: number","docs":"","start":114,"length":1,"line":2,"character":35,"targetString":"i"},{"text":"(parameter) callbackfn: any","docs":"","start":125,"length":10,"line":3,"character":4,"targetString":"callbackfn"},{"text":"(parameter) thisArg: any","docs":"","start":141,"length":7,"line":3,"character":20,"targetString":"thisArg"},{"text":"let i: number","docs":"","start":155,"length":1,"line":3,"character":34,"targetString":"i"},{"text":"let i: number","docs":"","start":159,"length":1,"line":3,"character":38,"targetString":"i"},{"text":"const newArr: any[]","docs":"","start":171,"length":6,"line":3,"character":50,"targetString":"newArr"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":178,"length":4,"line":3,"character":57,"targetString":"push"},{"text":"let i: number","docs":"","start":188,"length":1,"line":3,"character":67,"targetString":"i"},{"text":"const newArr: any[]","docs":"","start":205,"length":6,"line":5,"character":9,"targetString":"newArr"},{"text":"var console: Console","docs":"","start":214,"length":7,"line":7,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":222,"length":3,"line":7,"character":8,"targetString":"log"},{"text":"(parameter) i: any","docs":"","start":245,"length":1,"line":7,"character":31,"targetString":"i"},{"text":"(parameter) i: any","docs":"","start":250,"length":1,"line":7,"character":36,"targetString":"i"}],[{"text":"const obj: {\n    value: number;\n    testFilter(): any;\n    testReduce(): any;\n}","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"obj"},{"text":"(property) value: number","docs":"","start":16,"length":5,"line":1,"character":2,"targetString":"value"},{"text":"(method) testFilter(): any","docs":"","start":28,"length":10,"line":2,"character":2,"targetString":"testFilter"},{"text":"(parameter) i: any","docs":"","start":117,"length":1,"line":4,"character":39,"targetString":"i"},{"text":"(parameter) i: any","docs":"","start":135,"length":1,"line":5,"character":13,"targetString":"i"},{"text":"(method) testReduce(): any","docs":"","start":171,"length":10,"line":8,"character":2,"targetString":"testReduce"},{"text":"(parameter) pre: any","docs":"","start":217,"length":3,"line":9,"character":31,"targetString":"pre"},{"text":"(parameter) cur: any","docs":"","start":222,"length":3,"line":9,"character":36,"targetString":"cur"},{"text":"(parameter) pre: any","docs":"","start":230,"length":3,"line":9,"character":44,"targetString":"pre"},{"text":"(property) value: number","docs":"","start":241,"length":5,"line":9,"character":55,"targetString":"value"},{"text":"(parameter) cur: any","docs":"","start":249,"length":3,"line":9,"character":63,"targetString":"cur"},{"text":"var console: Console","docs":"","start":263,"length":7,"line":12,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":271,"length":3,"line":12,"character":8,"targetString":"log"},{"text":"const obj: {\n    value: number;\n    testFilter(): any;\n    testReduce(): any;\n}","docs":"","start":275,"length":3,"line":12,"character":12,"targetString":"obj"},{"text":"(method) testFilter(): any","docs":"","start":279,"length":10,"line":12,"character":16,"targetString":"testFilter"},{"text":"var console: Console","docs":"","start":293,"length":7,"line":13,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":301,"length":3,"line":13,"character":8,"targetString":"log"},{"text":"const obj: {\n    value: number;\n    testFilter(): any;\n    testReduce(): any;\n}","docs":"","start":305,"length":3,"line":13,"character":12,"targetString":"obj"},{"text":"(method) testReduce(): any","docs":"","start":309,"length":10,"line":13,"character":16,"targetString":"testReduce"}]],"/blog/Javascript基础/文件下载":[[{"text":"const download: () => void","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"download"},{"text":"const blob: Blob","docs":"","start":35,"length":4,"line":1,"character":10,"targetString":"blob"},{"text":"var Blob: new (blobParts?: BlobPart[] | undefined, options?: BlobPropertyBag | undefined) => Blob","docs":"A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.","start":46,"length":4,"line":1,"character":21,"targetString":"Blob"},{"text":"var URL: {\n    new (url: string | URL, base?: string | URL | undefined): URL;\n    prototype: URL;\n    createObjectURL(object: any): string;\n    revokeObjectURL(url: string): void;\n}","docs":"The URL interface represents an object providing static methods used for creating object URLs.","start":100,"length":3,"line":3,"character":13,"targetString":"URL"},{"text":"(method) createObjectURL(object: any): string","docs":"","start":104,"length":15,"line":3,"character":17,"targetString":"createObjectURL"},{"text":"const blob: Blob","docs":"","start":120,"length":4,"line":3,"character":33,"targetString":"blob"}]],"/blog/Javascript基础/文件读取与文件拖拽上传":[[{"text":"const readFile: (file: any) => Promise<unknown>","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"readFile"},{"text":"(parameter) file: any","docs":"","start":17,"length":4,"line":0,"character":17,"targetString":"file"},{"text":"var Promise: PromiseConstructor\nnew <unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise<unknown>","docs":"Creates a new Promise.","start":33,"length":7,"line":1,"character":8,"targetString":"Promise"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":42,"length":7,"line":1,"character":17,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":51,"length":6,"line":1,"character":26,"targetString":"reject"},{"text":"const reader: FileReader","docs":"","start":78,"length":6,"line":2,"character":14,"targetString":"reader"},{"text":"var FileReader: new () => FileReader","docs":"Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.","start":91,"length":10,"line":2,"character":27,"targetString":"FileReader"},{"text":"const reader: FileReader","docs":"","start":112,"length":6,"line":3,"character":8,"targetString":"reader"},{"text":"(property) FileReader.onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null","docs":"","start":119,"length":6,"line":3,"character":15,"targetString":"onload"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":134,"length":7,"line":3,"character":30,"targetString":"resolve"},{"text":"const reader: FileReader","docs":"","start":142,"length":6,"line":3,"character":38,"targetString":"reader"},{"text":"(property) FileReader.result: string | ArrayBuffer | null","docs":"","start":149,"length":6,"line":3,"character":45,"targetString":"result"},{"text":"const reader: FileReader","docs":"","start":165,"length":6,"line":4,"character":8,"targetString":"reader"},{"text":"(property) FileReader.onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null","docs":"","start":172,"length":7,"line":4,"character":15,"targetString":"onerror"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":188,"length":6,"line":4,"character":31,"targetString":"reject"},{"text":"const reader: FileReader","docs":"","start":195,"length":6,"line":4,"character":38,"targetString":"reader"},{"text":"(property) FileReader.result: string | ArrayBuffer | null","docs":"","start":202,"length":6,"line":4,"character":45,"targetString":"result"},{"text":"const reader: FileReader","docs":"","start":218,"length":6,"line":5,"character":8,"targetString":"reader"},{"text":"(method) FileReader.readAsText(blob: Blob, encoding?: string | undefined): void","docs":"","start":225,"length":10,"line":5,"character":15,"targetString":"readAsText"},{"text":"(parameter) file: any","docs":"","start":236,"length":4,"line":5,"character":26,"targetString":"file"},{"text":"const addUploadListener: (callback: any) => void","docs":"","start":256,"length":17,"line":8,"character":6,"targetString":"addUploadListener"},{"text":"(parameter) callback: any","docs":"","start":276,"length":8,"line":8,"character":26,"targetString":"callback"},{"text":"var document: Document","docs":"","start":294,"length":8,"line":9,"character":4,"targetString":"document"},{"text":"(method) Document.addEventListener<\"dragover\">(type: \"dragover\", listener: (this: Document, ev: DragEvent) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":303,"length":16,"line":9,"character":13,"targetString":"addEventListener"},{"text":"(parameter) e: DragEvent","docs":"","start":332,"length":1,"line":9,"character":42,"targetString":"e"},{"text":"(parameter) e: DragEvent","docs":"","start":337,"length":1,"line":9,"character":47,"targetString":"e"},{"text":"(method) Event.preventDefault(): void","docs":"If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.","start":339,"length":14,"line":9,"character":49,"targetString":"preventDefault"},{"text":"var document: Document","docs":"","start":361,"length":8,"line":10,"character":4,"targetString":"document"},{"text":"(method) Document.addEventListener<\"drop\">(type: \"drop\", listener: (this: Document, ev: DragEvent) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":370,"length":16,"line":10,"character":13,"targetString":"addEventListener"},{"text":"(parameter) event: DragEvent","docs":"","start":395,"length":5,"line":10,"character":38,"targetString":"event"},{"text":"(parameter) event: DragEvent","docs":"","start":414,"length":5,"line":11,"character":8,"targetString":"event"},{"text":"(method) Event.preventDefault(): void","docs":"If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.","start":420,"length":14,"line":11,"character":14,"targetString":"preventDefault"},{"text":"const dt: DataTransfer | null","docs":"","start":451,"length":2,"line":12,"character":14,"targetString":"dt"},{"text":"(parameter) event: DragEvent","docs":"","start":456,"length":5,"line":12,"character":19,"targetString":"event"},{"text":"(property) DragEvent.dataTransfer: DataTransfer | null","docs":"Returns the DataTransfer object for the event.","start":462,"length":12,"line":12,"character":25,"targetString":"dataTransfer"},{"text":"const file: File","docs":"","start":489,"length":4,"line":13,"character":14,"targetString":"file"},{"text":"const dt: DataTransfer | null","docs":"","start":496,"length":2,"line":13,"character":21,"targetString":"dt"},{"text":"(property) DataTransfer.files: FileList","docs":"Returns a FileList of the files being dragged, if any.","start":499,"length":5,"line":13,"character":24,"targetString":"files"},{"text":"const readFile: (file: any) => Promise<unknown>","docs":"","start":516,"length":8,"line":14,"character":8,"targetString":"readFile"},{"text":"const file: File","docs":"","start":525,"length":4,"line":14,"character":17,"targetString":"file"},{"text":"(method) Promise<unknown>.then<any, never>(onfulfilled?: ((value: unknown) => any) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<any>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":531,"length":4,"line":14,"character":23,"targetString":"then"},{"text":"(parameter) content: unknown","docs":"","start":536,"length":7,"line":14,"character":28,"targetString":"content"},{"text":"(parameter) callback: any","docs":"","start":559,"length":8,"line":15,"character":12,"targetString":"callback"},{"text":"(property) name: string","docs":"","start":570,"length":4,"line":15,"character":23,"targetString":"name"},{"text":"const file: File","docs":"","start":576,"length":4,"line":15,"character":29,"targetString":"file"},{"text":"(property) File.name: string","docs":"","start":581,"length":4,"line":15,"character":34,"targetString":"name"},{"text":"(property) type: string","docs":"","start":587,"length":4,"line":15,"character":40,"targetString":"type"},{"text":"const file: File","docs":"","start":593,"length":4,"line":15,"character":46,"targetString":"file"},{"text":"(property) Blob.type: string","docs":"","start":598,"length":4,"line":15,"character":51,"targetString":"type"},{"text":"(property) content: unknown","docs":"","start":604,"length":7,"line":15,"character":57,"targetString":"content"}]],"/blog/Javascript基础/深拷贝":[[{"text":"const clone: (value: any) => any","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"clone"},{"text":"(parameter) value: any","docs":"","start":14,"length":5,"line":0,"character":14,"targetString":"value"},{"text":"(parameter) value: any","docs":"","start":38,"length":5,"line":1,"character":13,"targetString":"value"},{"text":"(parameter) value: any","docs":"","start":65,"length":5,"line":1,"character":40,"targetString":"value"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":117,"length":6,"line":3,"character":9,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":124,"length":4,"line":3,"character":16,"targetString":"keys"},{"text":"(parameter) value: any","docs":"","start":129,"length":5,"line":3,"character":21,"targetString":"value"},{"text":"(method) Array<string>.reduce<{}>(callbackfn: (previousValue: {}, currentValue: string, currentIndex: number, array: string[]) => {}, initialValue: {}): {} (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":136,"length":6,"line":3,"character":28,"targetString":"reduce"},{"text":"(parameter) out: {}","docs":"","start":149,"length":3,"line":4,"character":5,"targetString":"out"},{"text":"(parameter) key: string","docs":"","start":154,"length":3,"line":4,"character":10,"targetString":"key"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":168,"length":6,"line":5,"character":6,"targetString":"Object"},{"text":"(method) ObjectConstructor.assign<{}, {\n    [x: string]: any;\n}>(target: {}, source: {\n    [x: string]: any;\n}): {\n    [x: string]: any;\n} (+3 overloads)","docs":"Copy the values of all of the enumerable own properties from one or more source objects to a\r\ntarget object. Returns the target object.","start":175,"length":6,"line":5,"character":13,"targetString":"assign"},{"text":"(parameter) out: {}","docs":"","start":182,"length":3,"line":5,"character":20,"targetString":"out"},{"text":"(parameter) key: string","docs":"","start":198,"length":3,"line":6,"character":9,"targetString":"key"},{"text":"const clone: (value: any) => any","docs":"","start":204,"length":5,"line":6,"character":15,"targetString":"clone"},{"text":"(parameter) value: any","docs":"","start":210,"length":5,"line":6,"character":21,"targetString":"value"},{"text":"(parameter) key: string","docs":"","start":216,"length":3,"line":6,"character":27,"targetString":"key"},{"text":"const obj: {\n    name: string;\n    age: number;\n    like: string[];\n}","docs":"","start":252,"length":3,"line":12,"character":6,"targetString":"obj"},{"text":"(property) name: string","docs":"","start":262,"length":4,"line":13,"character":2,"targetString":"name"},{"text":"(property) age: number","docs":"","start":279,"length":3,"line":14,"character":2,"targetString":"age"},{"text":"(property) like: string[]","docs":"","start":290,"length":4,"line":15,"character":2,"targetString":"like"},{"text":"const newObj: any","docs":"","start":318,"length":6,"line":18,"character":6,"targetString":"newObj"},{"text":"const clone: (value: any) => any","docs":"","start":327,"length":5,"line":18,"character":15,"targetString":"clone"},{"text":"const obj: {\n    name: string;\n    age: number;\n    like: string[];\n}","docs":"","start":333,"length":3,"line":18,"character":21,"targetString":"obj"},{"text":"var console: Console","docs":"","start":338,"length":7,"line":19,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":346,"length":3,"line":19,"character":8,"targetString":"log"},{"text":"const obj: {\n    name: string;\n    age: number;\n    like: string[];\n}","docs":"","start":350,"length":3,"line":19,"character":12,"targetString":"obj"},{"text":"const newObj: any","docs":"","start":355,"length":6,"line":19,"character":17,"targetString":"newObj"},{"text":"const obj: {\n    name: string;\n    age: number;\n    like: string[];\n}","docs":"","start":363,"length":3,"line":20,"character":0,"targetString":"obj"},{"text":"(property) age: number","docs":"","start":367,"length":3,"line":20,"character":4,"targetString":"age"},{"text":"const obj: {\n    name: string;\n    age: number;\n    like: string[];\n}","docs":"","start":377,"length":3,"line":21,"character":0,"targetString":"obj"},{"text":"(property) like: string[]","docs":"","start":381,"length":4,"line":21,"character":4,"targetString":"like"},{"text":"(method) Array<string>.push(...items: string[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":386,"length":4,"line":21,"character":9,"targetString":"push"},{"text":"var console: Console","docs":"","start":397,"length":7,"line":22,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":405,"length":3,"line":22,"character":8,"targetString":"log"},{"text":"const obj: {\n    name: string;\n    age: number;\n    like: string[];\n}","docs":"","start":409,"length":3,"line":22,"character":12,"targetString":"obj"},{"text":"const newObj: any","docs":"","start":414,"length":6,"line":22,"character":17,"targetString":"newObj"}]],"/blog/Javascript基础/监听拖拽":[[{"text":"const addDragListener: (target: any, callback: any, onDragStart: any, onDragEnd: any) => void","docs":"","start":6,"length":15,"line":0,"character":6,"targetString":"addDragListener"},{"text":"(parameter) target: any","docs":"","start":25,"length":6,"line":0,"character":25,"targetString":"target"},{"text":"(parameter) callback: any","docs":"","start":33,"length":8,"line":0,"character":33,"targetString":"callback"},{"text":"(parameter) onDragStart: any","docs":"","start":43,"length":11,"line":0,"character":43,"targetString":"onDragStart"},{"text":"(parameter) onDragEnd: any","docs":"","start":56,"length":9,"line":0,"character":56,"targetString":"onDragEnd"},{"text":"let lock: boolean","docs":"","start":80,"length":4,"line":1,"character":8,"targetString":"lock"},{"text":"(parameter) target: any","docs":"","start":97,"length":6,"line":2,"character":4,"targetString":"target"},{"text":"(parameter) event: any","docs":"","start":118,"length":5,"line":2,"character":25,"targetString":"event"},{"text":"let lock: boolean","docs":"","start":137,"length":4,"line":3,"character":8,"targetString":"lock"},{"text":"(parameter) onDragStart: any","docs":"","start":157,"length":11,"line":4,"character":8,"targetString":"onDragStart"},{"text":"(parameter) onDragStart: any","docs":"","start":172,"length":11,"line":4,"character":23,"targetString":"onDragStart"},{"text":"(parameter) event: any","docs":"","start":184,"length":5,"line":4,"character":35,"targetString":"event"},{"text":"var document: Document","docs":"","start":201,"length":8,"line":6,"character":4,"targetString":"document"},{"text":"(property) GlobalEventHandlers.onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null","docs":"Fires when the user moves the mouse over the object.","start":210,"length":11,"line":6,"character":13,"targetString":"onmousemove"},{"text":"(parameter) event: MouseEvent","docs":"","start":224,"length":5,"line":6,"character":27,"targetString":"event"},{"text":"let lock: boolean","docs":"","start":247,"length":4,"line":7,"character":12,"targetString":"lock"},{"text":"(parameter) callback: any","docs":"","start":267,"length":8,"line":8,"character":12,"targetString":"callback"},{"text":"(parameter) event: MouseEvent","docs":"","start":276,"length":5,"line":8,"character":21,"targetString":"event"},{"text":"(parameter) target: any","docs":"","start":303,"length":6,"line":11,"character":4,"targetString":"target"},{"text":"(parameter) event: any","docs":"","start":322,"length":5,"line":11,"character":23,"targetString":"event"},{"text":"let lock: boolean","docs":"","start":341,"length":4,"line":12,"character":8,"targetString":"lock"},{"text":"(parameter) onDragEnd: any","docs":"","start":362,"length":9,"line":13,"character":8,"targetString":"onDragEnd"},{"text":"(parameter) onDragEnd: any","docs":"","start":375,"length":9,"line":13,"character":21,"targetString":"onDragEnd"},{"text":"(parameter) event: any","docs":"","start":385,"length":5,"line":13,"character":31,"targetString":"event"}]],"/blog/Javascript基础/监听组合键":[[{"text":"var window: Window & typeof globalThis","docs":"","start":1,"length":6,"line":0,"character":1,"targetString":"window"},{"text":"(method) addEventListener<\"keydown\">(type: \"keydown\", listener: (this: Window, ev: KeyboardEvent) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":8,"length":16,"line":0,"character":8,"targetString":"addEventListener"},{"text":"(parameter) e: KeyboardEvent","docs":"","start":36,"length":1,"line":0,"character":36,"targetString":"e"},{"text":"const keyCode: number","docs":"","start":53,"length":7,"line":1,"character":10,"targetString":"keyCode"},{"text":"(parameter) e: KeyboardEvent","docs":"","start":63,"length":1,"line":1,"character":20,"targetString":"e"},{"text":"(property) KeyboardEvent.keyCode: number","docs":"","start":65,"length":7,"line":1,"character":22,"targetString":"keyCode"},{"text":"(parameter) e: KeyboardEvent","docs":"","start":76,"length":1,"line":1,"character":33,"targetString":"e"},{"text":"(property) UIEvent.which: number","docs":"","start":78,"length":5,"line":1,"character":35,"targetString":"which"},{"text":"(parameter) e: KeyboardEvent","docs":"","start":87,"length":1,"line":1,"character":44,"targetString":"e"},{"text":"(property) KeyboardEvent.charCode: number","docs":"","start":89,"length":8,"line":1,"character":46,"targetString":"charCode"},{"text":"const altKey: boolean","docs":"","start":109,"length":6,"line":2,"character":10,"targetString":"altKey"},{"text":"(parameter) e: KeyboardEvent","docs":"","start":118,"length":1,"line":2,"character":19,"targetString":"e"},{"text":"(property) KeyboardEvent.ctrlKey: boolean","docs":"","start":120,"length":7,"line":2,"character":21,"targetString":"ctrlKey"},{"text":"const altKey: boolean","docs":"","start":136,"length":6,"line":3,"character":7,"targetString":"altKey"},{"text":"const keyCode: number","docs":"","start":146,"length":7,"line":3,"character":17,"targetString":"keyCode"},{"text":"(parameter) e: KeyboardEvent","docs":"","start":188,"length":1,"line":5,"character":8,"targetString":"e"},{"text":"(method) Event.preventDefault(): void","docs":"If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.","start":190,"length":14,"line":5,"character":10,"targetString":"preventDefault"},{"text":"const altKey: boolean","docs":"","start":247,"length":6,"line":9,"character":7,"targetString":"altKey"},{"text":"const keyCode: number","docs":"","start":257,"length":7,"line":9,"character":17,"targetString":"keyCode"},{"text":"(parameter) e: KeyboardEvent","docs":"","start":299,"length":1,"line":11,"character":8,"targetString":"e"},{"text":"(method) Event.preventDefault(): void","docs":"If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.","start":301,"length":14,"line":11,"character":10,"targetString":"preventDefault"}]],"/blog/Javascript基础/矩形相交":[[{"text":"const testEnter: (element1: any, element2: any, onEnter: any, onOut: any) => void","docs":"`请确保两个元素在同一个父元素下`","start":157,"length":9,"line":7,"character":6,"targetString":"testEnter"},{"text":"(parameter) element1: any","docs":"","start":170,"length":8,"line":7,"character":19,"targetString":"element1"},{"text":"(parameter) element2: any","docs":"","start":180,"length":8,"line":7,"character":29,"targetString":"element2"},{"text":"(parameter) onEnter: any","docs":"","start":190,"length":7,"line":7,"character":39,"targetString":"onEnter"},{"text":"(parameter) onOut: any","docs":"","start":199,"length":5,"line":7,"character":48,"targetString":"onOut"},{"text":"const width1: any","docs":"","start":247,"length":6,"line":9,"character":8,"targetString":"width1"},{"text":"(parameter) element1: any","docs":"","start":256,"length":8,"line":9,"character":17,"targetString":"element1"},{"text":"const height1: any","docs":"","start":285,"length":7,"line":10,"character":8,"targetString":"height1"},{"text":"(parameter) element1: any","docs":"","start":295,"length":8,"line":10,"character":18,"targetString":"element1"},{"text":"const width2: any","docs":"","start":325,"length":6,"line":11,"character":8,"targetString":"width2"},{"text":"(parameter) element2: any","docs":"","start":334,"length":8,"line":11,"character":17,"targetString":"element2"},{"text":"const height2: any","docs":"","start":363,"length":7,"line":12,"character":8,"targetString":"height2"},{"text":"(parameter) element2: any","docs":"","start":373,"length":8,"line":12,"character":18,"targetString":"element2"},{"text":"const x1: any","docs":"","start":431,"length":2,"line":14,"character":8,"targetString":"x1"},{"text":"(parameter) element1: any","docs":"","start":436,"length":8,"line":14,"character":13,"targetString":"element1"},{"text":"const y1: any","docs":"","start":464,"length":2,"line":15,"character":8,"targetString":"y1"},{"text":"(parameter) element1: any","docs":"","start":469,"length":8,"line":15,"character":13,"targetString":"element1"},{"text":"const x2: any","docs":"","start":496,"length":2,"line":16,"character":8,"targetString":"x2"},{"text":"(parameter) element2: any","docs":"","start":501,"length":8,"line":16,"character":13,"targetString":"element2"},{"text":"const y2: any","docs":"","start":529,"length":2,"line":17,"character":8,"targetString":"y2"},{"text":"(parameter) element2: any","docs":"","start":534,"length":8,"line":17,"character":13,"targetString":"element2"},{"text":"const x1: any","docs":"","start":577,"length":2,"line":21,"character":4,"targetString":"x1"},{"text":"const x2: any","docs":"","start":582,"length":2,"line":21,"character":9,"targetString":"x2"},{"text":"const width1: any","docs":"","start":587,"length":6,"line":21,"character":14,"targetString":"width1"},{"text":"const x1: any","docs":"","start":601,"length":2,"line":22,"character":4,"targetString":"x1"},{"text":"const x2: any","docs":"","start":606,"length":2,"line":22,"character":9,"targetString":"x2"},{"text":"const width2: any","docs":"","start":611,"length":6,"line":22,"character":14,"targetString":"width2"},{"text":"const y1: any","docs":"","start":625,"length":2,"line":23,"character":4,"targetString":"y1"},{"text":"const y2: any","docs":"","start":630,"length":2,"line":23,"character":9,"targetString":"y2"},{"text":"const height1: any","docs":"","start":635,"length":7,"line":23,"character":14,"targetString":"height1"},{"text":"const y1: any","docs":"","start":650,"length":2,"line":24,"character":4,"targetString":"y1"},{"text":"const y2: any","docs":"","start":655,"length":2,"line":24,"character":9,"targetString":"y2"},{"text":"const height2: any","docs":"","start":660,"length":7,"line":24,"character":14,"targetString":"height2"},{"text":"(parameter) onEnter: any","docs":"","start":678,"length":7,"line":26,"character":4,"targetString":"onEnter"},{"text":"(parameter) onEnter: any","docs":"","start":689,"length":7,"line":26,"character":15,"targetString":"onEnter"},{"text":"(parameter) onOut: any","docs":"","start":714,"length":5,"line":28,"character":4,"targetString":"onOut"},{"text":"(parameter) onOut: any","docs":"","start":723,"length":5,"line":28,"character":13,"targetString":"onOut"}]],"/blog/Javascript基础/简单算法（需求）":[[{"text":"function checkStr(str: any): boolean","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"checkStr"},{"text":"(parameter) str: any","docs":"","start":18,"length":3,"line":0,"character":18,"targetString":"str"},{"text":"(parameter) str: any","docs":"","start":40,"length":3,"line":2,"character":4,"targetString":"str"},{"text":"(parameter) str: any","docs":"","start":52,"length":3,"line":3,"character":4,"targetString":"str"},{"text":"var console: Console","docs":"","start":112,"length":7,"line":9,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":120,"length":3,"line":9,"character":8,"targetString":"log"},{"text":"function checkStr(str: any): boolean","docs":"","start":124,"length":8,"line":9,"character":12,"targetString":"checkStr"}],[{"text":"function dedup(arr: any): unknown[]","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"dedup"},{"text":"(parameter) arr: any","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"arr"},{"text":"var Set: SetConstructor\nnew <unknown>(iterable?: Iterable<unknown> | null | undefined) => Set<unknown> (+1 overload)","docs":"","start":39,"length":3,"line":1,"character":17,"targetString":"Set"},{"text":"(parameter) arr: any","docs":"","start":43,"length":3,"line":1,"character":21,"targetString":"arr"}],[{"text":"function dedup(arr: any): any","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"dedup"},{"text":"(parameter) arr: any","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":31,"length":3,"line":1,"character":9,"targetString":"arr"},{"text":"(parameter) out: any","docs":"","start":48,"length":3,"line":2,"character":5,"targetString":"out"},{"text":"(parameter) cur: any","docs":"","start":53,"length":3,"line":2,"character":10,"targetString":"cur"},{"text":"(parameter) out: any","docs":"","start":62,"length":3,"line":2,"character":19,"targetString":"out"},{"text":"(parameter) cur: any","docs":"","start":75,"length":3,"line":2,"character":32,"targetString":"cur"},{"text":"(parameter) out: any","docs":"","start":82,"length":3,"line":2,"character":39,"targetString":"out"},{"text":"(parameter) out: any","docs":"","start":88,"length":3,"line":2,"character":45,"targetString":"out"},{"text":"(parameter) cur: any","docs":"","start":99,"length":3,"line":2,"character":56,"targetString":"cur"}],[{"text":"function dedup(arr: any): any[]","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"dedup"},{"text":"(parameter) arr: any","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"arr"},{"text":"const obj: {}","docs":"","start":30,"length":3,"line":1,"character":8,"targetString":"obj"},{"text":"const result: any[]","docs":"","start":47,"length":6,"line":2,"character":8,"targetString":"result"},{"text":"const item: any","docs":"","start":72,"length":4,"line":3,"character":13,"targetString":"item"},{"text":"(parameter) arr: any","docs":"","start":80,"length":3,"line":3,"character":21,"targetString":"arr"},{"text":"const item: any","docs":"","start":97,"length":4,"line":4,"character":10,"targetString":"item"},{"text":"const obj: {}","docs":"","start":105,"length":3,"line":4,"character":18,"targetString":"obj"},{"text":"const obj: {}","docs":"","start":119,"length":3,"line":5,"character":6,"targetString":"obj"},{"text":"const item: any","docs":"","start":123,"length":4,"line":5,"character":10,"targetString":"item"},{"text":"const result: any[]","docs":"","start":131,"length":6,"line":5,"character":18,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":138,"length":4,"line":5,"character":25,"targetString":"push"},{"text":"const item: any","docs":"","start":143,"length":4,"line":5,"character":30,"targetString":"item"},{"text":"const result: any[]","docs":"","start":168,"length":6,"line":8,"character":9,"targetString":"result"}],[{"text":"const array: {\n    url: string;\n}[]","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"array"},{"text":"(property) url: string","docs":"","start":22,"length":3,"line":1,"character":6,"targetString":"url"},{"text":"(property) url: string","docs":"","start":42,"length":3,"line":2,"character":6,"targetString":"url"},{"text":"(property) url: string","docs":"","start":62,"length":3,"line":3,"character":6,"targetString":"url"},{"text":"const dedup: (arr: any, key: any) => never[]","docs":"","start":84,"length":5,"line":6,"character":6,"targetString":"dedup"},{"text":"(parameter) arr: any","docs":"","start":93,"length":3,"line":6,"character":15,"targetString":"arr"},{"text":"(parameter) key: any","docs":"","start":98,"length":3,"line":6,"character":20,"targetString":"key"},{"text":"const array: {\n    url: string;\n}[]","docs":"","start":106,"length":5,"line":6,"character":28,"targetString":"array"},{"text":"(method) Array<{ url: string; }>.reduce<never[]>(callbackfn: (previousValue: never[], currentValue: {\n    url: string;\n}, currentIndex: number, array: {\n    url: string;\n}[]) => never[], initialValue: never[]): never[] (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":112,"length":6,"line":6,"character":34,"targetString":"reduce"},{"text":"(parameter) acc: never[]","docs":"","start":120,"length":3,"line":6,"character":42,"targetString":"acc"},{"text":"(parameter) item: {\n    url: string;\n}","docs":"","start":125,"length":4,"line":6,"character":47,"targetString":"item"},{"text":"(parameter) acc: never[]","docs":"","start":138,"length":3,"line":7,"character":4,"targetString":"acc"},{"text":"(method) Array<never>.find(predicate: (value: never, index: number, obj: never[]) => unknown, thisArg?: any): undefined (+1 overload)","docs":"Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.","start":142,"length":4,"line":7,"character":8,"targetString":"find"},{"text":"(parameter) i: never","docs":"","start":147,"length":1,"line":7,"character":13,"targetString":"i"},{"text":"(parameter) i: never","docs":"","start":152,"length":1,"line":7,"character":18,"targetString":"i"},{"text":"(parameter) key: any","docs":"","start":154,"length":3,"line":7,"character":20,"targetString":"key"},{"text":"(parameter) item: {\n    url: string;\n}","docs":"","start":163,"length":4,"line":7,"character":29,"targetString":"item"},{"text":"(parameter) key: any","docs":"","start":168,"length":3,"line":7,"character":34,"targetString":"key"},{"text":"(parameter) acc: never[]","docs":"","start":176,"length":3,"line":7,"character":42,"targetString":"acc"},{"text":"(parameter) acc: never[]","docs":"","start":182,"length":3,"line":7,"character":48,"targetString":"acc"},{"text":"(method) Array<never>.concat(...items: ConcatArray<never>[]): never[] (+1 overload)","docs":"Combines two or more arrays.\r\nThis method returns a new array without modifying any existing arrays.","start":186,"length":6,"line":7,"character":52,"targetString":"concat"},{"text":"(parameter) item: {\n    url: string;\n}","docs":"","start":193,"length":4,"line":7,"character":59,"targetString":"item"},{"text":"const dedup: (arr: any, key: any) => never[]","docs":"","start":209,"length":5,"line":9,"character":0,"targetString":"dedup"},{"text":"const array: {\n    url: string;\n}[]","docs":"","start":215,"length":5,"line":9,"character":6,"targetString":"array"}],[{"text":"const shuffle: (arr: any) => any","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"shuffle"},{"text":"(parameter) arr: any","docs":"","start":16,"length":3,"line":0,"character":16,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":23,"length":3,"line":0,"character":23,"targetString":"arr"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":38,"length":4,"line":0,"character":38,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":43,"length":6,"line":0,"character":43,"targetString":"random"}],[{"text":"function shuffle(arr: any): any","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"shuffle"},{"text":"(parameter) arr: any","docs":"","start":17,"length":3,"line":0,"character":17,"targetString":"arr"},{"text":"let i: number","docs":"","start":35,"length":1,"line":1,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":42,"length":1,"line":1,"character":18,"targetString":"i"},{"text":"(parameter) arr: any","docs":"","start":46,"length":3,"line":1,"character":22,"targetString":"arr"},{"text":"let i: number","docs":"","start":58,"length":1,"line":1,"character":34,"targetString":"i"},{"text":"const index: number","docs":"","start":75,"length":5,"line":2,"character":10,"targetString":"index"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":83,"length":8,"line":2,"character":18,"targetString":"parseInt"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":92,"length":4,"line":2,"character":27,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":97,"length":6,"line":2,"character":32,"targetString":"random"},{"text":"(parameter) arr: any","docs":"","start":109,"length":3,"line":2,"character":44,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":132,"length":3,"line":3,"character":6,"targetString":"arr"},{"text":"let i: number","docs":"","start":136,"length":1,"line":3,"character":10,"targetString":"i"},{"text":"(parameter) arr: any","docs":"","start":140,"length":3,"line":3,"character":14,"targetString":"arr"},{"text":"const index: number","docs":"","start":144,"length":5,"line":3,"character":18,"targetString":"index"},{"text":"(parameter) arr: any","docs":"","start":155,"length":3,"line":3,"character":29,"targetString":"arr"},{"text":"const index: number","docs":"","start":159,"length":5,"line":3,"character":33,"targetString":"index"},{"text":"(parameter) arr: any","docs":"","start":167,"length":3,"line":3,"character":41,"targetString":"arr"},{"text":"let i: number","docs":"","start":171,"length":1,"line":3,"character":45,"targetString":"i"},{"text":"(parameter) arr: any","docs":"","start":188,"length":3,"line":5,"character":9,"targetString":"arr"}],[{"text":"function Fibonacci(n: any): any[]","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"Fibonacci"},{"text":"(parameter) n: any","docs":"","start":19,"length":1,"line":0,"character":19,"targetString":"n"},{"text":"const result: any[]","docs":"","start":32,"length":6,"line":1,"character":8,"targetString":"result"},{"text":"let i: number","docs":"","start":50,"length":1,"line":2,"character":6,"targetString":"i"},{"text":"let i: number","docs":"","start":65,"length":1,"line":3,"character":9,"targetString":"i"},{"text":"(parameter) n: any","docs":"","start":69,"length":1,"line":3,"character":13,"targetString":"n"},{"text":"let i: number","docs":"","start":82,"length":1,"line":4,"character":8,"targetString":"i"},{"text":"const result: any[]","docs":"","start":98,"length":6,"line":5,"character":6,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":105,"length":4,"line":5,"character":13,"targetString":"push"},{"text":"let i: number","docs":"","start":110,"length":1,"line":5,"character":18,"targetString":"i"},{"text":"const result: any[]","docs":"","start":132,"length":6,"line":7,"character":6,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":139,"length":4,"line":7,"character":13,"targetString":"push"},{"text":"const result: any[]","docs":"","start":144,"length":6,"line":7,"character":18,"targetString":"result"},{"text":"let i: number","docs":"","start":151,"length":1,"line":7,"character":25,"targetString":"i"},{"text":"const result: any[]","docs":"","start":160,"length":6,"line":7,"character":34,"targetString":"result"},{"text":"let i: number","docs":"","start":167,"length":1,"line":7,"character":41,"targetString":"i"},{"text":"let i: number","docs":"","start":185,"length":1,"line":9,"character":4,"targetString":"i"},{"text":"const result: any[]","docs":"","start":202,"length":6,"line":11,"character":9,"targetString":"result"}],[{"text":"function getMaxProfit(arr: any): number","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"getMaxProfit"},{"text":"(parameter) arr: any","docs":"","start":22,"length":3,"line":0,"character":22,"targetString":"arr"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":38,"length":4,"line":1,"character":9,"targetString":"Math"},{"text":"(method) Math.max(...values: number[]): number","docs":"Returns the larger of a set of supplied numeric expressions.","start":43,"length":3,"line":1,"character":14,"targetString":"max"},{"text":"(method) CallableFunction.apply<null, number[], number>(this: (this: null, ...args: number[]) => number, thisArg: null, args: number[]): number (+1 overload)","docs":"Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","start":47,"length":5,"line":1,"character":18,"targetString":"apply"},{"text":"(parameter) arr: any","docs":"","start":59,"length":3,"line":1,"character":30,"targetString":"arr"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":66,"length":4,"line":1,"character":37,"targetString":"Math"},{"text":"(method) Math.min(...values: number[]): number","docs":"Returns the smaller of a set of supplied numeric expressions.","start":71,"length":3,"line":1,"character":42,"targetString":"min"},{"text":"(method) CallableFunction.apply<null, number[], number>(this: (this: null, ...args: number[]) => number, thisArg: null, args: number[]): number (+1 overload)","docs":"Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.","start":75,"length":5,"line":1,"character":46,"targetString":"apply"},{"text":"(parameter) arr: any","docs":"","start":87,"length":3,"line":1,"character":58,"targetString":"arr"}],[{"text":"function randomString(length: any): string","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"randomString"},{"text":"(parameter) length: any","docs":"","start":22,"length":6,"line":0,"character":22,"targetString":"length"},{"text":"const str: \"abcdefghijklmnopqrstuvwxyz9876543210\"","docs":"","start":40,"length":3,"line":1,"character":8,"targetString":"str"},{"text":"var Array: ArrayConstructor\n<any>(...items: any[]) => any[] (+2 overloads)","docs":"","start":94,"length":5,"line":2,"character":9,"targetString":"Array"},{"text":"(parameter) length: any","docs":"","start":100,"length":6,"line":2,"character":15,"targetString":"length"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Changes all array elements from `start` to `end` index to a static `value` and returns the modified array","start":113,"length":4,"line":3,"character":5,"targetString":"fill"},{"text":"(method) Array<any>.map<string>(callbackfn: (value: any, index: number, array: any[]) => string, thisArg?: any): string[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":127,"length":3,"line":4,"character":5,"targetString":"map"},{"text":"const str: \"abcdefghijklmnopqrstuvwxyz9876543210\"","docs":"","start":137,"length":3,"line":4,"character":15,"targetString":"str"},{"text":"(method) String.charAt(pos: number): string","docs":"Returns the character at the specified index.","start":141,"length":6,"line":4,"character":19,"targetString":"charAt"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":148,"length":4,"line":4,"character":26,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":153,"length":5,"line":4,"character":31,"targetString":"floor"},{"text":"const str: \"abcdefghijklmnopqrstuvwxyz9876543210\"","docs":"","start":159,"length":3,"line":4,"character":37,"targetString":"str"},{"text":"(property) String.length: number","docs":"Returns the length of a String object.","start":163,"length":6,"line":4,"character":41,"targetString":"length"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":172,"length":4,"line":4,"character":50,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":177,"length":6,"line":4,"character":55,"targetString":"random"},{"text":"(method) Array<string>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":194,"length":4,"line":5,"character":5,"targetString":"join"}],[{"text":"function queryClassName(element: any, className: any): unknown[]","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"queryClassName"},{"text":"(parameter) element: any","docs":"","start":24,"length":7,"line":0,"character":24,"targetString":"element"},{"text":"(parameter) className: any","docs":"","start":33,"length":9,"line":0,"character":33,"targetString":"className"},{"text":"var Array: ArrayConstructor","docs":"","start":55,"length":5,"line":1,"character":9,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<unknown>(iterable: Iterable<unknown> | ArrayLike<unknown>): unknown[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":61,"length":4,"line":1,"character":15,"targetString":"from"},{"text":"(parameter) element: any","docs":"","start":66,"length":7,"line":1,"character":20,"targetString":"element"},{"text":"(method) Array<unknown>.filter(predicate: (value: unknown, index: number, array: unknown[]) => unknown, thisArg?: any): unknown[] (+1 overload)","docs":"Returns the elements of an array that meet the condition specified in a callback function.","start":101,"length":6,"line":1,"character":55,"targetString":"filter"},{"text":"(parameter) e: unknown","docs":"","start":113,"length":1,"line":2,"character":4,"targetString":"e"},{"text":"(parameter) e: unknown","docs":"","start":118,"length":1,"line":2,"character":9,"targetString":"e"},{"text":"(parameter) className: any","docs":"","start":134,"length":9,"line":2,"character":25,"targetString":"className"}],[{"text":"function clear(arr: any): any","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"clear"},{"text":"(parameter) arr: any","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":24,"length":3,"line":1,"character":2,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":38,"length":3,"line":1,"character":16,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":59,"length":3,"line":2,"character":9,"targetString":"arr"}],[{"text":"function clear(arr: any): any","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"clear"},{"text":"(parameter) arr: any","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":24,"length":3,"line":1,"character":2,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":48,"length":3,"line":2,"character":9,"targetString":"arr"}],[{"text":"function Fix(n: any, fractionDigits: any): any","docs":"","start":9,"length":3,"line":0,"character":9,"targetString":"Fix"},{"text":"(parameter) n: any","docs":"","start":13,"length":1,"line":0,"character":13,"targetString":"n"},{"text":"(parameter) fractionDigits: any","docs":"","start":16,"length":14,"line":0,"character":16,"targetString":"fractionDigits"},{"text":"(parameter) n: any","docs":"","start":43,"length":1,"line":1,"character":9,"targetString":"n"},{"text":"(parameter) fractionDigits: any","docs":"","start":53,"length":14,"line":1,"character":19,"targetString":"fractionDigits"}],[{"text":"function uuid(len?: number): string","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"uuid"},{"text":"(parameter) len: number","docs":"","start":14,"length":3,"line":0,"character":14,"targetString":"len"},{"text":"let str: string","docs":"","start":32,"length":3,"line":1,"character":6,"targetString":"str"},{"text":"let str: string","docs":"","start":50,"length":3,"line":2,"character":9,"targetString":"str"},{"text":"(property) String.length: number","docs":"Returns the length of a String object.","start":54,"length":6,"line":2,"character":13,"targetString":"length"},{"text":"(parameter) len: number","docs":"","start":63,"length":3,"line":2,"character":22,"targetString":"len"},{"text":"let str: string","docs":"","start":74,"length":3,"line":3,"character":4,"targetString":"str"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":81,"length":4,"line":3,"character":11,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":86,"length":6,"line":3,"character":16,"targetString":"random"},{"text":"(method) Number.toString(radix?: number | undefined): string","docs":"Returns a string representation of an object.","start":102,"length":8,"line":4,"character":7,"targetString":"toString"},{"text":"(method) String.substr(from: number, length?: number | undefined): string","docs":"Gets a substring beginning at the specified location and having the specified length.","start":122,"length":6,"line":5,"character":7,"targetString":"substr"},{"text":"let str: string","docs":"","start":155,"length":3,"line":8,"character":9,"targetString":"str"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":159,"length":5,"line":8,"character":13,"targetString":"slice"},{"text":"(parameter) len: number","docs":"","start":168,"length":3,"line":8,"character":22,"targetString":"len"}],[{"text":"function render(template: any, data: any): any","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"render"},{"text":"(parameter) template: any","docs":"","start":16,"length":8,"line":0,"character":16,"targetString":"template"},{"text":"(parameter) data: any","docs":"","start":26,"length":4,"line":0,"character":26,"targetString":"data"},{"text":"(parameter) template: any","docs":"","start":295,"length":8,"line":9,"character":9,"targetString":"template"},{"text":"(parameter) slot: any","docs":"","start":324,"length":4,"line":9,"character":38,"targetString":"slot"},{"text":"(parameter) data: any","docs":"","start":332,"length":4,"line":9,"character":46,"targetString":"data"},{"text":"(parameter) slot: any","docs":"","start":337,"length":4,"line":9,"character":51,"targetString":"slot"},{"text":"var console: Console","docs":"","start":368,"length":7,"line":11,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":376,"length":3,"line":11,"character":8,"targetString":"log"},{"text":"function render(template: any, data: any): any","docs":"","start":380,"length":6,"line":11,"character":12,"targetString":"render"},{"text":"(property) name: string","docs":"","start":419,"length":4,"line":11,"character":51,"targetString":"name"},{"text":"(property) age: number","docs":"","start":434,"length":3,"line":11,"character":66,"targetString":"age"}],[{"text":"const randSelect: (list: any) => any","docs":"","start":6,"length":10,"line":0,"character":6,"targetString":"randSelect"},{"text":"(parameter) list: any","docs":"","start":19,"length":4,"line":0,"character":19,"targetString":"list"},{"text":"(parameter) list: any","docs":"","start":27,"length":4,"line":0,"character":27,"targetString":"list"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":32,"length":8,"line":0,"character":32,"targetString":"parseInt"},{"text":"(parameter) list: any","docs":"","start":41,"length":4,"line":0,"character":41,"targetString":"list"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":55,"length":4,"line":0,"character":55,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":60,"length":6,"line":0,"character":60,"targetString":"random"}]],"/blog/Javascript基础/类和继承":[[{"text":"function Animal(name: any): void","docs":"","start":19,"length":6,"line":1,"character":9,"targetString":"Animal"},{"text":"(parameter) name: any","docs":"","start":26,"length":4,"line":1,"character":16,"targetString":"name"},{"text":"(parameter) name: any","docs":"","start":74,"length":4,"line":3,"character":14,"targetString":"name"},{"text":"function Animal(name: any): void","docs":"","start":176,"length":6,"line":10,"character":0,"targetString":"Animal"},{"text":"(property) Function.prototype: any","docs":"","start":183,"length":9,"line":10,"character":7,"targetString":"prototype"}],[{"text":"function Dog(name: any): void\nmodule Dog","docs":"","start":9,"length":3,"line":0,"character":9,"targetString":"Dog"},{"text":"(parameter) name: any","docs":"","start":13,"length":4,"line":0,"character":13,"targetString":"name"},{"text":"(parameter) name: any","docs":"","start":35,"length":4,"line":1,"character":14,"targetString":"name"},{"text":"module Dog\nfunction Dog(name: any): void","docs":"","start":74,"length":3,"line":4,"character":0,"targetString":"Dog"},{"text":"(property) Dog.prototype: any","docs":"","start":78,"length":9,"line":4,"character":4,"targetString":"prototype"}],[{"text":"function Cat(name: any): void","docs":"","start":9,"length":3,"line":0,"character":9,"targetString":"Cat"},{"text":"(parameter) name: any","docs":"","start":13,"length":4,"line":0,"character":13,"targetString":"name"},{"text":"(parameter) name: any","docs":"","start":41,"length":4,"line":1,"character":20,"targetString":"name"}],[{"text":"function Pig(name: any): any","docs":"","start":9,"length":3,"line":0,"character":9,"targetString":"Pig"},{"text":"(parameter) name: any","docs":"","start":13,"length":4,"line":0,"character":13,"targetString":"name"},{"text":"const instance: any","docs":"","start":29,"length":8,"line":1,"character":8,"targetString":"instance"},{"text":"(parameter) name: any","docs":"","start":51,"length":4,"line":1,"character":30,"targetString":"name"},{"text":"const instance: any","docs":"","start":66,"length":8,"line":2,"character":9,"targetString":"instance"}],[{"text":"function Chick(name: any): void","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Chick"},{"text":"(parameter) name: any","docs":"","start":15,"length":4,"line":0,"character":15,"targetString":"name"},{"text":"const instance: any","docs":"","start":31,"length":8,"line":1,"character":8,"targetString":"instance"},{"text":"(parameter) name: any","docs":"","start":53,"length":4,"line":1,"character":30,"targetString":"name"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":61,"length":6,"line":2,"character":2,"targetString":"Object"},{"text":"(method) ObjectConstructor.assign<any, any>(target: any, source: any): any (+3 overloads)","docs":"Copy the values of all of the enumerable own properties from one or more source objects to a\r\ntarget object. Returns the target object.","start":68,"length":6,"line":2,"character":9,"targetString":"assign"},{"text":"function Chick(name: any): void","docs":"","start":75,"length":5,"line":2,"character":16,"targetString":"Chick"},{"text":"(property) Function.prototype: any","docs":"","start":81,"length":9,"line":2,"character":22,"targetString":"prototype"},{"text":"const instance: any","docs":"","start":92,"length":8,"line":2,"character":33,"targetString":"instance"}],[{"text":"function Cow(name: any): void\nmodule Cow","docs":"","start":9,"length":3,"line":0,"character":9,"targetString":"Cow"},{"text":"(parameter) name: any","docs":"","start":13,"length":4,"line":0,"character":13,"targetString":"name"},{"text":"(parameter) name: any","docs":"","start":41,"length":4,"line":1,"character":20,"targetString":"name"},{"text":"module Cow\nfunction Cow(name: any): void","docs":"","start":78,"length":3,"line":4,"character":0,"targetString":"Cow"},{"text":"(property) Cow.prototype: any","docs":"","start":82,"length":9,"line":4,"character":4,"targetString":"prototype"},{"text":"module Cow\nfunction Cow(name: any): void","docs":"","start":148,"length":3,"line":6,"character":0,"targetString":"Cow"},{"text":"(property) Cow.prototype: any","docs":"","start":152,"length":9,"line":6,"character":4,"targetString":"prototype"},{"text":"module Cow\nfunction Cow(name: any): void","docs":"","start":176,"length":3,"line":6,"character":28,"targetString":"Cow"}],[{"text":"function Horse(name: any): void","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Horse"},{"text":"(parameter) name: any","docs":"","start":15,"length":4,"line":0,"character":15,"targetString":"name"},{"text":"(parameter) name: any","docs":"","start":43,"length":4,"line":1,"character":20,"targetString":"name"},{"text":"function Horse(name: any): void","docs":"","start":136,"length":5,"line":5,"character":0,"targetString":"Horse"},{"text":"(property) Function.prototype: any","docs":"","start":142,"length":9,"line":5,"character":6,"targetString":"prototype"},{"text":"function Horse(name: any): void","docs":"","start":166,"length":5,"line":5,"character":30,"targetString":"Horse"},{"text":"const Super: {\n    (): void;\n    prototype: any;\n}","docs":"","start":222,"length":5,"line":8,"character":8,"targetString":"Super"},{"text":"const Super: {\n    (): void;\n    prototype: any;\n}","docs":"","start":246,"length":5,"line":9,"character":2,"targetString":"Super"},{"text":"(property) Super.prototype: any","docs":"","start":252,"length":9,"line":9,"character":8,"targetString":"prototype"},{"text":"function Horse(name: any): void","docs":"","start":283,"length":5,"line":10,"character":2,"targetString":"Horse"},{"text":"(property) Function.prototype: any","docs":"","start":289,"length":9,"line":10,"character":8,"targetString":"prototype"},{"text":"const Super: {\n    (): void;\n    prototype: any;\n}","docs":"","start":305,"length":5,"line":10,"character":24,"targetString":"Super"}],[{"text":"const People: {\n    (age: any): void;\n    prototype: any;\n    id: string;\n}","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"People"},{"text":"(parameter) _super: () => void","docs":"","start":25,"length":6,"line":0,"character":25,"targetString":"_super"},{"text":"const _name: \"this is private\"","docs":"","start":101,"length":5,"line":3,"character":8,"targetString":"_name"},{"text":"(local function) People(age: any): void","docs":"","start":139,"length":6,"line":5,"character":11,"targetString":"People"},{"text":"(parameter) age: any","docs":"","start":146,"length":3,"line":5,"character":18,"targetString":"age"},{"text":"(parameter) _super: () => void","docs":"","start":171,"length":6,"line":7,"character":4,"targetString":"_super"},{"text":"(method) CallableFunction.call<any, [], void>(this: (this: any) => void, thisArg: any): void","docs":"Calls the function with the specified object as the this value and the specified rest arguments as the arguments.","start":178,"length":4,"line":7,"character":11,"targetString":"call"},{"text":"(parameter) age: any","docs":"","start":204,"length":3,"line":8,"character":15,"targetString":"age"},{"text":"const _name: \"this is private\"","docs":"","start":269,"length":5,"line":11,"character":13,"targetString":"_name"},{"text":"(local function) People(age: any): void","docs":"","start":428,"length":6,"line":19,"character":2,"targetString":"People"},{"text":"(property) People.prototype: any","docs":"","start":435,"length":9,"line":19,"character":9,"targetString":"prototype"},{"text":"(parameter) _super: () => void","docs":"","start":461,"length":6,"line":19,"character":35,"targetString":"_super"},{"text":"(property) Function.prototype: any","docs":"","start":468,"length":9,"line":19,"character":42,"targetString":"prototype"},{"text":"(local function) People(age: any): void","docs":"","start":503,"length":6,"line":21,"character":2,"targetString":"People"},{"text":"(property) People.prototype: any","docs":"","start":510,"length":9,"line":21,"character":9,"targetString":"prototype"},{"text":"(local function) People(age: any): void","docs":"","start":534,"length":6,"line":21,"character":33,"targetString":"People"},{"text":"(local function) People(age: any): void","docs":"","start":553,"length":6,"line":23,"character":2,"targetString":"People"},{"text":"(property) People.id: string","docs":"","start":560,"length":2,"line":23,"character":9,"targetString":"id"},{"text":"(local function) People(age: any): void","docs":"","start":581,"length":6,"line":25,"character":9,"targetString":"People"},{"text":"function Base(): void","docs":"","start":591,"length":4,"line":26,"character":3,"targetString":"Base"},{"text":"function Base(): void","docs":"","start":607,"length":4,"line":28,"character":9,"targetString":"Base"},{"text":"function Base(): void","docs":"","start":640,"length":4,"line":32,"character":0,"targetString":"Base"},{"text":"(property) Function.prototype: any","docs":"","start":645,"length":9,"line":32,"character":5,"targetString":"prototype"},{"text":"const p: any","docs":"","start":706,"length":1,"line":36,"character":6,"targetString":"p"},{"text":"const People: {\n    (age: any): void;\n    prototype: any;\n    id: string;\n}","docs":"","start":714,"length":6,"line":36,"character":14,"targetString":"People"},{"text":"var console: Console","docs":"","start":727,"length":7,"line":38,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":735,"length":3,"line":38,"character":8,"targetString":"log"},{"text":"const p: any","docs":"","start":739,"length":1,"line":38,"character":12,"targetString":"p"},{"text":"var console: Console","docs":"","start":797,"length":7,"line":40,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":805,"length":3,"line":40,"character":8,"targetString":"log"},{"text":"const p: any","docs":"","start":809,"length":1,"line":40,"character":12,"targetString":"p"},{"text":"function Base(): void","docs":"","start":822,"length":4,"line":40,"character":25,"targetString":"Base"},{"text":"var console: Console","docs":"","start":836,"length":7,"line":41,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":844,"length":3,"line":41,"character":8,"targetString":"log"},{"text":"const p: any","docs":"","start":848,"length":1,"line":41,"character":12,"targetString":"p"},{"text":"const People: {\n    (age: any): void;\n    prototype: any;\n    id: string;\n}","docs":"","start":861,"length":6,"line":41,"character":25,"targetString":"People"}],[{"text":"function Object_create(prototype: any): {\n    __proto__: any;\n}","docs":"","start":9,"length":13,"line":0,"character":9,"targetString":"Object_create"},{"text":"(parameter) prototype: any","docs":"","start":23,"length":9,"line":0,"character":23,"targetString":"prototype"},{"text":"const obj: {\n    __proto__: any;\n}","docs":"","start":174,"length":3,"line":6,"character":8,"targetString":"obj"},{"text":"(property) __proto__: any","docs":"","start":186,"length":9,"line":7,"character":4,"targetString":"__proto__"},{"text":"(parameter) prototype: any","docs":"","start":197,"length":9,"line":7,"character":15,"targetString":"prototype"},{"text":"const obj: {\n    __proto__: any;\n}","docs":"","start":220,"length":3,"line":9,"character":9,"targetString":"obj"}],[{"text":"function New(constructor: any): () => {\n    __proto__: any;\n}","docs":"","start":62,"length":3,"line":4,"character":9,"targetString":"New"},{"text":"(parameter) constructor: any","docs":"","start":66,"length":11,"line":4,"character":13,"targetString":"constructor"},{"text":"(local var) obj: {\n    __proto__: any;\n}","docs":"","start":259,"length":3,"line":11,"character":8,"targetString":"obj"},{"text":"(property) __proto__: any","docs":"","start":273,"length":9,"line":12,"character":6,"targetString":"__proto__"},{"text":"(parameter) constructor: any","docs":"","start":284,"length":11,"line":12,"character":17,"targetString":"constructor"},{"text":"(parameter) constructor: any","docs":"","start":316,"length":11,"line":14,"character":4,"targetString":"constructor"},{"text":"(local var) obj: {\n    __proto__: any;\n}","docs":"","start":334,"length":3,"line":14,"character":22,"targetString":"obj"},{"text":"(local var) arguments: IArguments","docs":"","start":339,"length":9,"line":14,"character":27,"targetString":"arguments"},{"text":"(local var) obj: {\n    __proto__: any;\n}","docs":"","start":361,"length":3,"line":15,"character":11,"targetString":"obj"}]],"/blog/Javascript基础/组合子":[[{"text":"const connect: (s: any) => (p: any) => ...","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"connect"},{"text":"(parameter) s: any","docs":"","start":16,"length":1,"line":0,"character":16,"targetString":"s"},{"text":"(parameter) p: any","docs":"","start":21,"length":1,"line":0,"character":21,"targetString":"p"},{"text":"const connect: (s: any) => (p: any) => ...","docs":"","start":28,"length":7,"line":1,"character":2,"targetString":"connect"},{"text":"(parameter) p: any","docs":"","start":36,"length":1,"line":1,"character":10,"targetString":"p"},{"text":"(parameter) s: any","docs":"","start":38,"length":1,"line":1,"character":12,"targetString":"s"},{"text":"const origin: 10","docs":"","start":50,"length":6,"line":4,"character":6,"targetString":"origin"},{"text":"const task: (req: any) => any","docs":"","start":70,"length":4,"line":7,"character":6,"targetString":"task"},{"text":"(parameter) req: any","docs":"","start":77,"length":3,"line":7,"character":13,"targetString":"req"},{"text":"(parameter) req: any","docs":"","start":84,"length":3,"line":7,"character":20,"targetString":"req"},{"text":"const output: (res: any) => any","docs":"","start":100,"length":6,"line":10,"character":6,"targetString":"output"},{"text":"(parameter) res: any","docs":"","start":109,"length":3,"line":10,"character":15,"targetString":"res"},{"text":"var console: Console","docs":"","start":120,"length":7,"line":11,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":128,"length":3,"line":11,"character":10,"targetString":"log"},{"text":"(parameter) res: any","docs":"","start":132,"length":3,"line":11,"character":14,"targetString":"res"},{"text":"(parameter) res: any","docs":"","start":146,"length":3,"line":12,"character":9,"targetString":"res"},{"text":"const connect: (s: any) => (p: any) => ...","docs":"","start":154,"length":7,"line":16,"character":0,"targetString":"connect"},{"text":"var origin: string","docs":"","start":162,"length":6,"line":16,"character":8,"targetString":"origin"},{"text":"const task: (req: any) => any","docs":"","start":170,"length":4,"line":16,"character":16,"targetString":"task"},{"text":"const task: (req: any) => any","docs":"","start":176,"length":4,"line":16,"character":22,"targetString":"task"},{"text":"const task: (req: any) => any","docs":"","start":182,"length":4,"line":16,"character":28,"targetString":"task"},{"text":"const task: (req: any) => any","docs":"","start":188,"length":4,"line":16,"character":34,"targetString":"task"},{"text":"const task: (req: any) => any","docs":"","start":194,"length":4,"line":16,"character":40,"targetString":"task"},{"text":"const output: (res: any) => any","docs":"","start":200,"length":6,"line":16,"character":46,"targetString":"output"}],[{"text":"const sum: (num: any) => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":12,"length":3,"line":0,"character":12,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":20,"length":3,"line":0,"character":20,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":30,"length":3,"line":0,"character":30,"targetString":"num"},{"text":"const sum: (num: any) => any","docs":"","start":36,"length":3,"line":0,"character":36,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":40,"length":3,"line":0,"character":40,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":51,"length":3,"line":0,"character":51,"targetString":"num"},{"text":"const sumR: (sum: any) => (num: any) => any","docs":"","start":64,"length":4,"line":3,"character":6,"targetString":"sumR"},{"text":"(parameter) sum: any","docs":"","start":71,"length":3,"line":3,"character":13,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":78,"length":3,"line":3,"character":20,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":86,"length":3,"line":3,"character":28,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":96,"length":3,"line":3,"character":38,"targetString":"num"},{"text":"(parameter) sum: any","docs":"","start":102,"length":3,"line":3,"character":44,"targetString":"sum"},{"text":"(parameter) sum: any","docs":"","start":106,"length":3,"line":3,"character":48,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":111,"length":3,"line":3,"character":53,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":122,"length":3,"line":3,"character":64,"targetString":"num"},{"text":"var console: Console","docs":"","start":129,"length":7,"line":6,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":137,"length":3,"line":6,"character":8,"targetString":"log"},{"text":"(parameter) f: (sum: any) => (num: any) => any","docs":"","start":142,"length":1,"line":6,"character":13,"targetString":"f"},{"text":"(parameter) f: (sum: any) => (num: any) => any","docs":"","start":147,"length":1,"line":6,"character":18,"targetString":"f"},{"text":"(parameter) f: (sum: any) => (num: any) => any","docs":"","start":149,"length":1,"line":6,"character":20,"targetString":"f"},{"text":"(parameter) sum: any","docs":"","start":153,"length":3,"line":6,"character":24,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":160,"length":3,"line":6,"character":31,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":167,"length":3,"line":6,"character":38,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":177,"length":3,"line":6,"character":48,"targetString":"num"},{"text":"(parameter) sum: any","docs":"","start":183,"length":3,"line":6,"character":54,"targetString":"sum"},{"text":"(parameter) sum: any","docs":"","start":187,"length":3,"line":6,"character":58,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":192,"length":3,"line":6,"character":63,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":203,"length":3,"line":6,"character":74,"targetString":"num"},{"text":"var console: Console","docs":"","start":219,"length":7,"line":9,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":227,"length":3,"line":9,"character":8,"targetString":"log"},{"text":"(parameter) f: (sum: any) => (num: any) => any","docs":"","start":232,"length":1,"line":9,"character":13,"targetString":"f"},{"text":"(parameter) f: (sum: any) => (num: any) => any","docs":"","start":237,"length":1,"line":9,"character":18,"targetString":"f"},{"text":"(parameter) f: (sum: any) => (num: any) => any","docs":"","start":239,"length":1,"line":9,"character":20,"targetString":"f"},{"text":"(parameter) sum: any","docs":"","start":243,"length":3,"line":9,"character":24,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":250,"length":3,"line":9,"character":31,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":257,"length":3,"line":9,"character":38,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":267,"length":3,"line":9,"character":48,"targetString":"num"},{"text":"(parameter) f: any","docs":"","start":275,"length":1,"line":9,"character":56,"targetString":"f"},{"text":"(parameter) f: any","docs":"","start":280,"length":1,"line":9,"character":61,"targetString":"f"},{"text":"(parameter) f: any","docs":"","start":282,"length":1,"line":9,"character":63,"targetString":"f"},{"text":"(parameter) sum: any","docs":"","start":286,"length":3,"line":9,"character":67,"targetString":"sum"},{"text":"(parameter) num: any","docs":"","start":292,"length":3,"line":9,"character":73,"targetString":"num"},{"text":"(parameter) num: any","docs":"","start":303,"length":3,"line":9,"character":84,"targetString":"num"},{"text":"var console: Console","docs":"","start":319,"length":7,"line":12,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":327,"length":3,"line":12,"character":8,"targetString":"log"},{"text":"const sumR: (sum: any) => (num: any) => any","docs":"","start":331,"length":4,"line":12,"character":12,"targetString":"sumR"},{"text":"const sumR: (sum: any) => (num: any) => any","docs":"","start":336,"length":4,"line":12,"character":17,"targetString":"sumR"}]],"/blog/Javascript基础/节流防抖":[[{"text":"const throttle: (callback: any, delta?: number, id?: string) => void","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"throttle"},{"text":"(parameter) callback: any","docs":"","start":18,"length":8,"line":0,"character":18,"targetString":"callback"},{"text":"(parameter) delta: number","docs":"","start":28,"length":5,"line":0,"character":28,"targetString":"delta"},{"text":"(parameter) id: string","docs":"","start":41,"length":2,"line":0,"character":41,"targetString":"id"},{"text":"const next: () => void","docs":"","start":70,"length":4,"line":1,"character":8,"targetString":"next"},{"text":"const throttle: (callback: any, delta?: number, id?: string) => void","docs":"","start":89,"length":8,"line":2,"character":4,"targetString":"throttle"},{"text":"(parameter) id: string","docs":"","start":98,"length":2,"line":2,"character":13,"targetString":"id"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":104,"length":4,"line":2,"character":19,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":109,"length":3,"line":2,"character":24,"targetString":"now"},{"text":"(parameter) delta: number","docs":"","start":117,"length":5,"line":2,"character":32,"targetString":"delta"},{"text":"const throttle: (callback: any, delta?: number, id?: string) => void","docs":"","start":129,"length":8,"line":4,"character":2,"targetString":"throttle"},{"text":"(parameter) id: string","docs":"","start":138,"length":2,"line":4,"character":11,"targetString":"id"},{"text":"const next: () => void","docs":"","start":145,"length":4,"line":4,"character":18,"targetString":"next"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":158,"length":4,"line":5,"character":6,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":163,"length":3,"line":5,"character":11,"targetString":"now"},{"text":"const throttle: (callback: any, delta?: number, id?: string) => void","docs":"","start":171,"length":8,"line":5,"character":19,"targetString":"throttle"},{"text":"(parameter) id: string","docs":"","start":180,"length":2,"line":5,"character":28,"targetString":"id"},{"text":"const next: () => void","docs":"","start":191,"length":4,"line":6,"character":4,"targetString":"next"},{"text":"(parameter) callback: any","docs":"","start":202,"length":8,"line":7,"character":4,"targetString":"callback"}],[{"text":"const debounce: (callback: any, delta?: number, id?: string) => void","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"debounce"},{"text":"(parameter) callback: any","docs":"","start":18,"length":8,"line":0,"character":18,"targetString":"callback"},{"text":"(parameter) delta: number","docs":"","start":28,"length":5,"line":0,"character":28,"targetString":"delta"},{"text":"(parameter) id: string","docs":"","start":41,"length":2,"line":0,"character":41,"targetString":"id"},{"text":"function clearTimeout(handle?: number | undefined): void","docs":"","start":64,"length":12,"line":1,"character":2,"targetString":"clearTimeout"},{"text":"const debounce: (callback: any, delta?: number, id?: string) => void","docs":"","start":77,"length":8,"line":1,"character":15,"targetString":"debounce"},{"text":"(parameter) id: string","docs":"","start":86,"length":2,"line":1,"character":24,"targetString":"id"},{"text":"const debounce: (callback: any, delta?: number, id?: string) => void","docs":"","start":93,"length":8,"line":2,"character":2,"targetString":"debounce"},{"text":"(parameter) id: string","docs":"","start":102,"length":2,"line":2,"character":11,"targetString":"id"},{"text":"function setTimeout(handler: TimerHandler, timeout?: number | undefined, ...arguments: any[]): number","docs":"","start":108,"length":10,"line":2,"character":17,"targetString":"setTimeout"},{"text":"(parameter) callback: any","docs":"","start":119,"length":8,"line":2,"character":28,"targetString":"callback"},{"text":"(parameter) delta: number","docs":"","start":129,"length":5,"line":2,"character":38,"targetString":"delta"}]],"/blog/Javascript基础/获取元素距离文档顶部的距离":[[{"text":"function getElementTop(elem: HTMLElement): number","docs":"","start":16,"length":13,"line":0,"character":16,"targetString":"getElementTop"},{"text":"(parameter) elem: HTMLElement","docs":"","start":30,"length":4,"line":0,"character":30,"targetString":"elem"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":36,"length":11,"line":0,"character":36,"targetString":"HTMLElement"},{"text":"let elemTop: number","docs":"","start":57,"length":7,"line":1,"character":6,"targetString":"elemTop"},{"text":"(parameter) elem: HTMLElement","docs":"","start":67,"length":4,"line":1,"character":16,"targetString":"elem"},{"text":"(property) HTMLElement.offsetTop: number","docs":"","start":72,"length":9,"line":1,"character":21,"targetString":"offsetTop"},{"text":"(parameter) elem: HTMLElement","docs":"","start":84,"length":4,"line":2,"character":2,"targetString":"elem"},{"text":"(parameter) elem: HTMLElement","docs":"","start":91,"length":4,"line":2,"character":9,"targetString":"elem"},{"text":"(property) HTMLElement.offsetParent: Element | null","docs":"","start":96,"length":12,"line":2,"character":14,"targetString":"offsetParent"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":112,"length":11,"line":2,"character":30,"targetString":"HTMLElement"},{"text":"(parameter) elem: HTMLElement","docs":"","start":133,"length":4,"line":3,"character":9,"targetString":"elem"},{"text":"let elemTop: number","docs":"","start":153,"length":7,"line":4,"character":4,"targetString":"elemTop"},{"text":"(parameter) elem: HTMLElement","docs":"","start":164,"length":4,"line":4,"character":15,"targetString":"elem"},{"text":"(property) HTMLElement.offsetTop: number","docs":"","start":169,"length":9,"line":4,"character":20,"targetString":"offsetTop"},{"text":"(parameter) elem: HTMLElement","docs":"","start":183,"length":4,"line":5,"character":4,"targetString":"elem"},{"text":"(parameter) elem: HTMLElement","docs":"","start":190,"length":4,"line":5,"character":11,"targetString":"elem"},{"text":"(property) HTMLElement.offsetParent: Element | null","docs":"","start":195,"length":12,"line":5,"character":16,"targetString":"offsetParent"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":211,"length":11,"line":5,"character":32,"targetString":"HTMLElement"},{"text":"let elemTop: number","docs":"","start":236,"length":7,"line":7,"character":9,"targetString":"elemTop"}],[{"text":"function getElementFixedTop(elem: HTMLElement): number","docs":"","start":16,"length":18,"line":0,"character":16,"targetString":"getElementFixedTop"},{"text":"(parameter) elem: HTMLElement","docs":"","start":35,"length":4,"line":0,"character":35,"targetString":"elem"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":41,"length":11,"line":0,"character":41,"targetString":"HTMLElement"},{"text":"(parameter) elem: HTMLElement","docs":"","start":65,"length":4,"line":1,"character":9,"targetString":"elem"},{"text":"(method) Element.getBoundingClientRect(): DOMRect","docs":"","start":70,"length":21,"line":1,"character":14,"targetString":"getBoundingClientRect"},{"text":"(property) DOMRectReadOnly.top: number","docs":"","start":94,"length":3,"line":1,"character":38,"targetString":"top"}]],"/blog/Javascript基础/获取文件夹名":[[{"text":"const dirname: (path: any) => any","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"dirname"},{"text":"(parameter) path: any","docs":"","start":16,"length":4,"line":0,"character":16,"targetString":"path"},{"text":"let idx: number","docs":"","start":32,"length":3,"line":1,"character":6,"targetString":"idx"},{"text":"(parameter) path: any","docs":"","start":38,"length":4,"line":1,"character":12,"targetString":"path"},{"text":"let idx: number","docs":"","start":63,"length":3,"line":2,"character":9,"targetString":"idx"},{"text":"const c: any","docs":"","start":85,"length":1,"line":3,"character":10,"targetString":"c"},{"text":"(parameter) path: any","docs":"","start":89,"length":4,"line":3,"character":14,"targetString":"path"},{"text":"let idx: number","docs":"","start":105,"length":3,"line":3,"character":30,"targetString":"idx"},{"text":"const c: any","docs":"","start":144,"length":1,"line":5,"character":8,"targetString":"c"},{"text":"const c: any","docs":"","start":156,"length":1,"line":5,"character":20,"targetString":"c"},{"text":"let idx: number","docs":"","start":176,"length":3,"line":6,"character":4,"targetString":"idx"},{"text":"let idx: number","docs":"","start":192,"length":3,"line":8,"character":6,"targetString":"idx"},{"text":"(parameter) path: any","docs":"","start":220,"length":4,"line":9,"character":9,"targetString":"path"},{"text":"let idx: number","docs":"","start":234,"length":3,"line":9,"character":23,"targetString":"idx"}]],"/blog/Javascript基础/解决Promise竞态问题":[[{"text":"const race: (promise: any, then: any, id?: string) => void","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"race"},{"text":"(parameter) promise: any","docs":"","start":14,"length":7,"line":0,"character":14,"targetString":"promise"},{"text":"(parameter) then: any","docs":"","start":23,"length":4,"line":0,"character":23,"targetString":"then"},{"text":"(parameter) id: string","docs":"","start":29,"length":2,"line":0,"character":29,"targetString":"id"},{"text":"const locks: any","docs":"","start":58,"length":5,"line":1,"character":8,"targetString":"locks"},{"text":"const race: (promise: any, then: any, id?: string) => void","docs":"","start":66,"length":4,"line":1,"character":16,"targetString":"race"},{"text":"const locks: any","docs":"","start":85,"length":5,"line":2,"character":2,"targetString":"locks"},{"text":"(parameter) id: string","docs":"","start":91,"length":2,"line":2,"character":8,"targetString":"id"},{"text":"const race: (promise: any, then: any, id?: string) => void","docs":"","start":104,"length":4,"line":3,"character":2,"targetString":"race"},{"text":"const locks: any","docs":"","start":117,"length":5,"line":3,"character":15,"targetString":"locks"},{"text":"(parameter) promise: any","docs":"","start":125,"length":7,"line":4,"character":2,"targetString":"promise"},{"text":"(parameter) value: any","docs":"","start":138,"length":5,"line":4,"character":15,"targetString":"value"},{"text":"const locks: any","docs":"","start":157,"length":5,"line":5,"character":8,"targetString":"locks"},{"text":"(parameter) id: string","docs":"","start":163,"length":2,"line":5,"character":14,"targetString":"id"},{"text":"(parameter) then: any","docs":"","start":176,"length":4,"line":6,"character":6,"targetString":"then"},{"text":"(parameter) value: any","docs":"","start":181,"length":5,"line":6,"character":11,"targetString":"value"},{"text":"const locks: any","docs":"","start":194,"length":5,"line":7,"character":6,"targetString":"locks"},{"text":"(parameter) id: string","docs":"","start":200,"length":2,"line":7,"character":12,"targetString":"id"}],[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"const ref: any","docs":"","start":28,"length":3,"line":1,"character":8,"targetString":"ref"},{"text":"(JSX attribute) onClick: () => void","docs":"","start":102,"length":7,"line":6,"character":10,"targetString":"onClick"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":136,"length":5,"line":7,"character":17,"targetString":"fetch"},{"text":"(parameter) v: any","docs":"","start":152,"length":1,"line":7,"character":33,"targetString":"v"},{"text":"const ref: any","docs":"","start":173,"length":3,"line":8,"character":14,"targetString":"ref"},{"text":"(parameter) v: any","docs":"","start":197,"length":1,"line":8,"character":38,"targetString":"v"},{"text":"(JSX attribute) onClick: () => void","docs":"","start":297,"length":7,"line":15,"character":10,"targetString":"onClick"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":331,"length":5,"line":16,"character":17,"targetString":"fetch"},{"text":"(parameter) v: any","docs":"","start":347,"length":1,"line":16,"character":33,"targetString":"v"},{"text":"const ref: any","docs":"","start":368,"length":3,"line":17,"character":14,"targetString":"ref"},{"text":"(parameter) v: any","docs":"","start":392,"length":1,"line":17,"character":38,"targetString":"v"},{"text":"(JSX attribute) ref: any","docs":"","start":490,"length":3,"line":24,"character":11,"targetString":"ref"},{"text":"const ref: any","docs":"","start":495,"length":3,"line":24,"character":16,"targetString":"ref"}]],"/blog/Javascript基础/返回网页顶部":[[{"text":"var document: Document","docs":"","start":0,"length":8,"line":0,"character":0,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":9,"length":15,"line":0,"character":9,"targetString":"documentElement"},{"text":"(property) Element.scrollTop: number","docs":"","start":25,"length":9,"line":0,"character":25,"targetString":"scrollTop"}],[{"text":"function scrollTo(x: number, y: number): void (+1 overload)","docs":"","start":0,"length":8,"line":0,"character":0,"targetString":"scrollTo"}],[{"text":"var window: Window & typeof globalThis","docs":"","start":0,"length":6,"line":0,"character":0,"targetString":"window"},{"text":"(method) scrollBy(options?: ScrollToOptions | undefined): void (+1 overload)","docs":"","start":7,"length":8,"line":0,"character":7,"targetString":"scrollBy"},{"text":"(property) ScrollToOptions.top?: number | undefined","docs":"","start":18,"length":3,"line":0,"character":18,"targetString":"top"},{"text":"var document: Document","docs":"","start":24,"length":8,"line":0,"character":24,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":33,"length":15,"line":0,"character":33,"targetString":"documentElement"},{"text":"(property) Element.scrollTop: number","docs":"","start":49,"length":9,"line":0,"character":49,"targetString":"scrollTop"}],[{"text":"var window: Window & typeof globalThis","docs":"","start":0,"length":6,"line":0,"character":0,"targetString":"window"},{"text":"(method) scrollBy(options?: ScrollToOptions | undefined): void (+1 overload)","docs":"","start":7,"length":8,"line":0,"character":7,"targetString":"scrollBy"},{"text":"(property) ScrollToOptions.top?: number | undefined","docs":"","start":20,"length":3,"line":1,"character":2,"targetString":"top"},{"text":"var document: Document","docs":"","start":26,"length":8,"line":1,"character":8,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":35,"length":15,"line":1,"character":17,"targetString":"documentElement"},{"text":"(property) Element.scrollTop: number","docs":"","start":51,"length":9,"line":1,"character":33,"targetString":"scrollTop"},{"text":"(property) ScrollOptions.behavior?: ScrollBehavior | undefined","docs":"","start":64,"length":8,"line":2,"character":2,"targetString":"behavior"}]],"/blog/Javascript基础/进入视口范围检测":[[{"text":"function testClientRect(element: any, onEnter: any, onOut: any, deltaTop?: number, deltaBottom?: number): void","docs":"进入视口范围检测","start":195,"length":14,"line":9,"character":9,"targetString":"testClientRect"},{"text":"(parameter) element: any","docs":"","start":213,"length":7,"line":10,"character":2,"targetString":"element"},{"text":"(parameter) onEnter: any","docs":"","start":224,"length":7,"line":11,"character":2,"targetString":"onEnter"},{"text":"(parameter) onOut: any","docs":"","start":235,"length":5,"line":12,"character":2,"targetString":"onOut"},{"text":"(parameter) deltaTop: number","docs":"","start":244,"length":8,"line":13,"character":2,"targetString":"deltaTop"},{"text":"(parameter) deltaBottom: number","docs":"","start":260,"length":11,"line":14,"character":2,"targetString":"deltaBottom"},{"text":"const rect: any","docs":"","start":288,"length":4,"line":16,"character":8,"targetString":"rect"},{"text":"(parameter) element: any","docs":"","start":295,"length":7,"line":16,"character":15,"targetString":"element"},{"text":"const rect: any","docs":"","start":350,"length":4,"line":19,"character":4,"targetString":"rect"},{"text":"var window: Window & typeof globalThis","docs":"","start":359,"length":6,"line":19,"character":13,"targetString":"window"},{"text":"(property) innerHeight: number","docs":"","start":366,"length":11,"line":19,"character":20,"targetString":"innerHeight"},{"text":"(parameter) deltaTop: number","docs":"","start":380,"length":8,"line":19,"character":34,"targetString":"deltaTop"},{"text":"const rect: any","docs":"","start":396,"length":4,"line":20,"character":4,"targetString":"rect"},{"text":"const rect: any","docs":"","start":406,"length":4,"line":20,"character":14,"targetString":"rect"},{"text":"(parameter) deltaBottom: number","docs":"","start":420,"length":11,"line":20,"character":28,"targetString":"deltaBottom"},{"text":"(parameter) onEnter: any","docs":"","start":442,"length":7,"line":22,"character":4,"targetString":"onEnter"},{"text":"(parameter) onEnter: any","docs":"","start":453,"length":7,"line":22,"character":15,"targetString":"onEnter"},{"text":"(parameter) onOut: any","docs":"","start":478,"length":5,"line":24,"character":4,"targetString":"onOut"},{"text":"(parameter) onOut: any","docs":"","start":487,"length":5,"line":24,"character":13,"targetString":"onOut"}]],"/blog/Javascript基础/随机颜色":[[{"text":"const rgb: () => string","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"rgb"},{"text":"const r: number","docs":"","start":28,"length":1,"line":1,"character":8,"targetString":"r"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":32,"length":4,"line":1,"character":12,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":37,"length":5,"line":1,"character":17,"targetString":"floor"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":43,"length":4,"line":1,"character":23,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":48,"length":6,"line":1,"character":28,"targetString":"random"},{"text":"const g: number","docs":"","start":71,"length":1,"line":2,"character":8,"targetString":"g"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":75,"length":4,"line":2,"character":12,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":80,"length":5,"line":2,"character":17,"targetString":"floor"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":86,"length":4,"line":2,"character":23,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":91,"length":6,"line":2,"character":28,"targetString":"random"},{"text":"const b: number","docs":"","start":114,"length":1,"line":3,"character":8,"targetString":"b"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":118,"length":4,"line":3,"character":12,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":123,"length":5,"line":3,"character":17,"targetString":"floor"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":129,"length":4,"line":3,"character":23,"targetString":"Math"},{"text":"(method) Math.random(): number","docs":"Returns a pseudorandom number between 0 and 1.","start":134,"length":6,"line":3,"character":28,"targetString":"random"},{"text":"const rgb: string","docs":"","start":157,"length":3,"line":4,"character":8,"targetString":"rgb"},{"text":"const r: number","docs":"","start":170,"length":1,"line":4,"character":21,"targetString":"r"},{"text":"const g: number","docs":"","start":176,"length":1,"line":4,"character":27,"targetString":"g"},{"text":"const b: number","docs":"","start":182,"length":1,"line":4,"character":33,"targetString":"b"},{"text":"const rgb: string","docs":"","start":198,"length":3,"line":5,"character":9,"targetString":"rgb"}]],"/blog/React原理/Context造成的rerender":[[{"text":"const TextContext: any","docs":"","start":6,"length":11,"line":0,"character":6,"targetString":"TextContext"},{"text":"const Parent: () => any","docs":"","start":49,"length":6,"line":2,"character":6,"targetString":"Parent"},{"text":"(JSX attribute) value: {\n    name: string;\n}","docs":"","start":113,"length":5,"line":4,"character":24,"targetString":"value"},{"text":"(property) name: string","docs":"","start":122,"length":4,"line":4,"character":33,"targetString":"name"},{"text":"const Child: () => any","docs":"","start":144,"length":5,"line":5,"character":5,"targetString":"Child"},{"text":"const Child: () => any","docs":"","start":188,"length":5,"line":9,"character":6,"targetString":"Child"},{"text":"var name: any","docs":"","start":232,"length":4,"line":10,"character":28,"targetString":"name"},{"text":"var name: any","docs":"","start":247,"length":4,"line":10,"character":43,"targetString":"name"}],[{"text":"const Parent: () => any","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"Parent"},{"text":"const valueRef: any","docs":"","start":31,"length":8,"line":1,"character":8,"targetString":"valueRef"},{"text":"(property) name: string","docs":"","start":51,"length":4,"line":1,"character":28,"targetString":"name"},{"text":"(JSX attribute) value: any","docs":"","start":104,"length":5,"line":3,"character":26,"targetString":"value"}]],"/blog/React原理/React中的错误处理":[[{"text":"var error: unknown","docs":"","start":28,"length":5,"line":2,"character":9,"targetString":"error"},{"text":"function handleError(error: any): void","docs":"","start":39,"length":11,"line":3,"character":2,"targetString":"handleError"},{"text":"var error: unknown","docs":"","start":51,"length":5,"line":3,"character":14,"targetString":"error"},{"text":"function handleError(error: any): void","docs":"","start":70,"length":11,"line":6,"character":9,"targetString":"handleError"},{"text":"(parameter) error: any","docs":"","start":82,"length":5,"line":6,"character":21,"targetString":"error"},{"text":"(parameter) error: any","docs":"","start":108,"length":5,"line":7,"character":17,"targetString":"error"}],[{"text":"function throwException(fiber: any, errorInfo: any): void","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"throwException"},{"text":"(parameter) fiber: any","docs":"","start":24,"length":5,"line":0,"character":24,"targetString":"fiber"},{"text":"(parameter) errorInfo: any","docs":"","start":31,"length":9,"line":0,"character":31,"targetString":"errorInfo"},{"text":"let workInProgress: any","docs":"","start":50,"length":14,"line":1,"character":6,"targetString":"workInProgress"},{"text":"(parameter) fiber: any","docs":"","start":67,"length":5,"line":1,"character":23,"targetString":"fiber"},{"text":"let workInProgress: any","docs":"","start":82,"length":14,"line":2,"character":9,"targetString":"workInProgress"},{"text":"let workInProgress: any","docs":"","start":112,"length":14,"line":3,"character":12,"targetString":"workInProgress"},{"text":"let workInProgress: any","docs":"","start":187,"length":14,"line":5,"character":30,"targetString":"workInProgress"},{"text":"(parameter) errorInfo: any","docs":"","start":203,"length":9,"line":5,"character":46,"targetString":"errorInfo"},{"text":"const ctor: any","docs":"","start":278,"length":4,"line":9,"character":14,"targetString":"ctor"},{"text":"let workInProgress: any","docs":"","start":285,"length":14,"line":9,"character":21,"targetString":"workInProgress"},{"text":"const instance: any","docs":"","start":319,"length":8,"line":10,"character":14,"targetString":"instance"},{"text":"let workInProgress: any","docs":"","start":330,"length":14,"line":10,"character":25,"targetString":"workInProgress"},{"text":"const ctor: any","docs":"","start":385,"length":4,"line":12,"character":17,"targetString":"ctor"},{"text":"const instance: any","docs":"","start":450,"length":8,"line":13,"character":17,"targetString":"instance"},{"text":"let workInProgress: any","docs":"","start":537,"length":14,"line":15,"character":33,"targetString":"workInProgress"},{"text":"(parameter) errorInfo: any","docs":"","start":553,"length":9,"line":15,"character":49,"targetString":"errorInfo"},{"text":"let workInProgress: any","docs":"","start":598,"length":14,"line":19,"character":4,"targetString":"workInProgress"},{"text":"let workInProgress: any","docs":"","start":615,"length":14,"line":19,"character":21,"targetString":"workInProgress"}]],"/blog/React原理/React函数式编程":[[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"var document: Document","docs":"","start":22,"length":8,"line":1,"character":2,"targetString":"document"},{"text":"(property) Document.title: string","docs":"Contains the title of the document.","start":31,"length":5,"line":1,"character":11,"targetString":"title"}],[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"var document: Document","docs":"","start":44,"length":8,"line":2,"character":4,"targetString":"document"},{"text":"(property) Document.title: string","docs":"Contains the title of the document.","start":53,"length":5,"line":2,"character":13,"targetString":"title"}],[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"const setTitle: () => void","docs":"","start":28,"length":8,"line":1,"character":8,"targetString":"setTitle"},{"text":"var document: Document","docs":"","start":51,"length":8,"line":2,"character":4,"targetString":"document"},{"text":"(property) Document.title: string","docs":"Contains the title of the document.","start":60,"length":5,"line":2,"character":13,"targetString":"title"},{"text":"const setTitle: () => void","docs":"","start":102,"length":8,"line":5,"character":4,"targetString":"setTitle"}],[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"const getTitle: () => string","docs":"","start":42,"length":8,"line":2,"character":8,"targetString":"getTitle"},{"text":"var document: Document","docs":"","start":59,"length":8,"line":2,"character":25,"targetString":"document"},{"text":"(property) Document.title: string","docs":"Contains the title of the document.","start":68,"length":5,"line":2,"character":34,"targetString":"title"},{"text":"const appendTitle: (value: any) => string","docs":"","start":82,"length":11,"line":3,"character":8,"targetString":"appendTitle"},{"text":"(parameter) value: any","docs":"","start":96,"length":5,"line":3,"character":22,"targetString":"value"},{"text":"const getTitle: () => string","docs":"","start":105,"length":8,"line":3,"character":31,"targetString":"getTitle"},{"text":"(parameter) value: any","docs":"","start":118,"length":5,"line":3,"character":44,"targetString":"value"},{"text":"const setTitleHead: () => void","docs":"","start":132,"length":12,"line":4,"character":8,"targetString":"setTitleHead"},{"text":"var document: Document","docs":"","start":159,"length":8,"line":5,"character":4,"targetString":"document"},{"text":"(property) Document.title: string","docs":"Contains the title of the document.","start":168,"length":5,"line":5,"character":13,"targetString":"title"},{"text":"const appendTitle: (value: any) => string","docs":"","start":176,"length":11,"line":5,"character":21,"targetString":"appendTitle"}]],"/blog/React原理/React函数组件对比class组件":[[{"text":"const Img: ({ src }: {\n    src: string;\n}) => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"Img"},{"text":"var src: string","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"src"},{"text":"(property) src: string","docs":"","start":40,"length":3,"line":0,"character":40,"targetString":"src"},{"text":"const displaySrc: any","docs":"","start":69,"length":10,"line":1,"character":9,"targetString":"displaySrc"},{"text":"const setDisplaySrc: any","docs":"","start":81,"length":13,"line":1,"character":21,"targetString":"setDisplaySrc"},{"text":"const ref: any","docs":"","start":129,"length":3,"line":2,"character":8,"targetString":"ref"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":142,"length":16,"line":2,"character":21,"targetString":"HTMLImageElement"},{"text":"const io: IntersectionObserver","docs":"","start":193,"length":2,"line":5,"character":10,"targetString":"io"},{"text":"var IntersectionObserver: new (callback: IntersectionObserverCallback, options?: IntersectionObserverInit | undefined) => IntersectionObserver","docs":"provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.","start":202,"length":20,"line":5,"character":19,"targetString":"IntersectionObserver"},{"text":"const setDisplaySrc: any","docs":"","start":229,"length":13,"line":5,"character":46,"targetString":"setDisplaySrc"},{"text":"var src: string","docs":"","start":243,"length":3,"line":5,"character":60,"targetString":"src"},{"text":"const io: IntersectionObserver","docs":"","start":253,"length":2,"line":6,"character":4,"targetString":"io"},{"text":"(method) IntersectionObserver.observe(target: Element): void","docs":"","start":256,"length":7,"line":6,"character":7,"targetString":"observe"},{"text":"const ref: any","docs":"","start":264,"length":3,"line":6,"character":15,"targetString":"ref"},{"text":"const io: IntersectionObserver","docs":"","start":302,"length":2,"line":8,"character":6,"targetString":"io"},{"text":"(method) IntersectionObserver.unobserve(target: Element): void","docs":"","start":305,"length":9,"line":8,"character":9,"targetString":"unobserve"},{"text":"const ref: any","docs":"","start":315,"length":3,"line":8,"character":19,"targetString":"ref"},{"text":"var src: string","docs":"","start":340,"length":3,"line":10,"character":6,"targetString":"src"},{"text":"(JSX attribute) ref: any","docs":"","start":361,"length":3,"line":12,"character":14,"targetString":"ref"},{"text":"const ref: any","docs":"","start":366,"length":3,"line":12,"character":19,"targetString":"ref"},{"text":"(JSX attribute) src: any","docs":"","start":371,"length":3,"line":12,"character":24,"targetString":"src"},{"text":"const displaySrc: any","docs":"","start":376,"length":10,"line":12,"character":29,"targetString":"displaySrc"}],[{"text":"interface ImgProps","docs":"","start":10,"length":8,"line":0,"character":10,"targetString":"ImgProps"},{"text":"(property) ImgProps.src: string","docs":"","start":23,"length":3,"line":1,"character":2,"targetString":"src"},{"text":"class Img","docs":"","start":44,"length":3,"line":4,"character":6,"targetString":"Img"},{"text":"interface ImgProps","docs":"","start":72,"length":8,"line":4,"character":34,"targetString":"ImgProps"},{"text":"(property) displaySrc: string","docs":"","start":84,"length":10,"line":4,"character":46,"targetString":"displaySrc"},{"text":"(property) Img.defaultProps: {\n    src: string;\n}","docs":"","start":117,"length":12,"line":5,"character":9,"targetString":"defaultProps"},{"text":"(property) src: string","docs":"","start":138,"length":3,"line":6,"character":4,"targetString":"src"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":164,"length":2,"line":8,"character":2,"targetString":"io"},{"text":"interface IntersectionObserver","docs":"provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.","start":168,"length":20,"line":8,"character":6,"targetString":"IntersectionObserver"},{"text":"(property) Img.ref: any","docs":"","start":198,"length":3,"line":9,"character":2,"targetString":"ref"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":219,"length":16,"line":9,"character":23,"targetString":"HTMLImageElement"},{"text":"(parameter) props: any","docs":"","start":259,"length":5,"line":11,"character":14,"targetString":"props"},{"text":"(parameter) props: any","docs":"","start":289,"length":5,"line":12,"character":10,"targetString":"props"},{"text":"(property) displaySrc: null","docs":"","start":321,"length":10,"line":14,"character":6,"targetString":"displaySrc"},{"text":"(property) Img.ref: any","docs":"","start":354,"length":3,"line":16,"character":9,"targetString":"ref"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":376,"length":16,"line":16,"character":31,"targetString":"HTMLImageElement"},{"text":"(property) Img.updateEffect: () => void","docs":"","start":403,"length":12,"line":19,"character":2,"targetString":"updateEffect"},{"text":"const src: any","docs":"","start":438,"length":3,"line":20,"character":12,"targetString":"src"},{"text":"const src: any","docs":"","start":491,"length":3,"line":21,"character":34,"targetString":"src"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":538,"length":2,"line":23,"character":15,"targetString":"io"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":557,"length":2,"line":24,"character":13,"targetString":"io"},{"text":"(method) IntersectionObserver.unobserve(target: Element): void","docs":"","start":560,"length":9,"line":24,"character":16,"targetString":"unobserve"},{"text":"(property) Img.ref: any","docs":"","start":575,"length":3,"line":24,"character":31,"targetString":"ref"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":601,"length":2,"line":25,"character":13,"targetString":"io"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":630,"length":2,"line":27,"character":11,"targetString":"io"},{"text":"var IntersectionObserver: new (callback: IntersectionObserverCallback, options?: IntersectionObserverInit | undefined) => IntersectionObserver","docs":"provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport.","start":639,"length":20,"line":27,"character":20,"targetString":"IntersectionObserver"},{"text":"(property) displaySrc: any","docs":"","start":690,"length":10,"line":28,"character":24,"targetString":"displaySrc"},{"text":"const src: any","docs":"","start":702,"length":3,"line":28,"character":36,"targetString":"src"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":728,"length":2,"line":30,"character":11,"targetString":"io"},{"text":"(method) IntersectionObserver.observe(target: Element): void","docs":"","start":731,"length":7,"line":30,"character":14,"targetString":"observe"},{"text":"(property) Img.ref: any","docs":"","start":744,"length":3,"line":30,"character":27,"targetString":"ref"},{"text":"(method) Img.componentDidUpdate(): void","docs":"","start":769,"length":18,"line":33,"character":2,"targetString":"componentDidUpdate"},{"text":"(property) Img.updateEffect: () => void","docs":"","start":801,"length":12,"line":34,"character":9,"targetString":"updateEffect"},{"text":"(method) Img.componentDidMount(): void","docs":"","start":822,"length":17,"line":36,"character":2,"targetString":"componentDidMount"},{"text":"(property) Img.updateEffect: () => void","docs":"","start":853,"length":12,"line":37,"character":9,"targetString":"updateEffect"},{"text":"(method) Img.componentWillUnmount(): void","docs":"","start":874,"length":20,"line":39,"character":2,"targetString":"componentWillUnmount"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":912,"length":2,"line":40,"character":13,"targetString":"io"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":929,"length":2,"line":41,"character":11,"targetString":"io"},{"text":"(method) IntersectionObserver.unobserve(target: Element): void","docs":"","start":932,"length":9,"line":41,"character":14,"targetString":"unobserve"},{"text":"(property) Img.ref: any","docs":"","start":947,"length":3,"line":41,"character":29,"targetString":"ref"},{"text":"(property) Img.io: IntersectionObserver","docs":"","start":971,"length":2,"line":42,"character":11,"targetString":"io"},{"text":"(method) Img.render(): any","docs":"","start":994,"length":6,"line":46,"character":2,"targetString":"render"},{"text":"const displaySrc: any","docs":"","start":1017,"length":10,"line":47,"character":12,"targetString":"displaySrc"},{"text":"(JSX attribute) ref: any","docs":"","start":1059,"length":3,"line":48,"character":16,"targetString":"ref"},{"text":"(property) Img.ref: any","docs":"","start":1069,"length":3,"line":48,"character":26,"targetString":"ref"},{"text":"(JSX attribute) src: any","docs":"","start":1074,"length":3,"line":48,"character":31,"targetString":"src"},{"text":"const displaySrc: any","docs":"","start":1079,"length":10,"line":48,"character":36,"targetString":"displaySrc"}]],"/blog/React原理/React底层XSS防御":[[{"text":"function createElement(type: string, props: Object, rootContainerElement: Element | Document, parentNamespace: string): Element","docs":"","start":16,"length":13,"line":0,"character":16,"targetString":"createElement"},{"text":"(parameter) type: string","docs":"","start":33,"length":4,"line":1,"character":2,"targetString":"type"},{"text":"(parameter) props: Object","docs":"","start":49,"length":5,"line":2,"character":2,"targetString":"props"},{"text":"interface Object","docs":"Provides functionality common to all JavaScript objects.","start":56,"length":6,"line":2,"character":9,"targetString":"Object"},{"text":"(parameter) rootContainerElement: Element | Document","docs":"","start":66,"length":20,"line":3,"character":2,"targetString":"rootContainerElement"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":88,"length":7,"line":3,"character":24,"targetString":"Element"},{"text":"interface Document","docs":"Any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.","start":98,"length":8,"line":3,"character":34,"targetString":"Document"},{"text":"(parameter) parentNamespace: string","docs":"","start":110,"length":15,"line":4,"character":2,"targetString":"parentNamespace"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":138,"length":7,"line":5,"character":3,"targetString":"Element"},{"text":"(parameter) type: string","docs":"","start":203,"length":4,"line":8,"character":8,"targetString":"type"},{"text":"const div: any","docs":"","start":356,"length":3,"line":11,"character":12,"targetString":"div"},{"text":"const div: any","docs":"","start":404,"length":3,"line":12,"character":6,"targetString":"div"},{"text":"const firstChild: any","docs":"","start":536,"length":10,"line":14,"character":12,"targetString":"firstChild"},{"text":"const div: any","docs":"","start":551,"length":3,"line":14,"character":27,"targetString":"div"},{"text":"const any: any","docs":"","start":567,"length":3,"line":14,"character":43,"targetString":"any"},{"text":"const HTMLScriptElement: any","docs":"","start":573,"length":17,"line":14,"character":49,"targetString":"HTMLScriptElement"},{"text":"const div: any","docs":"","start":612,"length":3,"line":15,"character":19,"targetString":"div"},{"text":"const firstChild: any","docs":"","start":628,"length":10,"line":15,"character":35,"targetString":"firstChild"}],[{"text":"function commitUpdate(domElement: any, updatePayload: Array<mixed>, type: string, oldProps: any, newProps: any, internalInstanceHandle: Object): void","docs":"","start":16,"length":12,"line":0,"character":16,"targetString":"commitUpdate"},{"text":"(parameter) domElement: any","docs":"","start":32,"length":10,"line":1,"character":2,"targetString":"domElement"},{"text":"(parameter) updatePayload: any[]","docs":"","start":56,"length":13,"line":2,"character":2,"targetString":"updatePayload"},{"text":"interface Array<T>","docs":"","start":71,"length":5,"line":2,"character":17,"targetString":"Array"},{"text":"(parameter) type: string","docs":"","start":87,"length":4,"line":3,"character":2,"targetString":"type"},{"text":"(parameter) oldProps: any","docs":"","start":103,"length":8,"line":4,"character":2,"targetString":"oldProps"},{"text":"(parameter) newProps: any","docs":"","start":122,"length":8,"line":5,"character":2,"targetString":"newProps"},{"text":"(parameter) internalInstanceHandle: Object","docs":"","start":141,"length":22,"line":6,"character":2,"targetString":"internalInstanceHandle"},{"text":"interface Object","docs":"Provides functionality common to all JavaScript objects.","start":165,"length":6,"line":6,"character":26,"targetString":"Object"},{"text":"(parameter) domElement: any","docs":"","start":310,"length":10,"line":10,"character":19,"targetString":"domElement"},{"text":"(parameter) newProps: any","docs":"","start":322,"length":8,"line":10,"character":31,"targetString":"newProps"},{"text":"(parameter) domElement: any","docs":"","start":388,"length":10,"line":12,"character":19,"targetString":"domElement"},{"text":"(parameter) updatePayload: any[]","docs":"","start":400,"length":13,"line":12,"character":31,"targetString":"updatePayload"},{"text":"(parameter) type: string","docs":"","start":415,"length":4,"line":12,"character":46,"targetString":"type"},{"text":"(parameter) oldProps: any","docs":"","start":421,"length":8,"line":12,"character":52,"targetString":"oldProps"},{"text":"(parameter) newProps: any","docs":"","start":431,"length":8,"line":12,"character":62,"targetString":"newProps"}],[{"text":"function updateDOMProperties(domElement: Element, updatePayload: Array<any>, wasCustomComponentTag: boolean, isCustomComponentTag: boolean): void","docs":"","start":9,"length":19,"line":0,"character":9,"targetString":"updateDOMProperties"},{"text":"(parameter) domElement: Element","docs":"","start":32,"length":10,"line":1,"character":2,"targetString":"domElement"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":44,"length":7,"line":1,"character":14,"targetString":"Element"},{"text":"(parameter) updatePayload: any[]","docs":"","start":55,"length":13,"line":2,"character":2,"targetString":"updatePayload"},{"text":"interface Array<T>","docs":"","start":70,"length":5,"line":2,"character":17,"targetString":"Array"},{"text":"(parameter) wasCustomComponentTag: boolean","docs":"","start":84,"length":21,"line":3,"character":2,"targetString":"wasCustomComponentTag"},{"text":"(parameter) isCustomComponentTag: boolean","docs":"","start":118,"length":20,"line":4,"character":2,"targetString":"isCustomComponentTag"},{"text":"let i: number","docs":"","start":209,"length":1,"line":7,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":216,"length":1,"line":7,"character":18,"targetString":"i"},{"text":"(parameter) updatePayload: any[]","docs":"","start":220,"length":13,"line":7,"character":22,"targetString":"updatePayload"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":234,"length":6,"line":7,"character":36,"targetString":"length"},{"text":"let i: number","docs":"","start":242,"length":1,"line":7,"character":44,"targetString":"i"},{"text":"const propKey: any","docs":"","start":262,"length":7,"line":8,"character":10,"targetString":"propKey"},{"text":"(parameter) updatePayload: any[]","docs":"","start":272,"length":13,"line":8,"character":20,"targetString":"updatePayload"},{"text":"let i: number","docs":"","start":286,"length":1,"line":8,"character":34,"targetString":"i"},{"text":"const propValue: any","docs":"","start":299,"length":9,"line":9,"character":10,"targetString":"propValue"},{"text":"(parameter) updatePayload: any[]","docs":"","start":311,"length":13,"line":9,"character":22,"targetString":"updatePayload"},{"text":"let i: number","docs":"","start":325,"length":1,"line":9,"character":36,"targetString":"i"},{"text":"const propKey: any","docs":"","start":340,"length":7,"line":10,"character":8,"targetString":"propKey"},{"text":"(parameter) domElement: Element","docs":"","start":385,"length":10,"line":11,"character":24,"targetString":"domElement"},{"text":"const propValue: any","docs":"","start":397,"length":9,"line":11,"character":36,"targetString":"propValue"},{"text":"const propKey: any","docs":"","start":423,"length":7,"line":12,"character":15,"targetString":"propKey"},{"text":"(parameter) domElement: Element","docs":"","start":484,"length":10,"line":13,"character":19,"targetString":"domElement"},{"text":"const propValue: any","docs":"","start":496,"length":9,"line":13,"character":31,"targetString":"propValue"},{"text":"const propKey: any","docs":"","start":522,"length":7,"line":14,"character":15,"targetString":"propKey"},{"text":"(parameter) domElement: Element","docs":"","start":567,"length":10,"line":15,"character":21,"targetString":"domElement"},{"text":"const propValue: any","docs":"","start":579,"length":9,"line":15,"character":33,"targetString":"propValue"},{"text":"(parameter) domElement: Element","docs":"","start":629,"length":10,"line":17,"character":26,"targetString":"domElement"},{"text":"const propKey: any","docs":"","start":641,"length":7,"line":17,"character":38,"targetString":"propKey"},{"text":"const propValue: any","docs":"","start":650,"length":9,"line":17,"character":47,"targetString":"propValue"},{"text":"(parameter) isCustomComponentTag: boolean","docs":"","start":661,"length":20,"line":17,"character":58,"targetString":"isCustomComponentTag"}],[{"text":"const setInnerHTML: any","docs":"","start":6,"length":12,"line":0,"character":6,"targetString":"setInnerHTML"},{"text":"(parameter) node: Element","docs":"","start":68,"length":4,"line":1,"character":2,"targetString":"node"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":74,"length":7,"line":1,"character":8,"targetString":"Element"},{"text":"(parameter) html: any","docs":"","start":85,"length":4,"line":2,"character":2,"targetString":"html"},{"text":"(parameter) html: any","docs":"","start":150,"length":4,"line":5,"character":20,"targetString":"html"}],[{"text":"let setTextContent: (node: Element, text: string) => void","docs":"","start":4,"length":14,"line":0,"character":4,"targetString":"setTextContent"},{"text":"(parameter) node: Element","docs":"","start":30,"length":4,"line":0,"character":30,"targetString":"node"},{"text":"interface Element","docs":"Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.","start":36,"length":7,"line":0,"character":36,"targetString":"Element"},{"text":"(parameter) text: string","docs":"","start":45,"length":4,"line":0,"character":45,"targetString":"text"},{"text":"(parameter) text: string","docs":"","start":73,"length":4,"line":1,"character":6,"targetString":"text"},{"text":"let firstChild: ChildNode | null","docs":"","start":89,"length":10,"line":2,"character":8,"targetString":"firstChild"},{"text":"(parameter) node: Element","docs":"","start":102,"length":4,"line":2,"character":21,"targetString":"node"},{"text":"(property) Node.firstChild: ChildNode | null","docs":"Returns the first child.","start":107,"length":10,"line":2,"character":26,"targetString":"firstChild"},{"text":"let firstChild: ChildNode | null","docs":"","start":133,"length":10,"line":4,"character":6,"targetString":"firstChild"},{"text":"let firstChild: ChildNode","docs":"","start":153,"length":10,"line":5,"character":6,"targetString":"firstChild"},{"text":"(parameter) node: Element","docs":"","start":168,"length":4,"line":5,"character":21,"targetString":"node"},{"text":"(property) Node.lastChild: ChildNode | null","docs":"Returns the last child.","start":173,"length":9,"line":5,"character":26,"targetString":"lastChild"},{"text":"let firstChild: ChildNode","docs":"","start":192,"length":10,"line":6,"character":6,"targetString":"firstChild"},{"text":"(property) Node.nodeType: number","docs":"Returns the type of node.","start":203,"length":8,"line":6,"character":17,"targetString":"nodeType"},{"text":"let firstChild: ChildNode","docs":"","start":240,"length":10,"line":8,"character":6,"targetString":"firstChild"},{"text":"(property) Node.nodeValue: string | null","docs":"","start":251,"length":9,"line":8,"character":17,"targetString":"nodeValue"},{"text":"(parameter) text: string","docs":"","start":263,"length":4,"line":8,"character":29,"targetString":"text"},{"text":"(parameter) node: Element","docs":"","start":293,"length":4,"line":12,"character":2,"targetString":"node"},{"text":"(property) Node.textContent: string | null","docs":"","start":298,"length":11,"line":12,"character":7,"targetString":"textContent"},{"text":"(parameter) text: string","docs":"","start":312,"length":4,"line":12,"character":21,"targetString":"text"}]],"/blog/React原理/batchUpdate":[[{"text":"const useValue: () => () => void","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"useValue"},{"text":"const a: any","docs":"","start":34,"length":1,"line":1,"character":9,"targetString":"a"},{"text":"const setA: any","docs":"","start":37,"length":4,"line":1,"character":12,"targetString":"setA"},{"text":"const b: any","docs":"","start":66,"length":1,"line":2,"character":9,"targetString":"b"},{"text":"const setB: any","docs":"","start":69,"length":4,"line":2,"character":12,"targetString":"setB"},{"text":"const update: () => void","docs":"","start":98,"length":6,"line":4,"character":8,"targetString":"update"},{"text":"const setA: any","docs":"","start":119,"length":4,"line":5,"character":4,"targetString":"setA"},{"text":"const a: any","docs":"","start":124,"length":1,"line":5,"character":9,"targetString":"a"},{"text":"const setB: any","docs":"","start":131,"length":4,"line":6,"character":4,"targetString":"setB"},{"text":"const a: any","docs":"","start":136,"length":1,"line":6,"character":9,"targetString":"a"},{"text":"const update: () => void","docs":"","start":153,"length":6,"line":9,"character":9,"targetString":"update"}],[{"text":"import unstable_batchedUpdates","docs":"","start":9,"length":23,"line":0,"character":9,"targetString":"unstable_batchedUpdates"},{"text":"const useValue: () => () => any","docs":"","start":59,"length":8,"line":2,"character":6,"targetString":"useValue"},{"text":"const a: any","docs":"","start":87,"length":1,"line":3,"character":9,"targetString":"a"},{"text":"const setA: any","docs":"","start":90,"length":4,"line":3,"character":12,"targetString":"setA"},{"text":"const b: any","docs":"","start":119,"length":1,"line":4,"character":9,"targetString":"b"},{"text":"const setB: any","docs":"","start":122,"length":4,"line":4,"character":12,"targetString":"setB"},{"text":"const update_batched: () => any","docs":"","start":151,"length":14,"line":6,"character":8,"targetString":"update_batched"},{"text":"import unstable_batchedUpdates","docs":"","start":178,"length":23,"line":7,"character":4,"targetString":"unstable_batchedUpdates"},{"text":"const setA: any","docs":"","start":216,"length":4,"line":8,"character":6,"targetString":"setA"},{"text":"const a: any","docs":"","start":221,"length":1,"line":8,"character":11,"targetString":"a"},{"text":"const setB: any","docs":"","start":230,"length":4,"line":9,"character":6,"targetString":"setB"},{"text":"const a: any","docs":"","start":235,"length":1,"line":9,"character":11,"targetString":"a"},{"text":"const update_batched: () => any","docs":"","start":255,"length":14,"line":12,"character":9,"targetString":"update_batched"}]],"/blog/React原理/context_rerender方案代替redux":[[{"text":"type IContext = {\n    count: number;\n    update: (partialState: Partial<IContext>) => void;\n}","docs":"","start":5,"length":8,"line":0,"character":5,"targetString":"IContext"},{"text":"(property) count: number","docs":"","start":20,"length":5,"line":1,"character":2,"targetString":"count"},{"text":"(property) update: (partialState: Partial<IContext>) => void","docs":"","start":36,"length":6,"line":2,"character":2,"targetString":"update"},{"text":"(parameter) partialState: Partial<IContext>","docs":"","start":45,"length":12,"line":2,"character":11,"targetString":"partialState"},{"text":"type Partial<T> = { [P in keyof T]?: T[P] | undefined; }","docs":"Make all properties in T optional","start":59,"length":7,"line":2,"character":25,"targetString":"Partial"},{"text":"type IContext = {\n    count: number;\n    update: (partialState: Partial<IContext>) => void;\n}","docs":"","start":67,"length":8,"line":2,"character":33,"targetString":"IContext"},{"text":"const Context: any","docs":"","start":95,"length":7,"line":5,"character":6,"targetString":"Context"},{"text":"type IContext = {\n    count: number;\n    update: (partialState: Partial<IContext>) => void;\n}","docs":"","start":125,"length":8,"line":5,"character":36,"targetString":"IContext"},{"text":"const Parent: () => any","docs":"","start":148,"length":6,"line":7,"character":6,"targetString":"Parent"},{"text":"const ctx: any","docs":"","start":174,"length":3,"line":8,"character":9,"targetString":"ctx"},{"text":"const updateCtx: any","docs":"","start":179,"length":9,"line":8,"character":14,"targetString":"updateCtx"},{"text":"type IContext = {\n    count: number;\n    update: (partialState: Partial<IContext>) => void;\n}","docs":"","start":201,"length":8,"line":8,"character":36,"targetString":"IContext"},{"text":"(property) count: number","docs":"","start":217,"length":5,"line":9,"character":4,"targetString":"count"},{"text":"(property) update: (partialState: any) => any","docs":"","start":231,"length":6,"line":10,"character":4,"targetString":"update"},{"text":"(parameter) partialState: any","docs":"","start":239,"length":12,"line":10,"character":12,"targetString":"partialState"},{"text":"const updateCtx: any","docs":"","start":255,"length":9,"line":10,"character":28,"targetString":"updateCtx"},{"text":"const ctx: any","docs":"","start":270,"length":3,"line":10,"character":43,"targetString":"ctx"},{"text":"(parameter) partialState: any","docs":"","start":278,"length":12,"line":10,"character":51,"targetString":"partialState"},{"text":"const Context: any","docs":"","start":317,"length":7,"line":14,"character":5,"targetString":"Context"},{"text":"(JSX attribute) value: any","docs":"","start":334,"length":5,"line":14,"character":22,"targetString":"value"},{"text":"const ctx: any","docs":"","start":341,"length":3,"line":14,"character":29,"targetString":"ctx"},{"text":"const Child: () => any","docs":"","start":354,"length":5,"line":15,"character":7,"targetString":"Child"},{"text":"const Context: any","docs":"","start":369,"length":7,"line":16,"character":6,"targetString":"Context"},{"text":"const Child: () => any","docs":"","start":400,"length":5,"line":20,"character":6,"targetString":"Child"},{"text":"const count: any","docs":"","start":426,"length":5,"line":21,"character":10,"targetString":"count"},{"text":"const update: any","docs":"","start":433,"length":6,"line":21,"character":17,"targetString":"update"},{"text":"const Context: any","docs":"","start":455,"length":7,"line":21,"character":39,"targetString":"Context"},{"text":"const count: any","docs":"","start":504,"length":5,"line":24,"character":19,"targetString":"count"},{"text":"(JSX attribute) onClick: () => any","docs":"","start":528,"length":7,"line":25,"character":11,"targetString":"onClick"},{"text":"const update: any","docs":"","start":543,"length":6,"line":25,"character":26,"targetString":"update"},{"text":"(property) count: any","docs":"","start":552,"length":5,"line":25,"character":35,"targetString":"count"},{"text":"const count: any","docs":"","start":559,"length":5,"line":25,"character":42,"targetString":"count"}]],"/blog/React原理/keep-live方法":[[{"text":"const useSingleton: any","docs":"","start":6,"length":12,"line":0,"character":6,"targetString":"useSingleton"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":48,"length":7,"line":0,"character":48,"targetString":"Promise"},{"text":"const ref: any","docs":"","start":73,"length":3,"line":1,"character":8,"targetString":"ref"},{"text":"const ref: any","docs":"","start":97,"length":3,"line":2,"character":6,"targetString":"ref"},{"text":"const ref: any","docs":"","start":117,"length":3,"line":2,"character":26,"targetString":"ref"},{"text":"const value: any","docs":"","start":138,"length":5,"line":4,"character":8,"targetString":"value"},{"text":"const ref: any","docs":"","start":166,"length":3,"line":5,"character":2,"targetString":"ref"},{"text":"const value: any","docs":"","start":180,"length":5,"line":5,"character":16,"targetString":"value"},{"text":"const ref: any","docs":"","start":196,"length":3,"line":7,"character":9,"targetString":"ref"}]],"/blog/React原理/propTypes验证":[[{"text":"function updateClassComponent(current: Fiber | null, workInProgress: any, Component: any, nextProps: any, renderExpirationTime: any): void","docs":"","start":9,"length":20,"line":0,"character":9,"targetString":"updateClassComponent"},{"text":"(parameter) current: any","docs":"","start":33,"length":7,"line":1,"character":2,"targetString":"current"},{"text":"(parameter) workInProgress: any","docs":"","start":58,"length":14,"line":2,"character":2,"targetString":"workInProgress"},{"text":"(parameter) Component: any","docs":"","start":83,"length":9,"line":3,"character":2,"targetString":"Component"},{"text":"(parameter) nextProps: any","docs":"","start":101,"length":9,"line":4,"character":2,"targetString":"nextProps"},{"text":"(parameter) renderExpirationTime: any","docs":"","start":114,"length":20,"line":5,"character":2,"targetString":"renderExpirationTime"},{"text":"(parameter) workInProgress: any","docs":"","start":180,"length":14,"line":8,"character":8,"targetString":"workInProgress"},{"text":"(parameter) workInProgress: any","docs":"","start":204,"length":14,"line":8,"character":32,"targetString":"workInProgress"},{"text":"const innerPropTypes: any","docs":"","start":246,"length":14,"line":9,"character":12,"targetString":"innerPropTypes"},{"text":"(parameter) Component: any","docs":"","start":263,"length":9,"line":9,"character":29,"targetString":"Component"},{"text":"const innerPropTypes: any","docs":"","start":293,"length":14,"line":10,"character":10,"targetString":"innerPropTypes"},{"text":"const innerPropTypes: any","docs":"","start":345,"length":14,"line":12,"character":10,"targetString":"innerPropTypes"},{"text":"(parameter) nextProps: any","docs":"","start":371,"length":9,"line":13,"character":10,"targetString":"nextProps"},{"text":"(parameter) Component: any","docs":"","start":445,"length":9,"line":15,"character":27,"targetString":"Component"}],[{"text":"function checkPropTypes(typeSpecs: any, values: any, location: any, componentName: any, getStack: any): void","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"checkPropTypes"},{"text":"(parameter) typeSpecs: any","docs":"","start":24,"length":9,"line":0,"character":24,"targetString":"typeSpecs"},{"text":"(parameter) values: any","docs":"","start":35,"length":6,"line":0,"character":35,"targetString":"values"},{"text":"(parameter) location: any","docs":"","start":43,"length":8,"line":0,"character":43,"targetString":"location"},{"text":"(parameter) componentName: any","docs":"","start":53,"length":13,"line":0,"character":53,"targetString":"componentName"},{"text":"(parameter) getStack: any","docs":"","start":68,"length":8,"line":0,"character":68,"targetString":"getStack"},{"text":"(local var) typeSpecName: string","docs":"","start":140,"length":12,"line":2,"character":13,"targetString":"typeSpecName"},{"text":"(parameter) typeSpecs: any","docs":"","start":156,"length":9,"line":2,"character":29,"targetString":"typeSpecs"},{"text":"(parameter) typeSpecs: any","docs":"","start":183,"length":9,"line":3,"character":14,"targetString":"typeSpecs"},{"text":"(local var) typeSpecName: string","docs":"","start":194,"length":12,"line":3,"character":25,"targetString":"typeSpecName"},{"text":"(local var) error: any","docs":"","start":223,"length":5,"line":4,"character":12,"targetString":"error"},{"text":"(parameter) typeSpecs: any","docs":"","start":264,"length":9,"line":6,"character":21,"targetString":"typeSpecs"},{"text":"(local var) typeSpecName: string","docs":"","start":274,"length":12,"line":6,"character":31,"targetString":"typeSpecName"},{"text":"(local var) err: Error","docs":"","start":322,"length":3,"line":7,"character":16,"targetString":"err"},{"text":"var Error: ErrorConstructor\n(message?: string | undefined) => Error","docs":"","start":328,"length":5,"line":7,"character":22,"targetString":"Error"},{"text":"(local var) err: Error","docs":"","start":365,"length":3,"line":8,"character":12,"targetString":"err"},{"text":"(property) Error.name: string","docs":"","start":369,"length":4,"line":8,"character":16,"targetString":"name"},{"text":"(local var) err: Error","docs":"","start":416,"length":3,"line":9,"character":18,"targetString":"err"},{"text":"(local var) error: any","docs":"","start":442,"length":5,"line":11,"character":10,"targetString":"error"},{"text":"(parameter) typeSpecs: any","docs":"","start":450,"length":9,"line":11,"character":18,"targetString":"typeSpecs"},{"text":"(local var) typeSpecName: string","docs":"","start":460,"length":12,"line":11,"character":28,"targetString":"typeSpecName"},{"text":"(parameter) values: any","docs":"","start":487,"length":6,"line":12,"character":12,"targetString":"values"},{"text":"(local var) typeSpecName: string","docs":"","start":507,"length":12,"line":13,"character":12,"targetString":"typeSpecName"},{"text":"(parameter) componentName: any","docs":"","start":533,"length":13,"line":14,"character":12,"targetString":"componentName"},{"text":"(parameter) location: any","docs":"","start":560,"length":8,"line":15,"character":12,"targetString":"location"},{"text":"(local var) ex: unknown","docs":"","start":650,"length":2,"line":19,"character":17,"targetString":"ex"},{"text":"(local var) error: any","docs":"","start":666,"length":5,"line":20,"character":10,"targetString":"error"},{"text":"(local var) ex: unknown","docs":"","start":674,"length":2,"line":20,"character":18,"targetString":"ex"},{"text":"(local var) error: any","docs":"","start":699,"length":5,"line":22,"character":12,"targetString":"error"},{"text":"(local var) error: any","docs":"","start":710,"length":5,"line":22,"character":23,"targetString":"error"},{"text":"var Error: ErrorConstructor","docs":"","start":727,"length":5,"line":22,"character":40,"targetString":"Error"},{"text":"(local var) error: any","docs":"","start":760,"length":5,"line":23,"character":23,"targetString":"error"}]],"/blog/React原理/react-key与defaultValue":[[{"text":"const Component: ({ defaultValue }: {\n    defaultValue: any;\n}) => any","docs":"","start":6,"length":9,"line":0,"character":6,"targetString":"Component"},{"text":"var defaultValue: any","docs":"","start":21,"length":12,"line":0,"character":21,"targetString":"defaultValue"},{"text":"const value: any","docs":"","start":51,"length":5,"line":1,"character":9,"targetString":"value"},{"text":"const setValue: any","docs":"","start":58,"length":8,"line":1,"character":16,"targetString":"setValue"},{"text":"var defaultValue: any","docs":"","start":79,"length":12,"line":1,"character":37,"targetString":"defaultValue"},{"text":"const value: any","docs":"","start":105,"length":5,"line":2,"character":12,"targetString":"value"},{"text":"const App: ({ data }: {\n    data: any;\n}) => any","docs":"","start":124,"length":3,"line":5,"character":6,"targetString":"App"},{"text":"var data: any","docs":"","start":133,"length":4,"line":5,"character":15,"targetString":"data"},{"text":"const Component: ({ defaultValue }: {\n    defaultValue: any;\n}) => any","docs":"","start":156,"length":9,"line":6,"character":10,"targetString":"Component"},{"text":"(JSX attribute) defaultValue: any","docs":"","start":166,"length":12,"line":6,"character":20,"targetString":"defaultValue"},{"text":"var data: any","docs":"","start":180,"length":4,"line":6,"character":34,"targetString":"data"}],[{"text":"const App: ({ data }: {\n    data: any;\n}) => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"var data: any","docs":"","start":15,"length":4,"line":0,"character":15,"targetString":"data"},{"text":"(JSX attribute) defaultValue: any","docs":"","start":48,"length":12,"line":1,"character":20,"targetString":"defaultValue"},{"text":"var data: any","docs":"","start":62,"length":4,"line":1,"character":34,"targetString":"data"},{"text":"(JSX attribute) key: any","docs":"","start":76,"length":3,"line":1,"character":48,"targetString":"key"},{"text":"var data: any","docs":"","start":81,"length":4,"line":1,"character":53,"targetString":"data"}]],"/blog/React原理/ref为什么能保持引用":[[{"text":"function updateWorkInProgressHook(): any","docs":"","start":9,"length":24,"line":0,"character":9,"targetString":"updateWorkInProgressHook"},{"text":"const newHook: any","docs":"","start":58,"length":7,"line":2,"character":8,"targetString":"newHook"},{"text":"(property) memoizedState: any","docs":"","start":82,"length":13,"line":3,"character":6,"targetString":"memoizedState"},{"text":"(property) baseState: any","docs":"","start":149,"length":9,"line":4,"character":6,"targetString":"baseState"},{"text":"(property) queue: any","docs":"","start":189,"length":5,"line":5,"character":6,"targetString":"queue"},{"text":"(property) baseUpdate: any","docs":"","start":221,"length":10,"line":6,"character":6,"targetString":"baseUpdate"},{"text":"(property) next: null","docs":"","start":263,"length":4,"line":7,"character":6,"targetString":"next"}],[{"text":"function mountRef<T>(initialValue: T): {\n    current: T;\n}","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"mountRef"},{"text":"(type parameter) T in mountRef<T>(initialValue: T): {\n    current: T;\n}","docs":"","start":18,"length":1,"line":0,"character":18,"targetString":"T"},{"text":"(parameter) initialValue: T","docs":"","start":21,"length":12,"line":0,"character":21,"targetString":"initialValue"},{"text":"(type parameter) T in mountRef<T>(initialValue: T): {\n    current: T;\n}","docs":"","start":35,"length":1,"line":0,"character":35,"targetString":"T"},{"text":"(property) current: T","docs":"","start":41,"length":7,"line":0,"character":41,"targetString":"current"},{"text":"(type parameter) T in mountRef<T>(initialValue: T): {\n    current: T;\n}","docs":"","start":50,"length":1,"line":0,"character":50,"targetString":"T"},{"text":"const hook: any","docs":"","start":64,"length":4,"line":1,"character":8,"targetString":"hook"},{"text":"const ref: {\n    current: T;\n}","docs":"","start":105,"length":3,"line":2,"character":8,"targetString":"ref"},{"text":"(property) current: T","docs":"","start":113,"length":7,"line":2,"character":16,"targetString":"current"},{"text":"(parameter) initialValue: T","docs":"","start":122,"length":12,"line":2,"character":25,"targetString":"initialValue"},{"text":"const hook: any","docs":"","start":145,"length":4,"line":3,"character":2,"targetString":"hook"},{"text":"const ref: {\n    current: T;\n}","docs":"","start":166,"length":3,"line":3,"character":23,"targetString":"ref"},{"text":"const ref: {\n    current: T;\n}","docs":"","start":179,"length":3,"line":4,"character":9,"targetString":"ref"}],[{"text":"import useRef","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"useRef"},{"text":"import useEffect","docs":"","start":17,"length":9,"line":0,"character":17,"targetString":"useEffect"},{"text":"const usePrevious: (value: any) => any","docs":"","start":48,"length":11,"line":1,"character":6,"targetString":"usePrevious"},{"text":"(parameter) value: any","docs":"","start":62,"length":5,"line":1,"character":20,"targetString":"value"},{"text":"const ref: any","docs":"","start":81,"length":3,"line":2,"character":8,"targetString":"ref"},{"text":"import useRef","docs":"","start":87,"length":6,"line":2,"character":14,"targetString":"useRef"},{"text":"import useEffect","docs":"","start":98,"length":9,"line":3,"character":2,"targetString":"useEffect"},{"text":"const ref: any","docs":"","start":120,"length":3,"line":4,"character":4,"targetString":"ref"},{"text":"(parameter) value: any","docs":"","start":134,"length":5,"line":4,"character":18,"targetString":"value"},{"text":"(parameter) value: any","docs":"","start":146,"length":5,"line":5,"character":6,"targetString":"value"},{"text":"const ref: any","docs":"","start":163,"length":3,"line":6,"character":9,"targetString":"ref"}]],"/blog/React原理/ref转发":[[{"text":"const Input: () => any","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"Input"},{"text":"const ref: any","docs":"","start":30,"length":3,"line":1,"character":8,"targetString":"ref"},{"text":"const ref: any","docs":"","start":70,"length":3,"line":4,"character":4,"targetString":"ref"},{"text":"(JSX attribute) ref: any","docs":"","start":119,"length":3,"line":7,"character":16,"targetString":"ref"},{"text":"const ref: any","docs":"","start":124,"length":3,"line":7,"character":21,"targetString":"ref"}],[{"text":"const Form: () => any","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"Form"},{"text":"const parentRef: any","docs":"","start":29,"length":9,"line":1,"character":8,"targetString":"parentRef"},{"text":"(JSX attribute) ref: any","docs":"","start":85,"length":3,"line":4,"character":13,"targetString":"ref"},{"text":"const parentRef: any","docs":"","start":90,"length":9,"line":4,"character":18,"targetString":"parentRef"}],[{"text":"const Input: any","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"Input"},{"text":"(parameter) props: any","docs":"","start":32,"length":5,"line":0,"character":32,"targetString":"props"},{"text":"(parameter) parentRef: any","docs":"","start":39,"length":9,"line":0,"character":39,"targetString":"parentRef"},{"text":"const ref: any","docs":"","start":63,"length":3,"line":1,"character":8,"targetString":"ref"},{"text":"const ref: any","docs":"","start":103,"length":3,"line":4,"character":4,"targetString":"ref"},{"text":"(JSX attribute) ref: any","docs":"","start":152,"length":3,"line":7,"character":16,"targetString":"ref"},{"text":"const ref: any","docs":"","start":157,"length":3,"line":7,"character":21,"targetString":"ref"}],[{"text":"const Input: any","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"Input"},{"text":"(parameter) props: any","docs":"","start":32,"length":5,"line":0,"character":32,"targetString":"props"},{"text":"(parameter) parentRef: any","docs":"","start":39,"length":9,"line":0,"character":39,"targetString":"parentRef"},{"text":"const ref: any","docs":"","start":63,"length":3,"line":1,"character":8,"targetString":"ref"},{"text":"const ref: any","docs":"","start":103,"length":3,"line":4,"character":4,"targetString":"ref"},{"text":"(parameter) parentRef: any","docs":"","start":158,"length":9,"line":7,"character":22,"targetString":"parentRef"},{"text":"(property) blur: () => any","docs":"","start":182,"length":4,"line":8,"character":4,"targetString":"blur"},{"text":"const ref: any","docs":"","start":194,"length":3,"line":8,"character":16,"targetString":"ref"},{"text":"(JSX attribute) ref: any","docs":"","start":236,"length":3,"line":11,"character":16,"targetString":"ref"},{"text":"const ref: any","docs":"","start":241,"length":3,"line":11,"character":21,"targetString":"ref"}]],"/blog/React原理/useEffect的deps规则":[[{"text":"const useEffect: (create: any, deps?: readonly any[] | undefined) => void","docs":"","start":6,"length":9,"line":0,"character":6,"targetString":"useEffect"},{"text":"(parameter) create: any","docs":"","start":19,"length":6,"line":0,"character":19,"targetString":"create"},{"text":"(parameter) deps: readonly any[] | undefined","docs":"","start":35,"length":4,"line":0,"character":35,"targetString":"deps"},{"text":"const fiber: any","docs":"","start":71,"length":5,"line":1,"character":8,"targetString":"fiber"},{"text":"const effect: any","docs":"","start":114,"length":6,"line":2,"character":8,"targetString":"effect"},{"text":"const fiber: any","docs":"","start":123,"length":5,"line":2,"character":17,"targetString":"fiber"},{"text":"const prevDepsRef: any","docs":"","start":174,"length":11,"line":4,"character":8,"targetString":"prevDepsRef"},{"text":"(parameter) deps: readonly any[] | undefined","docs":"","start":207,"length":4,"line":5,"character":6,"targetString":"deps"},{"text":"const areHookInputsEqual: (nextDeps: readonly any[], prevDeps: readonly any[] | null) => boolean","docs":"","start":215,"length":18,"line":5,"character":14,"targetString":"areHookInputsEqual"},{"text":"(parameter) deps: readonly any[]","docs":"","start":234,"length":4,"line":5,"character":33,"targetString":"deps"},{"text":"const prevDepsRef: any","docs":"","start":240,"length":11,"line":5,"character":39,"targetString":"prevDepsRef"},{"text":"const prevDepsRef: any","docs":"","start":290,"length":11,"line":8,"character":4,"targetString":"prevDepsRef"},{"text":"(parameter) deps: readonly any[] | undefined","docs":"","start":312,"length":4,"line":8,"character":26,"targetString":"deps"},{"text":"const fiber: any","docs":"","start":321,"length":5,"line":9,"character":4,"targetString":"fiber"},{"text":"const effect: any","docs":"","start":354,"length":6,"line":9,"character":37,"targetString":"effect"},{"text":"(parameter) create: any","docs":"","start":362,"length":6,"line":9,"character":45,"targetString":"create"},{"text":"const areHookInputsEqual: (nextDeps: readonly any[], prevDeps: readonly any[] | null) => boolean","docs":"","start":391,"length":18,"line":14,"character":6,"targetString":"areHookInputsEqual"},{"text":"(parameter) nextDeps: readonly any[]","docs":"","start":416,"length":8,"line":15,"character":2,"targetString":"nextDeps"},{"text":"(parameter) prevDeps: readonly any[] | null","docs":"","start":444,"length":8,"line":16,"character":2,"targetString":"prevDeps"},{"text":"(parameter) prevDeps: readonly any[] | null","docs":"","start":489,"length":8,"line":18,"character":6,"targetString":"prevDeps"},{"text":"let i: number","docs":"","start":542,"length":1,"line":21,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":549,"length":1,"line":21,"character":18,"targetString":"i"},{"text":"(parameter) prevDeps: readonly any[]","docs":"","start":553,"length":8,"line":21,"character":22,"targetString":"prevDeps"},{"text":"(property) ReadonlyArray<any>.length: number","docs":"Gets the length of the array. This is a number one higher than the highest element defined in an array.","start":562,"length":6,"line":21,"character":31,"targetString":"length"},{"text":"let i: number","docs":"","start":572,"length":1,"line":21,"character":41,"targetString":"i"},{"text":"(parameter) nextDeps: readonly any[]","docs":"","start":576,"length":8,"line":21,"character":45,"targetString":"nextDeps"},{"text":"(property) ReadonlyArray<any>.length: number","docs":"Gets the length of the array. This is a number one higher than the highest element defined in an array.","start":585,"length":6,"line":21,"character":54,"targetString":"length"},{"text":"let i: number","docs":"","start":593,"length":1,"line":21,"character":62,"targetString":"i"},{"text":"(parameter) nextDeps: readonly any[]","docs":"","start":637,"length":8,"line":23,"character":11,"targetString":"nextDeps"},{"text":"let i: number","docs":"","start":646,"length":1,"line":23,"character":20,"targetString":"i"},{"text":"(parameter) prevDeps: readonly any[]","docs":"","start":650,"length":8,"line":23,"character":24,"targetString":"prevDeps"},{"text":"let i: number","docs":"","start":659,"length":1,"line":23,"character":33,"targetString":"i"}],[{"text":"const state: any","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"state"},{"text":"const setState: any","docs":"","start":14,"length":8,"line":0,"character":14,"targetString":"setState"},{"text":"const obj: {\n    id: number;\n}","docs":"","start":86,"length":3,"line":2,"character":6,"targetString":"obj"},{"text":"(property) id: number","docs":"","start":94,"length":2,"line":2,"character":14,"targetString":"id"},{"text":"const setState: any","docs":"","start":123,"length":8,"line":5,"character":2,"targetString":"setState"},{"text":"const state: any","docs":"","start":132,"length":5,"line":5,"character":11,"targetString":"state"},{"text":"const obj: {\n    id: number;\n}","docs":"","start":147,"length":3,"line":6,"character":4,"targetString":"obj"}],[{"text":"const obj: any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"obj"},{"text":"(property) id: number","docs":"","start":29,"length":2,"line":0,"character":29,"targetString":"id"},{"text":"const state: any","docs":"","start":87,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: any","docs":"","start":94,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"const setState: any","docs":"","start":139,"length":8,"line":5,"character":2,"targetString":"setState"},{"text":"const state: any","docs":"","start":148,"length":5,"line":5,"character":11,"targetString":"state"},{"text":"const obj: any","docs":"","start":163,"length":3,"line":6,"character":4,"targetString":"obj"}]],"/blog/React原理/useState使用props初始化的注意点":[[{"text":"interface Avatar","docs":"","start":17,"length":6,"line":0,"character":17,"targetString":"Avatar"},{"text":"(property) Avatar.pendingSrc?: Promise<string> | undefined","docs":"","start":48,"length":10,"line":1,"character":2,"targetString":"pendingSrc"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":61,"length":7,"line":1,"character":15,"targetString":"Promise"},{"text":"const Avatar: ({ src, pendingSrc, ...props }: Avatar) => any","docs":"","start":93,"length":6,"line":4,"character":13,"targetString":"Avatar"},{"text":"var src: any","docs":"","start":105,"length":3,"line":4,"character":25,"targetString":"src"},{"text":"var pendingSrc: Promise<string> | undefined","docs":"","start":110,"length":10,"line":4,"character":30,"targetString":"pendingSrc"},{"text":"var props: {}","docs":"","start":125,"length":5,"line":4,"character":45,"targetString":"props"},{"text":"interface Avatar","docs":"","start":134,"length":6,"line":4,"character":54,"targetString":"Avatar"},{"text":"const display: any","docs":"","start":156,"length":7,"line":5,"character":9,"targetString":"display"},{"text":"const setDisplay: any","docs":"","start":165,"length":10,"line":5,"character":18,"targetString":"setDisplay"},{"text":"var src: any","docs":"","start":188,"length":3,"line":5,"character":41,"targetString":"src"},{"text":"var pendingSrc: Promise<string> | undefined","docs":"","start":222,"length":10,"line":8,"character":8,"targetString":"pendingSrc"},{"text":"var pendingSrc: Promise<string>","docs":"","start":242,"length":10,"line":9,"character":6,"targetString":"pendingSrc"},{"text":"(method) Promise<string>.then<string, never>(onfulfilled?: ((value: string) => string | PromiseLike<string>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":253,"length":4,"line":9,"character":17,"targetString":"then"},{"text":"const setDisplay: any","docs":"","start":258,"length":10,"line":9,"character":22,"targetString":"setDisplay"},{"text":"var pendingSrc: Promise<string> | undefined","docs":"","start":282,"length":10,"line":11,"character":6,"targetString":"pendingSrc"},{"text":"var props: {}","docs":"","start":321,"length":5,"line":13,"character":25,"targetString":"props"},{"text":"(JSX attribute) src: any","docs":"","start":328,"length":3,"line":13,"character":32,"targetString":"src"},{"text":"const display: any","docs":"","start":333,"length":7,"line":13,"character":37,"targetString":"display"}],[{"text":"(JSX attribute) src: string","docs":"","start":8,"length":3,"line":0,"character":8,"targetString":"src"},{"text":"(JSX attribute) pendingSrc: any","docs":"","start":37,"length":10,"line":1,"character":8,"targetString":"pendingSrc"}],[{"text":"const src: any","docs":"","start":7,"length":3,"line":0,"character":7,"targetString":"src"},{"text":"const setState: any","docs":"","start":12,"length":8,"line":0,"character":12,"targetString":"setState"},{"text":"const setState: any","docs":"","start":68,"length":8,"line":3,"character":2,"targetString":"setState"},{"text":"const src: any","docs":"","start":108,"length":3,"line":6,"character":8,"targetString":"src"},{"text":"(property) src: any","docs":"","start":113,"length":3,"line":6,"character":13,"targetString":"src"}],[{"text":"const Avatar: ({ src, pendingSrc, ...props }: any) => any","docs":"","start":13,"length":6,"line":0,"character":13,"targetString":"Avatar"},{"text":"var src: any","docs":"","start":25,"length":3,"line":0,"character":25,"targetString":"src"},{"text":"var pendingSrc: any","docs":"","start":30,"length":10,"line":0,"character":30,"targetString":"pendingSrc"},{"text":"var props: any","docs":"","start":45,"length":5,"line":0,"character":45,"targetString":"props"},{"text":"const display: any","docs":"","start":76,"length":7,"line":1,"character":9,"targetString":"display"},{"text":"const setDisplay: any","docs":"","start":85,"length":10,"line":1,"character":18,"targetString":"setDisplay"},{"text":"var src: any","docs":"","start":108,"length":3,"line":1,"character":41,"targetString":"src"},{"text":"var pendingSrc: any","docs":"","start":142,"length":10,"line":4,"character":8,"targetString":"pendingSrc"},{"text":"var pendingSrc: any","docs":"","start":162,"length":10,"line":5,"character":6,"targetString":"pendingSrc"},{"text":"const setDisplay: any","docs":"","start":178,"length":10,"line":5,"character":22,"targetString":"setDisplay"},{"text":"var pendingSrc: any","docs":"","start":202,"length":10,"line":7,"character":6,"targetString":"pendingSrc"},{"text":"const setDisplay: any","docs":"","start":240,"length":10,"line":10,"character":4,"targetString":"setDisplay"},{"text":"var src: any","docs":"","start":251,"length":3,"line":10,"character":15,"targetString":"src"},{"text":"var src: any","docs":"","start":262,"length":3,"line":11,"character":6,"targetString":"src"},{"text":"var props: any","docs":"","start":294,"length":5,"line":13,"character":25,"targetString":"props"},{"text":"(JSX attribute) src: any","docs":"","start":301,"length":3,"line":13,"character":32,"targetString":"src"},{"text":"const display: any","docs":"","start":306,"length":7,"line":13,"character":37,"targetString":"display"}]],"/blog/React原理/事件冒泡与Portals":[[{"text":"var document: Document","docs":"","start":44,"length":8,"line":1,"character":35,"targetString":"document"},{"text":"(method) Document.getElementById(elementId: string): HTMLElement | null","docs":"Returns a reference to the first object with the specified value of the ID attribute.","start":53,"length":14,"line":1,"character":44,"targetString":"getElementById"}],[{"text":"var document: Document","docs":"","start":32,"length":8,"line":0,"character":32,"targetString":"document"},{"text":"(method) Document.getElementById(elementId: string): HTMLElement | null","docs":"Returns a reference to the first object with the specified value of the ID attribute.","start":41,"length":14,"line":0,"character":41,"targetString":"getElementById"},{"text":"var document: Document","docs":"","start":93,"length":8,"line":2,"character":26,"targetString":"document"},{"text":"(method) Document.getElementById(elementId: string): HTMLElement | null","docs":"Returns a reference to the first object with the specified value of the ID attribute.","start":102,"length":14,"line":2,"character":35,"targetString":"getElementById"}],[{"text":"function createPortal(children: any, containerInfo: any, key?: string | undefined): any","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"createPortal"},{"text":"(parameter) children: any","docs":"","start":25,"length":8,"line":1,"character":2,"targetString":"children"},{"text":"(parameter) containerInfo: any","docs":"","start":52,"length":13,"line":2,"character":2,"targetString":"containerInfo"},{"text":"(parameter) key: string | undefined","docs":"","start":83,"length":3,"line":3,"character":2,"targetString":"key"},{"text":"(property) $$typeof: any","docs":"","start":133,"length":8,"line":6,"character":4,"targetString":"$$typeof"},{"text":"(property) key: string | null","docs":"","start":166,"length":3,"line":7,"character":4,"targetString":"key"},{"text":"(parameter) key: string","docs":"","start":171,"length":3,"line":7,"character":9,"targetString":"key"},{"text":"(parameter) key: string","docs":"","start":197,"length":3,"line":7,"character":35,"targetString":"key"},{"text":"(property) children: any","docs":"","start":206,"length":8,"line":8,"character":4,"targetString":"children"},{"text":"(property) containerInfo: any","docs":"","start":220,"length":13,"line":9,"character":4,"targetString":"containerInfo"}],[{"text":"const ReactDOM: {\n    render(element: any, container: any): void;\n}","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"ReactDOM"},{"text":"(method) render(element: any, container: any): void","docs":"","start":21,"length":6,"line":1,"character":2,"targetString":"render"},{"text":"(parameter) element: any","docs":"","start":28,"length":7,"line":1,"character":9,"targetString":"element"},{"text":"(parameter) container: any","docs":"","start":57,"length":9,"line":1,"character":38,"targetString":"container"},{"text":"let root: any","docs":"","start":142,"length":4,"line":3,"character":8,"targetString":"root"},{"text":"(parameter) container: any","docs":"","start":165,"length":9,"line":3,"character":31,"targetString":"container"},{"text":"let fiberRoot: any","docs":"","start":203,"length":9,"line":4,"character":8,"targetString":"fiberRoot"},{"text":"let root: any","docs":"","start":222,"length":4,"line":5,"character":9,"targetString":"root"},{"text":"let root: any","docs":"","start":250,"length":4,"line":7,"character":6,"targetString":"root"},{"text":"(parameter) container: any","docs":"","start":257,"length":9,"line":7,"character":13,"targetString":"container"},{"text":"(parameter) container: any","docs":"","start":331,"length":9,"line":8,"character":8,"targetString":"container"},{"text":"let fiberRoot: any","docs":"","start":370,"length":9,"line":11,"character":6,"targetString":"fiberRoot"},{"text":"let root: any","docs":"","start":382,"length":4,"line":11,"character":18,"targetString":"root"},{"text":"let fiberRoot: any","docs":"","start":470,"length":9,"line":13,"character":55,"targetString":"fiberRoot"},{"text":"let fiberRoot: any","docs":"","start":603,"length":9,"line":17,"character":6,"targetString":"fiberRoot"},{"text":"let root: any","docs":"","start":615,"length":4,"line":17,"character":18,"targetString":"root"},{"text":"let fiberRoot: any","docs":"","start":666,"length":9,"line":18,"character":32,"targetString":"fiberRoot"}]],"/blog/React原理/组件通信":[[{"text":"const Parent: () => any","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"Parent"},{"text":"const state: any","docs":"","start":32,"length":5,"line":1,"character":9,"targetString":"state"},{"text":"const setState: any","docs":"","start":39,"length":8,"line":1,"character":16,"targetString":"setState"},{"text":"const Child: ({ update }: {\n    update: any;\n}) => any","docs":"","start":73,"length":5,"line":2,"character":10,"targetString":"Child"},{"text":"(JSX attribute) update: any","docs":"","start":79,"length":6,"line":2,"character":16,"targetString":"update"},{"text":"const setState: any","docs":"","start":87,"length":8,"line":2,"character":24,"targetString":"setState"},{"text":"const Child: ({ update }: {\n    update: any;\n}) => any","docs":"","start":109,"length":5,"line":5,"character":6,"targetString":"Child"},{"text":"var update: any","docs":"","start":120,"length":6,"line":5,"character":17,"targetString":"update"},{"text":"(JSX attribute) onClick: () => any","docs":"","start":145,"length":7,"line":6,"character":10,"targetString":"onClick"},{"text":"var update: any","docs":"","start":160,"length":6,"line":6,"character":25,"targetString":"update"}],[{"text":"const Context: any","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"Context"},{"text":"const Parent: () => any","docs":"","start":45,"length":6,"line":2,"character":6,"targetString":"Parent"},{"text":"const state: any","docs":"","start":71,"length":5,"line":3,"character":9,"targetString":"state"},{"text":"const setState: any","docs":"","start":78,"length":8,"line":3,"character":16,"targetString":"setState"},{"text":"const Context: any","docs":"","start":118,"length":7,"line":5,"character":5,"targetString":"Context"},{"text":"(JSX attribute) value: {\n    update: any;\n}","docs":"","start":135,"length":5,"line":5,"character":22,"targetString":"value"},{"text":"(property) update: any","docs":"","start":144,"length":6,"line":5,"character":31,"targetString":"update"},{"text":"const setState: any","docs":"","start":152,"length":8,"line":5,"character":39,"targetString":"setState"},{"text":"const Child: () => any","docs":"","start":172,"length":5,"line":6,"character":7,"targetString":"Child"},{"text":"const Context: any","docs":"","start":187,"length":7,"line":7,"character":6,"targetString":"Context"},{"text":"const Child: () => any","docs":"","start":218,"length":5,"line":11,"character":6,"targetString":"Child"},{"text":"const Context: any","docs":"","start":237,"length":7,"line":12,"character":3,"targetString":"Context"},{"text":"var update: any","docs":"","start":263,"length":6,"line":13,"character":8,"targetString":"update"},{"text":"(JSX attribute) onClick: () => any","docs":"","start":284,"length":7,"line":13,"character":29,"targetString":"onClick"},{"text":"var update: any","docs":"","start":299,"length":6,"line":13,"character":44,"targetString":"update"},{"text":"const Context: any","docs":"","start":333,"length":7,"line":14,"character":4,"targetString":"Context"}],[{"text":"const Context: any","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"Context"},{"text":"const Parent: () => any","docs":"","start":45,"length":6,"line":2,"character":6,"targetString":"Parent"},{"text":"const state: any","docs":"","start":71,"length":5,"line":3,"character":9,"targetString":"state"},{"text":"const setState: any","docs":"","start":78,"length":8,"line":3,"character":16,"targetString":"setState"},{"text":"const context: any","docs":"","start":110,"length":7,"line":4,"character":8,"targetString":"context"},{"text":"const Context: any","docs":"","start":131,"length":7,"line":4,"character":29,"targetString":"Context"},{"text":"const context: any","docs":"","start":142,"length":7,"line":5,"character":2,"targetString":"context"},{"text":"const setState: any","docs":"","start":159,"length":8,"line":5,"character":19,"targetString":"setState"},{"text":"const Child: () => any","docs":"","start":178,"length":5,"line":6,"character":10,"targetString":"Child"},{"text":"const Child: () => any","docs":"","start":196,"length":5,"line":9,"character":6,"targetString":"Child"},{"text":"const update: any","docs":"","start":222,"length":6,"line":10,"character":10,"targetString":"update"},{"text":"const Context: any","docs":"","start":244,"length":7,"line":10,"character":32,"targetString":"Context"},{"text":"(JSX attribute) onClick: () => any","docs":"","start":270,"length":7,"line":11,"character":17,"targetString":"onClick"},{"text":"const update: any","docs":"","start":285,"length":6,"line":11,"character":32,"targetString":"update"}],[{"text":"const Parent: () => any","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"Parent"},{"text":"const ref: any","docs":"","start":31,"length":3,"line":1,"character":8,"targetString":"ref"},{"text":"const ref: any","docs":"","start":71,"length":3,"line":4,"character":4,"targetString":"ref"},{"text":"const Child: any","docs":"","start":111,"length":5,"line":7,"character":10,"targetString":"Child"},{"text":"(JSX attribute) ref: any","docs":"","start":117,"length":3,"line":7,"character":16,"targetString":"ref"},{"text":"const ref: any","docs":"","start":122,"length":3,"line":7,"character":21,"targetString":"ref"},{"text":"const Child: any","docs":"","start":139,"length":5,"line":10,"character":6,"targetString":"Child"},{"text":"(parameter) props: any","docs":"","start":162,"length":5,"line":10,"character":29,"targetString":"props"},{"text":"(parameter) ref: any","docs":"","start":169,"length":3,"line":10,"character":36,"targetString":"ref"},{"text":"const state: any","docs":"","start":188,"length":5,"line":11,"character":9,"targetString":"state"},{"text":"const setState: any","docs":"","start":195,"length":8,"line":11,"character":16,"targetString":"setState"},{"text":"(parameter) ref: any","docs":"","start":242,"length":3,"line":13,"character":22,"targetString":"ref"},{"text":"(property) update: any","docs":"","start":260,"length":6,"line":14,"character":4,"targetString":"update"},{"text":"const setState: any","docs":"","start":268,"length":8,"line":14,"character":12,"targetString":"setState"},{"text":"const state: any","docs":"","start":297,"length":5,"line":17,"character":13,"targetString":"state"}],[{"text":"const Parent: () => any","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"Parent"},{"text":"const state: any","docs":"","start":32,"length":5,"line":1,"character":9,"targetString":"state"},{"text":"const setState: any","docs":"","start":39,"length":8,"line":1,"character":16,"targetString":"setState"},{"text":"const Child1: ({ update }: {\n    update: any;\n}) => any","docs":"","start":88,"length":6,"line":4,"character":7,"targetString":"Child1"},{"text":"(JSX attribute) update: any","docs":"","start":95,"length":6,"line":4,"character":14,"targetString":"update"},{"text":"const setState: any","docs":"","start":103,"length":8,"line":4,"character":22,"targetString":"setState"},{"text":"const Child2: ({ state }: {\n    state: any;\n}) => any","docs":"","start":123,"length":6,"line":5,"character":7,"targetString":"Child2"},{"text":"(JSX attribute) state: any","docs":"","start":130,"length":5,"line":5,"character":14,"targetString":"state"},{"text":"const state: any","docs":"","start":137,"length":5,"line":5,"character":21,"targetString":"state"},{"text":"const Child1: ({ update }: {\n    update: any;\n}) => any","docs":"","start":168,"length":6,"line":10,"character":6,"targetString":"Child1"},{"text":"var update: any","docs":"","start":180,"length":6,"line":10,"character":18,"targetString":"update"},{"text":"(JSX attribute) onClick: () => any","docs":"","start":205,"length":7,"line":11,"character":10,"targetString":"onClick"},{"text":"var update: any","docs":"","start":220,"length":6,"line":11,"character":25,"targetString":"update"},{"text":"const Child2: ({ state }: {\n    state: any;\n}) => any","docs":"","start":265,"length":6,"line":14,"character":6,"targetString":"Child2"},{"text":"var state: any","docs":"","start":277,"length":5,"line":14,"character":18,"targetString":"state"},{"text":"var state: any","docs":"","start":293,"length":5,"line":14,"character":34,"targetString":"state"}]],"/blog/React原理/遍历Fiber链表":[[{"text":"type Fiber = any","docs":"","start":5,"length":5,"line":0,"character":5,"targetString":"Fiber"},{"text":"let workInProgress: any","docs":"","start":39,"length":14,"line":3,"character":4,"targetString":"workInProgress"},{"text":"type Fiber = any","docs":"","start":55,"length":5,"line":3,"character":20,"targetString":"Fiber"},{"text":"let pendingCommit: any","docs":"","start":72,"length":13,"line":4,"character":4,"targetString":"pendingCommit"},{"text":"type Fiber = any","docs":"","start":87,"length":5,"line":4,"character":19,"targetString":"Fiber"},{"text":"function beginWork(fiber: Fiber): any","docs":"","start":217,"length":9,"line":8,"character":9,"targetString":"beginWork"},{"text":"(parameter) fiber: any","docs":"","start":227,"length":5,"line":8,"character":19,"targetString":"fiber"},{"text":"type Fiber = any","docs":"","start":234,"length":5,"line":8,"character":26,"targetString":"Fiber"},{"text":"(parameter) fiber: any","docs":"","start":252,"length":5,"line":9,"character":9,"targetString":"fiber"},{"text":"function performUnitOfWork(fiber: Fiber, top: Fiber): any","docs":"","start":276,"length":17,"line":12,"character":9,"targetString":"performUnitOfWork"},{"text":"(parameter) fiber: any","docs":"","start":294,"length":5,"line":12,"character":27,"targetString":"fiber"},{"text":"type Fiber = any","docs":"","start":301,"length":5,"line":12,"character":34,"targetString":"Fiber"},{"text":"(parameter) top: any","docs":"","start":308,"length":3,"line":12,"character":41,"targetString":"top"},{"text":"type Fiber = any","docs":"","start":313,"length":5,"line":12,"character":46,"targetString":"Fiber"},{"text":"const next: any","docs":"","start":330,"length":4,"line":13,"character":8,"targetString":"next"},{"text":"function beginWork(fiber: any): any","docs":"","start":337,"length":9,"line":13,"character":15,"targetString":"beginWork"},{"text":"(parameter) fiber: any","docs":"","start":347,"length":5,"line":13,"character":25,"targetString":"fiber"},{"text":"const next: any","docs":"","start":360,"length":4,"line":14,"character":6,"targetString":"next"},{"text":"const next: any","docs":"","start":373,"length":4,"line":14,"character":19,"targetString":"next"},{"text":"let current: any","docs":"","start":384,"length":7,"line":15,"character":6,"targetString":"current"},{"text":"(parameter) fiber: any","docs":"","start":394,"length":5,"line":15,"character":16,"targetString":"fiber"},{"text":"let current: any","docs":"","start":409,"length":7,"line":16,"character":9,"targetString":"current"},{"text":"let current: any","docs":"","start":428,"length":7,"line":17,"character":8,"targetString":"current"},{"text":"(parameter) top: any","docs":"","start":440,"length":3,"line":17,"character":20,"targetString":"top"},{"text":"let current: any","docs":"","start":452,"length":7,"line":17,"character":32,"targetString":"current"},{"text":"let completeWork: (root: any, top: any) => void","docs":"","start":464,"length":12,"line":18,"character":4,"targetString":"completeWork"},{"text":"let current: any","docs":"","start":477,"length":7,"line":18,"character":17,"targetString":"current"},{"text":"(parameter) top: any","docs":"","start":486,"length":3,"line":18,"character":26,"targetString":"top"},{"text":"let current: any","docs":"","start":499,"length":7,"line":19,"character":8,"targetString":"current"},{"text":"let current: any","docs":"","start":523,"length":7,"line":19,"character":32,"targetString":"current"},{"text":"let current: any","docs":"","start":543,"length":7,"line":20,"character":4,"targetString":"current"},{"text":"let current: any","docs":"","start":553,"length":7,"line":20,"character":14,"targetString":"current"},{"text":"function createWorkInProgress(fiber: Fiber): any","docs":"","start":584,"length":20,"line":24,"character":9,"targetString":"createWorkInProgress"},{"text":"(parameter) fiber: any","docs":"","start":605,"length":5,"line":24,"character":30,"targetString":"fiber"},{"text":"type Fiber = any","docs":"","start":612,"length":5,"line":24,"character":37,"targetString":"Fiber"},{"text":"let workInProgress: any","docs":"","start":623,"length":14,"line":25,"character":2,"targetString":"workInProgress"},{"text":"(parameter) fiber: any","docs":"","start":640,"length":5,"line":25,"character":19,"targetString":"fiber"},{"text":"let workInProgress: any","docs":"","start":655,"length":14,"line":26,"character":9,"targetString":"workInProgress"},{"text":"function renderRoot(root: Fiber): void","docs":"","start":682,"length":10,"line":29,"character":9,"targetString":"renderRoot"},{"text":"(parameter) root: any","docs":"","start":693,"length":4,"line":29,"character":20,"targetString":"root"},{"text":"type Fiber = any","docs":"","start":699,"length":5,"line":29,"character":26,"targetString":"Fiber"},{"text":"let workInProgress: any","docs":"","start":715,"length":14,"line":30,"character":7,"targetString":"workInProgress"},{"text":"let workInProgress: any","docs":"","start":731,"length":14,"line":30,"character":23,"targetString":"workInProgress"},{"text":"function createWorkInProgress(fiber: any): any","docs":"","start":748,"length":20,"line":30,"character":40,"targetString":"createWorkInProgress"},{"text":"(parameter) root: any","docs":"","start":769,"length":4,"line":30,"character":61,"targetString":"root"},{"text":"let workInProgress: any","docs":"","start":784,"length":14,"line":31,"character":9,"targetString":"workInProgress"},{"text":"let workInProgress: any","docs":"","start":806,"length":14,"line":32,"character":4,"targetString":"workInProgress"},{"text":"function performUnitOfWork(fiber: any, top: any): any","docs":"","start":823,"length":17,"line":32,"character":21,"targetString":"performUnitOfWork"},{"text":"let workInProgress: any","docs":"","start":841,"length":14,"line":32,"character":39,"targetString":"workInProgress"},{"text":"(parameter) root: any","docs":"","start":857,"length":4,"line":32,"character":55,"targetString":"root"},{"text":"let workInProgress: any","docs":"","start":871,"length":14,"line":33,"character":8,"targetString":"workInProgress"},{"text":"(parameter) root: any","docs":"","start":890,"length":4,"line":33,"character":27,"targetString":"root"},{"text":"let pendingCommit: any","docs":"","start":913,"length":13,"line":36,"character":6,"targetString":"pendingCommit"},{"text":"function commitWork(fiber: any): void","docs":"","start":934,"length":10,"line":37,"character":4,"targetString":"commitWork"},{"text":"let pendingCommit: any","docs":"","start":945,"length":13,"line":37,"character":15,"targetString":"pendingCommit"},{"text":"let workInProgress: any","docs":"","start":964,"length":14,"line":38,"character":4,"targetString":"workInProgress"},{"text":"let pendingCommit: any","docs":"","start":990,"length":13,"line":39,"character":4,"targetString":"pendingCommit"},{"text":"function commitWork(fiber: Fiber): void","docs":"","start":1027,"length":10,"line":43,"character":9,"targetString":"commitWork"},{"text":"(parameter) fiber: any","docs":"","start":1038,"length":5,"line":43,"character":20,"targetString":"fiber"},{"text":"type Fiber = any","docs":"","start":1045,"length":5,"line":43,"character":27,"targetString":"Fiber"},{"text":"let completeWork: (root: Fiber, top: Fiber) => void","docs":"","start":1092,"length":12,"line":46,"character":4,"targetString":"completeWork"},{"text":"(parameter) root: any","docs":"","start":1108,"length":4,"line":46,"character":20,"targetString":"root"},{"text":"type Fiber = any","docs":"","start":1114,"length":5,"line":46,"character":26,"targetString":"Fiber"},{"text":"(parameter) top: any","docs":"","start":1121,"length":3,"line":46,"character":33,"targetString":"top"},{"text":"type Fiber = any","docs":"","start":1126,"length":5,"line":46,"character":38,"targetString":"Fiber"},{"text":"const traverse: (fiber: Fiber, callback: (fiber: Fiber) => void) => void","docs":"","start":1153,"length":8,"line":48,"character":13,"targetString":"traverse"},{"text":"(parameter) fiber: any","docs":"","start":1165,"length":5,"line":48,"character":25,"targetString":"fiber"},{"text":"type Fiber = any","docs":"","start":1172,"length":5,"line":48,"character":32,"targetString":"Fiber"},{"text":"(parameter) callback: (fiber: Fiber) => void","docs":"","start":1179,"length":8,"line":48,"character":39,"targetString":"callback"},{"text":"(parameter) fiber: any","docs":"","start":1190,"length":5,"line":48,"character":50,"targetString":"fiber"},{"text":"type Fiber = any","docs":"","start":1197,"length":5,"line":48,"character":57,"targetString":"Fiber"},{"text":"(parameter) fiber: any","docs":"","start":1225,"length":5,"line":49,"character":7,"targetString":"fiber"},{"text":"(parameter) fiber: any","docs":"","start":1245,"length":5,"line":50,"character":6,"targetString":"fiber"},{"text":"(parameter) fiber: any","docs":"","start":1265,"length":5,"line":51,"character":4,"targetString":"fiber"},{"text":"(parameter) fiber: any","docs":"","start":1273,"length":5,"line":51,"character":12,"targetString":"fiber"},{"text":"let completeWork: (root: Fiber, top: Fiber) => void","docs":"","start":1292,"length":12,"line":53,"character":2,"targetString":"completeWork"},{"text":"(parameter) root: any","docs":"","start":1308,"length":4,"line":53,"character":18,"targetString":"root"},{"text":"(parameter) top: any","docs":"","start":1314,"length":3,"line":53,"character":24,"targetString":"top"},{"text":"(parameter) callback: (fiber: Fiber) => void","docs":"","start":1322,"length":8,"line":53,"character":32,"targetString":"callback"},{"text":"(parameter) root: any","docs":"","start":1331,"length":4,"line":53,"character":41,"targetString":"root"},{"text":"function renderRoot(root: Fiber): void","docs":"","start":1339,"length":10,"line":54,"character":2,"targetString":"renderRoot"},{"text":"(parameter) fiber: any","docs":"","start":1350,"length":5,"line":54,"character":13,"targetString":"fiber"}]],"/blog/React常用组件/Async Hook组件":[[{"text":"const Uv: () => any","docs":"","start":6,"length":2,"line":0,"character":6,"targetString":"Uv"},{"text":"const site_uv: any","docs":"","start":28,"length":7,"line":1,"character":9,"targetString":"site_uv"},{"text":"const setState: any","docs":"","start":37,"length":8,"line":1,"character":18,"targetString":"setState"},{"text":"var site_uv: any","docs":"","start":104,"length":7,"line":4,"character":22,"targetString":"site_uv"},{"text":"const setState: any","docs":"","start":118,"length":8,"line":4,"character":36,"targetString":"setState"},{"text":"var site_uv: any","docs":"","start":127,"length":7,"line":4,"character":45,"targetString":"site_uv"},{"text":"const site_uv: any","docs":"","start":165,"length":7,"line":7,"character":18,"targetString":"site_uv"}],[{"text":"const useAsync: any","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"useAsync"}],[{"text":"const Uv: () => any","docs":"","start":13,"length":2,"line":0,"character":13,"targetString":"Uv"},{"text":"const site_uv: any","docs":"","start":36,"length":7,"line":1,"character":10,"targetString":"site_uv"},{"text":"(property) site_uv: number","docs":"","start":68,"length":7,"line":1,"character":42,"targetString":"site_uv"},{"text":"const site_uv: any","docs":"","start":100,"length":7,"line":2,"character":18,"targetString":"site_uv"}]],"/blog/React常用组件/ErrorBoundary异常处理组件":[[{"text":"type ErrorInfo = {\n    componentStack: string;\n}","docs":"","start":12,"length":9,"line":0,"character":12,"targetString":"ErrorInfo"},{"text":"(property) componentStack: string","docs":"","start":26,"length":14,"line":0,"character":26,"targetString":"componentStack"},{"text":"type Error = {\n    message?: string | undefined;\n    stack?: string | undefined;\n}","docs":"","start":63,"length":5,"line":1,"character":12,"targetString":"Error"},{"text":"(property) message?: string | undefined","docs":"","start":73,"length":7,"line":1,"character":22,"targetString":"message"},{"text":"(property) stack?: string | undefined","docs":"","start":91,"length":5,"line":1,"character":40,"targetString":"stack"},{"text":"class ErrorBoundary","docs":"","start":122,"length":13,"line":3,"character":13,"targetString":"ErrorBoundary"},{"text":"(property) hasError: boolean","docs":"","start":171,"length":8,"line":5,"character":4,"targetString":"hasError"},{"text":"(property) error?: Error | undefined","docs":"","start":190,"length":5,"line":5,"character":23,"targetString":"error"},{"text":"type Error = {\n    message?: string | undefined;\n    stack?: string | undefined;\n}","docs":"","start":198,"length":5,"line":5,"character":31,"targetString":"Error"},{"text":"(property) info?: ErrorInfo | undefined","docs":"","start":205,"length":4,"line":5,"character":38,"targetString":"info"},{"text":"type ErrorInfo = {\n    componentStack: string;\n}","docs":"","start":212,"length":9,"line":5,"character":45,"targetString":"ErrorInfo"},{"text":"(parameter) props: {}","docs":"","start":242,"length":5,"line":7,"character":14,"targetString":"props"},{"text":"(parameter) props: {}","docs":"","start":265,"length":5,"line":8,"character":10,"targetString":"props"},{"text":"(property) hasError: boolean","docs":"","start":291,"length":8,"line":9,"character":19,"targetString":"hasError"},{"text":"(method) ErrorBoundary.componentDidCatch(error: Error, info: ErrorInfo): void","docs":"","start":316,"length":17,"line":12,"character":2,"targetString":"componentDidCatch"},{"text":"(parameter) error: Error","docs":"","start":334,"length":5,"line":12,"character":20,"targetString":"error"},{"text":"type Error = {\n    message?: string | undefined;\n    stack?: string | undefined;\n}","docs":"","start":341,"length":5,"line":12,"character":27,"targetString":"Error"},{"text":"(parameter) info: ErrorInfo","docs":"","start":348,"length":4,"line":12,"character":34,"targetString":"info"},{"text":"type ErrorInfo = {\n    componentStack: string;\n}","docs":"","start":354,"length":9,"line":12,"character":40,"targetString":"ErrorInfo"},{"text":"(property) hasError: boolean","docs":"","start":387,"length":8,"line":13,"character":20,"targetString":"hasError"},{"text":"(property) error: Error","docs":"","start":403,"length":5,"line":13,"character":36,"targetString":"error"},{"text":"(property) info: ErrorInfo","docs":"","start":410,"length":4,"line":13,"character":43,"targetString":"info"},{"text":"(method) ErrorBoundary.render(): any","docs":"","start":425,"length":6,"line":16,"character":2,"targetString":"render"}],[{"text":"var document: Document","docs":"","start":69,"length":8,"line":4,"character":2,"targetString":"document"},{"text":"(method) Document.getElementById(elementId: string): HTMLElement | null","docs":"Returns a reference to the first object with the specified value of the ID attribute.","start":78,"length":14,"line":4,"character":11,"targetString":"getElementById"}]],"/blog/React常用组件/Event Hook组件":[[{"text":"const useEvent: <K extends keyof WindowEventMap>(type: K, callback: (event: WindowEventMap[K]) => void, deps?: readonly any[] | undefined) => any","docs":"","start":13,"length":8,"line":0,"character":13,"targetString":"useEvent"},{"text":"(type parameter) K in <K extends keyof WindowEventMap>(type: K, callback: (event: WindowEventMap[K]) => void, deps?: readonly any[] | undefined): any","docs":"","start":25,"length":1,"line":0,"character":25,"targetString":"K"},{"text":"interface WindowEventMap","docs":"","start":41,"length":14,"line":0,"character":41,"targetString":"WindowEventMap"},{"text":"(parameter) type: K extends keyof WindowEventMap","docs":"","start":60,"length":4,"line":1,"character":2,"targetString":"type"},{"text":"(type parameter) K in <K extends keyof WindowEventMap>(type: K, callback: (event: WindowEventMap[K]) => void, deps?: readonly any[] | undefined): any","docs":"","start":66,"length":1,"line":1,"character":8,"targetString":"K"},{"text":"(parameter) callback: (event: WindowEventMap[K]) => void","docs":"","start":71,"length":8,"line":2,"character":2,"targetString":"callback"},{"text":"(parameter) event: WindowEventMap[K]","docs":"","start":82,"length":5,"line":2,"character":13,"targetString":"event"},{"text":"interface WindowEventMap","docs":"","start":89,"length":14,"line":2,"character":20,"targetString":"WindowEventMap"},{"text":"(type parameter) K in <K extends keyof WindowEventMap>(type: K, callback: (event: WindowEventMap[K]) => void, deps?: readonly any[] | undefined): any","docs":"","start":104,"length":1,"line":2,"character":35,"targetString":"K"},{"text":"(parameter) deps: readonly any[] | undefined","docs":"","start":119,"length":4,"line":3,"character":2,"targetString":"deps"},{"text":"const handle: (event: WindowEventMap[K]) => void","docs":"","start":176,"length":6,"line":6,"character":10,"targetString":"handle"},{"text":"(parameter) event: WindowEventMap[K]","docs":"","start":186,"length":5,"line":6,"character":20,"targetString":"event"},{"text":"interface WindowEventMap","docs":"","start":193,"length":14,"line":6,"character":27,"targetString":"WindowEventMap"},{"text":"(type parameter) K in <K extends keyof WindowEventMap>(type: K, callback: (event: WindowEventMap[K]) => void, deps?: readonly any[] | undefined): any","docs":"","start":208,"length":1,"line":6,"character":42,"targetString":"K"},{"text":"(parameter) callback: (event: WindowEventMap[K]) => void","docs":"","start":215,"length":8,"line":6,"character":49,"targetString":"callback"},{"text":"(parameter) event: WindowEventMap[K]","docs":"","start":224,"length":5,"line":6,"character":58,"targetString":"event"},{"text":"var window: Window & typeof globalThis","docs":"","start":235,"length":6,"line":7,"character":4,"targetString":"window"},{"text":"(method) addEventListener<K>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":242,"length":16,"line":7,"character":11,"targetString":"addEventListener"},{"text":"(parameter) type: K extends keyof WindowEventMap","docs":"","start":259,"length":4,"line":7,"character":28,"targetString":"type"},{"text":"const handle: (event: WindowEventMap[K]) => void","docs":"","start":265,"length":6,"line":7,"character":34,"targetString":"handle"},{"text":"var window: Window & typeof globalThis","docs":"","start":290,"length":6,"line":8,"character":17,"targetString":"window"},{"text":"(method) removeEventListener<K>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions | undefined): void (+1 overload)","docs":"Removes the event listener in target's event listener list with the same type, callback, and options.","start":297,"length":19,"line":8,"character":24,"targetString":"removeEventListener"},{"text":"(parameter) type: K extends keyof WindowEventMap","docs":"","start":317,"length":4,"line":8,"character":44,"targetString":"type"},{"text":"const handle: (event: WindowEventMap[K]) => void","docs":"","start":323,"length":6,"line":8,"character":50,"targetString":"handle"},{"text":"(parameter) deps: readonly any[] | undefined","docs":"","start":336,"length":4,"line":9,"character":5,"targetString":"deps"}]],"/blog/React常用组件/下拉菜单":[[{"text":"type Anchor = {\n    name: string;\n    href?: string | undefined;\n}","docs":"","start":5,"length":6,"line":0,"character":5,"targetString":"Anchor"},{"text":"(property) name: string","docs":"","start":18,"length":4,"line":1,"character":2,"targetString":"name"},{"text":"(property) href?: string | undefined","docs":"","start":33,"length":4,"line":2,"character":2,"targetString":"href"},{"text":"const Dropdown: ({ items }: {\n    items: Anchor[];\n}) => any","docs":"","start":56,"length":8,"line":5,"character":6,"targetString":"Dropdown"},{"text":"var items: Anchor[]","docs":"","start":70,"length":5,"line":5,"character":20,"targetString":"items"},{"text":"(property) items: Anchor[]","docs":"","start":81,"length":5,"line":5,"character":31,"targetString":"items"},{"text":"type Anchor = {\n    name: string;\n    href?: string | undefined;\n}","docs":"","start":88,"length":6,"line":5,"character":38,"targetString":"Anchor"},{"text":"(JSX attribute) className: string","docs":"","start":111,"length":9,"line":6,"character":6,"targetString":"className"},{"text":"var items: Anchor[]","docs":"","start":143,"length":5,"line":7,"character":5,"targetString":"items"},{"text":"(method) Array<Anchor>.map<any>(callbackfn: (value: Anchor, index: number, array: Anchor[]) => any, thisArg?: any): any[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":149,"length":3,"line":7,"character":11,"targetString":"map"},{"text":"var name: string","docs":"","start":156,"length":4,"line":7,"character":18,"targetString":"name"},{"text":"var href: string | undefined","docs":"","start":162,"length":4,"line":7,"character":24,"targetString":"href"},{"text":"(JSX attribute) href: string | undefined","docs":"","start":197,"length":4,"line":9,"character":11,"targetString":"href"},{"text":"var href: string | undefined","docs":"","start":203,"length":4,"line":9,"character":17,"targetString":"href"},{"text":"var name: string","docs":"","start":210,"length":4,"line":9,"character":24,"targetString":"name"}],[{"text":"type NavItemProps = any","docs":"","start":5,"length":12,"line":0,"character":5,"targetString":"NavItemProps"},{"text":"(property) items: any[]","docs":"","start":33,"length":5,"line":1,"character":2,"targetString":"items"},{"text":"const NavItem: ({ name, href, items }: NavItemProps) => any","docs":"","start":58,"length":7,"line":4,"character":6,"targetString":"NavItem"},{"text":"var name: any","docs":"","start":71,"length":4,"line":4,"character":19,"targetString":"name"},{"text":"var href: any","docs":"","start":77,"length":4,"line":4,"character":25,"targetString":"href"},{"text":"var items: any","docs":"","start":83,"length":5,"line":4,"character":31,"targetString":"items"},{"text":"type NavItemProps = any","docs":"","start":92,"length":12,"line":4,"character":40,"targetString":"NavItemProps"},{"text":"const display: any","docs":"","start":120,"length":7,"line":5,"character":9,"targetString":"display"},{"text":"const setComponent: any","docs":"","start":129,"length":12,"line":5,"character":18,"targetString":"setComponent"},{"text":"const visible: () => any","docs":"","start":169,"length":7,"line":6,"character":8,"targetString":"visible"},{"text":"const setComponent: any","docs":"","start":185,"length":12,"line":6,"character":24,"targetString":"setComponent"},{"text":"(JSX attribute) items: any","docs":"","start":208,"length":5,"line":6,"character":47,"targetString":"items"},{"text":"var items: any","docs":"","start":215,"length":5,"line":6,"character":54,"targetString":"items"},{"text":"const hidden: () => any","docs":"","start":234,"length":6,"line":7,"character":8,"targetString":"hidden"},{"text":"const setComponent: any","docs":"","start":249,"length":12,"line":7,"character":23,"targetString":"setComponent"},{"text":"(JSX attribute) className: string","docs":"","start":289,"length":9,"line":10,"character":8,"targetString":"className"},{"text":"(JSX attribute) onMouseEnter: () => any","docs":"","start":310,"length":12,"line":10,"character":29,"targetString":"onMouseEnter"},{"text":"const visible: () => any","docs":"","start":324,"length":7,"line":10,"character":43,"targetString":"visible"},{"text":"(JSX attribute) onMouseLeave: () => any","docs":"","start":333,"length":12,"line":10,"character":52,"targetString":"onMouseLeave"},{"text":"const hidden: () => any","docs":"","start":347,"length":6,"line":10,"character":66,"targetString":"hidden"},{"text":"(JSX attribute) href: any","docs":"","start":365,"length":4,"line":11,"character":9,"targetString":"href"},{"text":"var href: any","docs":"","start":371,"length":4,"line":11,"character":15,"targetString":"href"},{"text":"var name: any","docs":"","start":378,"length":4,"line":11,"character":22,"targetString":"name"},{"text":"const display: any","docs":"","start":395,"length":7,"line":12,"character":7,"targetString":"display"}],[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"(JSX attribute) name: string","docs":"","start":60,"length":4,"line":4,"character":8,"targetString":"name"},{"text":"(JSX attribute) items: {\n    name: string;\n    href: string;\n}[]","docs":"","start":81,"length":5,"line":5,"character":8,"targetString":"items"},{"text":"(property) name: string","docs":"","start":102,"length":4,"line":6,"character":12,"targetString":"name"},{"text":"(property) href: string","docs":"","start":120,"length":4,"line":6,"character":30,"targetString":"href"},{"text":"(property) name: string","docs":"","start":145,"length":4,"line":7,"character":12,"targetString":"name"},{"text":"(property) href: string","docs":"","start":163,"length":4,"line":7,"character":30,"targetString":"href"},{"text":"(property) name: string","docs":"","start":188,"length":4,"line":8,"character":12,"targetString":"name"},{"text":"(property) href: string","docs":"","start":206,"length":4,"line":8,"character":30,"targetString":"href"}]],"/blog/React常用组件/利用vsc-styled插件来写内联样式":[[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"(JSX attribute) class: string","docs":"","start":40,"length":5,"line":2,"character":9,"targetString":"class"},{"text":"(JSX attribute) className: string","docs":"","start":155,"length":9,"line":8,"character":12,"targetString":"className"}],[{"text":"import styled","docs":"","start":7,"length":6,"line":0,"character":7,"targetString":"styled"}],[{"text":"var style: any","docs":"","start":4,"length":5,"line":0,"character":4,"targetString":"style"},{"text":"var style: any","docs":"","start":16,"length":5,"line":2,"character":0,"targetString":"style"}],[{"text":"const styled: {\n    div: (css: any) => any;\n    as: any;\n    any: any;\n}","docs":"","start":13,"length":6,"line":0,"character":13,"targetString":"styled"},{"text":"(property) div: (css: any) => any","docs":"","start":26,"length":3,"line":1,"character":2,"targetString":"div"},{"text":"(parameter) css: any","docs":"","start":32,"length":3,"line":1,"character":8,"targetString":"css"},{"text":"(JSX attribute) dangerouslySetInnerHTML: {\n    __html: any;\n}","docs":"","start":60,"length":23,"line":2,"character":18,"targetString":"dangerouslySetInnerHTML"},{"text":"(property) __html: any","docs":"","start":87,"length":6,"line":2,"character":45,"targetString":"__html"},{"text":"(parameter) css: any","docs":"","start":95,"length":3,"line":2,"character":53,"targetString":"css"},{"text":"(property) as: any","docs":"","start":116,"length":2,"line":3,"character":5,"targetString":"as"},{"text":"(property) any: any","docs":"","start":119,"length":3,"line":3,"character":8,"targetString":"any"}],[{"text":"const App: () => any","docs":"","start":41,"length":3,"line":3,"character":6,"targetString":"App"},{"text":"(JSX attribute) class: string","docs":"","start":75,"length":5,"line":5,"character":9,"targetString":"class"},{"text":"(JSX attribute) className: string","docs":"","start":188,"length":9,"line":11,"character":12,"targetString":"className"}],[{"text":"import less","docs":"","start":7,"length":4,"line":0,"character":7,"targetString":"less"},{"text":"type InlineCSSText = (...args: any) => string","docs":"","start":30,"length":13,"line":2,"character":5,"targetString":"InlineCSSText"},{"text":"(parameter) args: any","docs":"","start":50,"length":4,"line":2,"character":25,"targetString":"args"},{"text":"type InlineCSSRenderer = (...args: any) => any","docs":"","start":76,"length":17,"line":3,"character":5,"targetString":"InlineCSSRenderer"},{"text":"(parameter) args: any","docs":"","start":100,"length":4,"line":3,"character":29,"targetString":"args"},{"text":"const getInputCSS: (strs: string[], values: string[]) => string","docs":"","start":152,"length":11,"line":5,"character":6,"targetString":"getInputCSS"},{"text":"(parameter) strs: string[]","docs":"","start":167,"length":4,"line":5,"character":21,"targetString":"strs"},{"text":"(parameter) values: string[]","docs":"","start":183,"length":6,"line":5,"character":37,"targetString":"values"},{"text":"(parameter) values: string[]","docs":"","start":208,"length":6,"line":6,"character":2,"targetString":"values"},{"text":"(parameter) values: string[]","docs":"","start":217,"length":6,"line":6,"character":11,"targetString":"values"},{"text":"(method) Array<string>.concat(...items: (string | ConcatArray<string>)[]): string[] (+1 overload)","docs":"Combines two or more arrays.\r\nThis method returns a new array without modifying any existing arrays.","start":224,"length":6,"line":6,"character":18,"targetString":"concat"},{"text":"let i: number","docs":"","start":241,"length":1,"line":7,"character":6,"targetString":"i"},{"text":"let result: string","docs":"","start":253,"length":6,"line":8,"character":6,"targetString":"result"},{"text":"let i: number","docs":"","start":274,"length":1,"line":9,"character":9,"targetString":"i"},{"text":"(parameter) strs: string[]","docs":"","start":278,"length":4,"line":9,"character":13,"targetString":"strs"},{"text":"(property) Array<string>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":283,"length":6,"line":9,"character":18,"targetString":"length"},{"text":"let i: number","docs":"","start":291,"length":1,"line":9,"character":26,"targetString":"i"},{"text":"let result: string","docs":"","start":302,"length":6,"line":10,"character":4,"targetString":"result"},{"text":"(parameter) strs: string[]","docs":"","start":312,"length":4,"line":10,"character":14,"targetString":"strs"},{"text":"let i: number","docs":"","start":317,"length":1,"line":10,"character":19,"targetString":"i"},{"text":"(parameter) values: string[]","docs":"","start":322,"length":6,"line":10,"character":24,"targetString":"values"},{"text":"let i: number","docs":"","start":329,"length":1,"line":10,"character":31,"targetString":"i"},{"text":"let result: string","docs":"","start":345,"length":6,"line":12,"character":9,"targetString":"result"},{"text":"const styled: {\n    _: InlineCSSText;\n    css: InlineCSSRenderer;\n    less: InlineCSSRenderer;\n}","docs":"","start":368,"length":6,"line":15,"character":13,"targetString":"styled"},{"text":"(property) _: InlineCSSText","docs":"","start":381,"length":1,"line":16,"character":2,"targetString":"_"},{"text":"(parameter) strs: string[]","docs":"","start":386,"length":4,"line":16,"character":7,"targetString":"strs"},{"text":"(parameter) values: string[]","docs":"","start":405,"length":6,"line":16,"character":26,"targetString":"values"},{"text":"const getInputCSS: (strs: string[], values: string[]) => string","docs":"","start":439,"length":11,"line":17,"character":11,"targetString":"getInputCSS"},{"text":"(parameter) strs: string[]","docs":"","start":451,"length":4,"line":17,"character":23,"targetString":"strs"},{"text":"(parameter) values: string[]","docs":"","start":457,"length":6,"line":17,"character":29,"targetString":"values"},{"text":"type InlineCSSText = (...args: any) => string","docs":"","start":473,"length":13,"line":18,"character":8,"targetString":"InlineCSSText"},{"text":"(property) css: InlineCSSRenderer","docs":"","start":490,"length":3,"line":19,"character":2,"targetString":"css"},{"text":"(parameter) strs: string[]","docs":"","start":497,"length":4,"line":19,"character":9,"targetString":"strs"},{"text":"(parameter) values: string[]","docs":"","start":516,"length":6,"line":19,"character":28,"targetString":"values"},{"text":"const inputcss: string","docs":"","start":549,"length":8,"line":20,"character":10,"targetString":"inputcss"},{"text":"const getInputCSS: (strs: string[], values: string[]) => string","docs":"","start":560,"length":11,"line":20,"character":21,"targetString":"getInputCSS"},{"text":"(parameter) strs: string[]","docs":"","start":572,"length":4,"line":20,"character":33,"targetString":"strs"},{"text":"(parameter) values: string[]","docs":"","start":578,"length":6,"line":20,"character":39,"targetString":"values"},{"text":"let __html: string","docs":"","start":594,"length":6,"line":21,"character":8,"targetString":"__html"},{"text":"const inputcss: string","docs":"","start":603,"length":8,"line":21,"character":17,"targetString":"inputcss"},{"text":"(JSX attribute) dangerouslySetInnerHTML: {\n    __html: string;\n}","docs":"","start":630,"length":23,"line":22,"character":18,"targetString":"dangerouslySetInnerHTML"},{"text":"(property) __html: string","docs":"","start":657,"length":6,"line":22,"character":45,"targetString":"__html"},{"text":"type InlineCSSRenderer = (...args: any) => any","docs":"","start":678,"length":17,"line":23,"character":8,"targetString":"InlineCSSRenderer"},{"text":"(property) less: InlineCSSRenderer","docs":"","start":699,"length":4,"line":24,"character":2,"targetString":"less"},{"text":"(parameter) strs: string[]","docs":"","start":707,"length":4,"line":24,"character":10,"targetString":"strs"},{"text":"(parameter) values: string[]","docs":"","start":726,"length":6,"line":24,"character":29,"targetString":"values"},{"text":"const inputcss: string","docs":"","start":759,"length":8,"line":25,"character":10,"targetString":"inputcss"},{"text":"const getInputCSS: (strs: string[], values: string[]) => string","docs":"","start":770,"length":11,"line":25,"character":21,"targetString":"getInputCSS"},{"text":"(parameter) strs: string[]","docs":"","start":782,"length":4,"line":25,"character":33,"targetString":"strs"},{"text":"(parameter) values: string[]","docs":"","start":788,"length":6,"line":25,"character":39,"targetString":"values"},{"text":"let __html: string","docs":"","start":804,"length":6,"line":26,"character":8,"targetString":"__html"},{"text":"const inputcss: string","docs":"","start":813,"length":8,"line":26,"character":17,"targetString":"inputcss"},{"text":"import less","docs":"","start":826,"length":4,"line":27,"character":4,"targetString":"less"},{"text":"const inputcss: string","docs":"","start":838,"length":8,"line":27,"character":16,"targetString":"inputcss"},{"text":"(parameter) _: any","docs":"","start":849,"length":1,"line":27,"character":27,"targetString":"_"},{"text":"(parameter) output: any","docs":"","start":852,"length":6,"line":27,"character":30,"targetString":"output"},{"text":"let __html: string","docs":"","start":871,"length":6,"line":28,"character":6,"targetString":"__html"},{"text":"(parameter) output: any","docs":"","start":880,"length":6,"line":28,"character":15,"targetString":"output"},{"text":"(JSX attribute) dangerouslySetInnerHTML: {\n    __html: string;\n}","docs":"","start":916,"length":23,"line":30,"character":18,"targetString":"dangerouslySetInnerHTML"},{"text":"(property) __html: string","docs":"","start":943,"length":6,"line":30,"character":45,"targetString":"__html"},{"text":"type InlineCSSRenderer = (...args: any) => any","docs":"","start":964,"length":17,"line":31,"character":8,"targetString":"InlineCSSRenderer"}],[{"text":"const App: () => any","docs":"","start":41,"length":3,"line":3,"character":6,"targetString":"App"},{"text":"(JSX attribute) class: string","docs":"","start":75,"length":5,"line":5,"character":9,"targetString":"class"},{"text":"(JSX attribute) className: string","docs":"","start":215,"length":9,"line":13,"character":12,"targetString":"className"}]],"/blog/React常用组件/图片hover组件":[[{"text":"import React","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"React"},{"text":"const resolveImgSrc: (src: string, cdn?: boolean) => string","docs":"","start":40,"length":13,"line":2,"character":13,"targetString":"resolveImgSrc"},{"text":"(parameter) src: string","docs":"","start":57,"length":3,"line":2,"character":30,"targetString":"src"},{"text":"(parameter) cdn: boolean","docs":"","start":70,"length":3,"line":2,"character":43,"targetString":"cdn"},{"text":"(parameter) cdn: boolean","docs":"","start":94,"length":3,"line":3,"character":6,"targetString":"cdn"},{"text":"(parameter) src: string","docs":"","start":139,"length":3,"line":4,"character":38,"targetString":"src"},{"text":"(parameter) src: string","docs":"","start":158,"length":3,"line":6,"character":9,"targetString":"src"},{"text":"interface ImgProps","docs":"","start":182,"length":8,"line":9,"character":17,"targetString":"ImgProps"},{"text":"import React","docs":"","start":201,"length":5,"line":10,"character":10,"targetString":"React"},{"text":"import React","docs":"","start":230,"length":5,"line":11,"character":4,"targetString":"React"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":254,"length":16,"line":11,"character":28,"targetString":"HTMLImageElement"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":277,"length":16,"line":12,"character":4,"targetString":"HTMLImageElement"},{"text":"(property) ImgProps.devForImg?: boolean | undefined","docs":"未放到cdn时可以使用本地static","start":339,"length":9,"line":17,"character":2,"targetString":"devForImg"},{"text":"(property) ImgProps.cdn?: boolean | undefined","docs":"","start":361,"length":3,"line":18,"character":2,"targetString":"cdn"},{"text":"(property) ImgProps.forwardRef?: any","docs":"","start":377,"length":10,"line":19,"character":2,"targetString":"forwardRef"},{"text":"const Img: ({ src, devForImg, cdn, forwardRef, ...props }: ImgProps) => any","docs":"为方便后期图片资源懒加载、转移cdn等,所以使用封装后的Img","start":453,"length":3,"line":25,"character":13,"targetString":"Img"},{"text":"var src: any","docs":"","start":464,"length":3,"line":26,"character":2,"targetString":"src"},{"text":"var devForImg: boolean","docs":"","start":476,"length":9,"line":27,"character":2,"targetString":"devForImg"},{"text":"var cdn: boolean","docs":"","start":497,"length":3,"line":28,"character":2,"targetString":"cdn"},{"text":"var forwardRef: any","docs":"","start":512,"length":10,"line":29,"character":2,"targetString":"forwardRef"},{"text":"var props: {}","docs":"","start":529,"length":5,"line":30,"character":5,"targetString":"props"},{"text":"interface ImgProps","docs":"","start":538,"length":8,"line":31,"character":3,"targetString":"ImgProps"},{"text":"(JSX attribute) ref: any","docs":"","start":579,"length":3,"line":34,"character":6,"targetString":"ref"},{"text":"var forwardRef: any","docs":"","start":584,"length":10,"line":34,"character":11,"targetString":"forwardRef"},{"text":"var props: {}","docs":"","start":606,"length":5,"line":35,"character":10,"targetString":"props"},{"text":"(JSX attribute) src: any","docs":"","start":619,"length":3,"line":36,"character":6,"targetString":"src"},{"text":"var devForImg: boolean","docs":"","start":624,"length":9,"line":36,"character":11,"targetString":"devForImg"},{"text":"var src: any","docs":"","start":636,"length":3,"line":36,"character":23,"targetString":"src"},{"text":"const resolveImgSrc: (src: string, cdn?: boolean) => string","docs":"","start":642,"length":13,"line":36,"character":29,"targetString":"resolveImgSrc"},{"text":"var src: any","docs":"","start":656,"length":3,"line":36,"character":43,"targetString":"src"},{"text":"var cdn: boolean","docs":"","start":661,"length":3,"line":36,"character":48,"targetString":"cdn"},{"text":"interface ImgBindHover","docs":"","start":699,"length":12,"line":42,"character":17,"targetString":"ImgBindHover"},{"text":"interface ImgProps","docs":"","start":720,"length":8,"line":42,"character":38,"targetString":"ImgProps"},{"text":"(property) ImgBindHover.hoverSrc?: string | undefined","docs":"","start":733,"length":8,"line":43,"character":2,"targetString":"hoverSrc"},{"text":"(method) ImgBindHover.getBindTarget?(): HTMLElement","docs":"","start":753,"length":13,"line":44,"character":2,"targetString":"getBindTarget"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":771,"length":11,"line":44,"character":20,"targetString":"HTMLElement"},{"text":"const ImgBindHover: ({ src, hoverSrc, getBindTarget, ...props }: ImgBindHover) => any","docs":"","start":799,"length":12,"line":47,"character":13,"targetString":"ImgBindHover"},{"text":"var src: any","docs":"","start":819,"length":3,"line":48,"character":2,"targetString":"src"},{"text":"var hoverSrc: string","docs":"","start":826,"length":8,"line":49,"character":2,"targetString":"hoverSrc"},{"text":"var src: any","docs":"","start":837,"length":3,"line":49,"character":13,"targetString":"src"},{"text":"var getBindTarget: (() => HTMLElement) | undefined","docs":"","start":844,"length":13,"line":50,"character":2,"targetString":"getBindTarget"},{"text":"var props: {\n    devForImg?: boolean | undefined;\n    cdn?: boolean | undefined;\n    forwardRef?: any;\n}","docs":"","start":864,"length":5,"line":51,"character":5,"targetString":"props"},{"text":"interface ImgBindHover","docs":"","start":873,"length":12,"line":52,"character":3,"targetString":"ImgBindHover"},{"text":"const displaySrc: any","docs":"","start":901,"length":10,"line":53,"character":9,"targetString":"displaySrc"},{"text":"const setDisplaySrc: any","docs":"","start":913,"length":13,"line":53,"character":21,"targetString":"setDisplaySrc"},{"text":"var src: any","docs":"","start":939,"length":3,"line":53,"character":47,"targetString":"src"},{"text":"const ref: any","docs":"","start":953,"length":3,"line":55,"character":8,"targetString":"ref"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":966,"length":16,"line":55,"character":21,"targetString":"HTMLImageElement"},{"text":"const onMouseEnter: () => void","docs":"","start":1017,"length":12,"line":58,"character":10,"targetString":"onMouseEnter"},{"text":"const setDisplaySrc: any","docs":"","start":1046,"length":13,"line":59,"character":6,"targetString":"setDisplaySrc"},{"text":"var hoverSrc: string","docs":"","start":1060,"length":8,"line":59,"character":20,"targetString":"hoverSrc"},{"text":"const onMouseLeave: () => void","docs":"","start":1086,"length":12,"line":61,"character":10,"targetString":"onMouseLeave"},{"text":"const setDisplaySrc: any","docs":"","start":1115,"length":13,"line":62,"character":6,"targetString":"setDisplaySrc"},{"text":"var src: any","docs":"","start":1129,"length":3,"line":62,"character":20,"targetString":"src"},{"text":"const target: any","docs":"","start":1150,"length":6,"line":64,"character":10,"targetString":"target"},{"text":"var getBindTarget: (() => HTMLElement) | undefined","docs":"","start":1159,"length":13,"line":64,"character":19,"targetString":"getBindTarget"},{"text":"var getBindTarget: () => HTMLElement","docs":"","start":1175,"length":13,"line":64,"character":35,"targetString":"getBindTarget"},{"text":"const ref: any","docs":"","start":1193,"length":3,"line":64,"character":53,"targetString":"ref"},{"text":"const target: any","docs":"","start":1213,"length":6,"line":65,"character":8,"targetString":"target"},{"text":"const target: any","docs":"","start":1229,"length":6,"line":66,"character":6,"targetString":"target"},{"text":"const onMouseEnter: () => void","docs":"","start":1267,"length":12,"line":66,"character":44,"targetString":"onMouseEnter"},{"text":"const target: any","docs":"","start":1287,"length":6,"line":67,"character":6,"targetString":"target"},{"text":"const onMouseLeave: () => void","docs":"","start":1325,"length":12,"line":67,"character":44,"targetString":"onMouseLeave"},{"text":"const target: any","docs":"","start":1374,"length":6,"line":70,"character":10,"targetString":"target"},{"text":"const target: any","docs":"","start":1392,"length":6,"line":71,"character":8,"targetString":"target"},{"text":"const onMouseEnter: () => void","docs":"","start":1433,"length":12,"line":71,"character":49,"targetString":"onMouseEnter"},{"text":"const target: any","docs":"","start":1455,"length":6,"line":72,"character":8,"targetString":"target"},{"text":"const onMouseLeave: () => void","docs":"","start":1496,"length":12,"line":72,"character":49,"targetString":"onMouseLeave"},{"text":"const Img: ({ src, devForImg, cdn, forwardRef, ...props }: ImgProps) => any","docs":"为方便后期图片资源懒加载、转移cdn等,所以使用封装后的Img","start":1544,"length":3,"line":77,"character":10,"targetString":"Img"},{"text":"(JSX attribute) ImgProps.forwardRef?: any","docs":"","start":1548,"length":10,"line":77,"character":14,"targetString":"forwardRef"},{"text":"const ref: any","docs":"","start":1560,"length":3,"line":77,"character":26,"targetString":"ref"},{"text":"var props: {\n    devForImg?: boolean | undefined;\n    cdn?: boolean | undefined;\n    forwardRef?: any;\n}","docs":"","start":1569,"length":5,"line":77,"character":35,"targetString":"props"},{"text":"(JSX attribute) src: any","docs":"","start":1576,"length":3,"line":77,"character":42,"targetString":"src"},{"text":"const displaySrc: any","docs":"","start":1581,"length":10,"line":77,"character":47,"targetString":"displaySrc"}]],"/blog/React常用组件/图片预占位组件":[[{"text":"const body: any","docs":"","start":7,"length":4,"line":0,"character":7,"targetString":"body"},{"text":"const alter: any","docs":"","start":13,"length":5,"line":0,"character":13,"targetString":"alter"},{"text":"const destory: () => any","docs":"","start":43,"length":7,"line":1,"character":6,"targetString":"destory"},{"text":"const alter: any","docs":"","start":59,"length":5,"line":1,"character":22,"targetString":"alter"}],[{"text":"const style: any","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"style"},{"text":"const setStyle: any","docs":"","start":14,"length":8,"line":0,"character":14,"targetString":"setStyle"},{"text":"(property) display: string","docs":"","start":52,"length":7,"line":0,"character":52,"targetString":"display"},{"text":"const visu: () => any","docs":"","start":77,"length":4,"line":1,"character":6,"targetString":"visu"},{"text":"const setStyle: any","docs":"","start":90,"length":8,"line":1,"character":19,"targetString":"setStyle"},{"text":"(property) display: string","docs":"","start":101,"length":7,"line":1,"character":30,"targetString":"display"}],[{"text":"const defaultImg: any","docs":"","start":7,"length":10,"line":0,"character":7,"targetString":"defaultImg"},{"text":"const destory: any","docs":"","start":19,"length":7,"line":0,"character":19,"targetString":"destory"},{"text":"const ref: any","docs":"","start":57,"length":3,"line":1,"character":6,"targetString":"ref"},{"text":"interface HTMLImageElement","docs":"Provides special properties and methods for manipulating <img> elements.","start":70,"length":16,"line":1,"character":19,"targetString":"HTMLImageElement"},{"text":"const defaultImg: any","docs":"","start":110,"length":10,"line":5,"character":5,"targetString":"defaultImg"},{"text":"(JSX attribute) style: any","docs":"","start":154,"length":5,"line":8,"character":6,"targetString":"style"},{"text":"(JSX attribute) ref: any","docs":"","start":174,"length":3,"line":9,"character":6,"targetString":"ref"},{"text":"const ref: any","docs":"","start":179,"length":3,"line":9,"character":11,"targetString":"ref"},{"text":"(JSX attribute) onError: () => any","docs":"","start":190,"length":7,"line":10,"character":6,"targetString":"onError"},{"text":"const ref: any","docs":"","start":205,"length":3,"line":10,"character":21,"targetString":"ref"},{"text":"(JSX attribute) onLoad: (event: any) => void","docs":"","start":233,"length":6,"line":11,"character":6,"targetString":"onLoad"},{"text":"(parameter) event: any","docs":"","start":241,"length":5,"line":11,"character":14,"targetString":"event"},{"text":"const destory: any","docs":"","start":260,"length":7,"line":12,"character":8,"targetString":"destory"},{"text":"(parameter) event: any","docs":"","start":329,"length":5,"line":14,"character":25,"targetString":"event"}],[{"text":"const usePreComp: (comp: any) => [JSX.Element, VoidFunction]","docs":"","start":13,"length":10,"line":0,"character":13,"targetString":"usePreComp"},{"text":"(parameter) comp: any","docs":"","start":27,"length":4,"line":0,"character":27,"targetString":"comp"},{"text":"interface VoidFunction","docs":"","start":61,"length":12,"line":0,"character":61,"targetString":"VoidFunction"},{"text":"const body: any","docs":"","start":89,"length":4,"line":1,"character":9,"targetString":"body"},{"text":"const alter: any","docs":"","start":95,"length":5,"line":1,"character":15,"targetString":"alter"},{"text":"(parameter) comp: any","docs":"","start":113,"length":4,"line":1,"character":33,"targetString":"comp"},{"text":"const destory: () => any","docs":"","start":127,"length":7,"line":2,"character":8,"targetString":"destory"},{"text":"const alter: any","docs":"","start":143,"length":5,"line":2,"character":24,"targetString":"alter"},{"text":"const body: any","docs":"","start":165,"length":4,"line":3,"character":10,"targetString":"body"},{"text":"const destory: () => any","docs":"","start":171,"length":7,"line":3,"character":16,"targetString":"destory"}]],"/blog/React常用组件/复制剪贴板hook":[[{"text":"import ClipboardJS","docs":"","start":7,"length":11,"line":0,"character":7,"targetString":"ClipboardJS"},{"text":"import DependencyList","docs":"","start":45,"length":14,"line":1,"character":9,"targetString":"DependencyList"},{"text":"import useEffect","docs":"","start":61,"length":9,"line":1,"character":25,"targetString":"useEffect"},{"text":"import useRef","docs":"","start":72,"length":6,"line":1,"character":36,"targetString":"useRef"},{"text":"const useCopy: <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: ((cp: any) => void | VoidFunction) | undefined, deps?: any) => {\n    button: any;\n    target: any;\n}","docs":"","start":108,"length":7,"line":3,"character":13,"targetString":"useCopy"},{"text":"(type parameter) Button in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: ((cp: any) => void | VoidFunction) | undefined, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":122,"length":6,"line":4,"character":2,"targetString":"Button"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":137,"length":11,"line":4,"character":17,"targetString":"HTMLElement"},{"text":"(type parameter) Target in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: ((cp: any) => void | VoidFunction) | undefined, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":158,"length":6,"line":5,"character":2,"targetString":"Target"},{"text":"interface HTMLElement","docs":"Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.","start":173,"length":11,"line":5,"character":17,"targetString":"HTMLElement"},{"text":"(parameter) init: ((cp: any) => void | VoidFunction) | undefined","docs":"","start":196,"length":4,"line":7,"character":2,"targetString":"init"},{"text":"(parameter) cp: any","docs":"","start":204,"length":2,"line":7,"character":10,"targetString":"cp"},{"text":"import ClipboardJS","docs":"","start":208,"length":11,"line":7,"character":14,"targetString":"ClipboardJS"},{"text":"interface VoidFunction","docs":"","start":231,"length":12,"line":7,"character":37,"targetString":"VoidFunction"},{"text":"(parameter) deps: any","docs":"","start":247,"length":4,"line":8,"character":2,"targetString":"deps"},{"text":"import DependencyList","docs":"","start":253,"length":14,"line":8,"character":8,"targetString":"DependencyList"},{"text":"const ref: any","docs":"","start":288,"length":3,"line":10,"character":8,"targetString":"ref"},{"text":"import useRef","docs":"","start":294,"length":6,"line":10,"character":14,"targetString":"useRef"},{"text":"(type parameter) Button in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: ((cp: any) => void | VoidFunction) | undefined, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":301,"length":6,"line":10,"character":21,"targetString":"Button"},{"text":"const targetRef: any","docs":"","start":319,"length":9,"line":11,"character":8,"targetString":"targetRef"},{"text":"import useRef","docs":"","start":331,"length":6,"line":11,"character":20,"targetString":"useRef"},{"text":"(type parameter) Target in <Button extends HTMLElement = any, Target extends HTMLElement = any>(init?: ((cp: any) => void | VoidFunction) | undefined, deps?: any): {\n    button: any;\n    target: any;\n}","docs":"","start":338,"length":6,"line":11,"character":27,"targetString":"Target"},{"text":"import useEffect","docs":"","start":350,"length":9,"line":12,"character":2,"targetString":"useEffect"},{"text":"const targetId: string","docs":"","start":378,"length":8,"line":13,"character":10,"targetString":"targetId"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":409,"length":4,"line":13,"character":41,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":414,"length":3,"line":13,"character":46,"targetString":"now"},{"text":"const ref: any","docs":"","start":430,"length":3,"line":14,"character":8,"targetString":"ref"},{"text":"const ref: any","docs":"","start":451,"length":3,"line":15,"character":6,"targetString":"ref"},{"text":"const targetId: string","docs":"","start":505,"length":8,"line":15,"character":60,"targetString":"targetId"},{"text":"const targetRef: any","docs":"","start":557,"length":9,"line":19,"character":8,"targetString":"targetRef"},{"text":"const targetRef: any","docs":"","start":584,"length":9,"line":20,"character":6,"targetString":"targetRef"},{"text":"const targetId: string","docs":"","start":607,"length":8,"line":20,"character":29,"targetString":"targetId"},{"text":"const ref: any","docs":"","start":635,"length":3,"line":22,"character":6,"targetString":"ref"},{"text":"const targetId: string","docs":"","start":652,"length":8,"line":22,"character":23,"targetString":"targetId"},{"text":"const cp: any","docs":"","start":677,"length":2,"line":24,"character":10,"targetString":"cp"},{"text":"import ClipboardJS","docs":"","start":686,"length":11,"line":24,"character":19,"targetString":"ClipboardJS"},{"text":"const ref: any","docs":"","start":698,"length":3,"line":24,"character":31,"targetString":"ref"},{"text":"(parameter) init: ((cp: any) => void | VoidFunction) | undefined","docs":"","start":715,"length":4,"line":25,"character":4,"targetString":"init"},{"text":"(parameter) init: (cp: any) => void | VoidFunction","docs":"","start":723,"length":4,"line":25,"character":12,"targetString":"init"},{"text":"const cp: any","docs":"","start":728,"length":2,"line":25,"character":17,"targetString":"cp"},{"text":"const cp: any","docs":"","start":749,"length":2,"line":26,"character":17,"targetString":"cp"},{"text":"(parameter) deps: any","docs":"","start":767,"length":4,"line":27,"character":5,"targetString":"deps"},{"text":"(property) button: any","docs":"","start":788,"length":6,"line":29,"character":4,"targetString":"button"},{"text":"const ref: any","docs":"","start":796,"length":3,"line":29,"character":12,"targetString":"ref"},{"text":"(property) target: any","docs":"","start":805,"length":6,"line":30,"character":4,"targetString":"target"},{"text":"const targetRef: any","docs":"","start":813,"length":9,"line":30,"character":12,"targetString":"targetRef"}],[{"text":"const App: () => any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"App"},{"text":"const copy: any","docs":"","start":35,"length":4,"line":2,"character":8,"targetString":"copy"},{"text":"(parameter) cp: any","docs":"","start":50,"length":2,"line":2,"character":23,"targetString":"cp"},{"text":"(parameter) cp: any","docs":"","start":62,"length":2,"line":3,"character":4,"targetString":"cp"},{"text":"const copySelf: any","docs":"","start":130,"length":8,"line":6,"character":8,"targetString":"copySelf"},{"text":"(JSX attribute) ref: any","docs":"","start":183,"length":3,"line":9,"character":11,"targetString":"ref"},{"text":"const copy: any","docs":"","start":188,"length":4,"line":9,"character":16,"targetString":"copy"},{"text":"(JSX attribute) ref: any","docs":"","start":223,"length":3,"line":10,"character":11,"targetString":"ref"},{"text":"const copy: any","docs":"","start":228,"length":4,"line":10,"character":16,"targetString":"copy"},{"text":"(JSX attribute) ref: any","docs":"","start":267,"length":3,"line":11,"character":11,"targetString":"ref"},{"text":"const copySelf: any","docs":"","start":272,"length":8,"line":11,"character":16,"targetString":"copySelf"}]],"/blog/React常用组件/懒加载组件":[[{"text":"type LazyAble = () => Promise<{\n    default: any;\n}>","docs":"","start":5,"length":8,"line":0,"character":5,"targetString":"LazyAble"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":22,"length":7,"line":0,"character":22,"targetString":"Promise"},{"text":"(property) default: any","docs":"","start":32,"length":7,"line":0,"character":32,"targetString":"default"}],[],[{"text":"(property) default: () => any","docs":"","start":40,"length":7,"line":2,"character":4,"targetString":"default"}],[{"text":"interface LazyCom<T>","docs":"","start":17,"length":7,"line":0,"character":17,"targetString":"LazyCom"},{"text":"(type parameter) T in LazyCom<T>","docs":"","start":25,"length":1,"line":0,"character":25,"targetString":"T"},{"text":"(property) LazyCom<T>.await: Promise<T>","docs":"","start":32,"length":5,"line":1,"character":2,"targetString":"await"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":39,"length":7,"line":1,"character":9,"targetString":"Promise"},{"text":"(type parameter) T in LazyCom<T>","docs":"","start":47,"length":1,"line":1,"character":17,"targetString":"T"},{"text":"(property) LazyCom<T>.fallback: any","docs":"","start":52,"length":8,"line":2,"character":2,"targetString":"fallback"},{"text":"(property) LazyCom<T>.children: (response: T) => any","docs":"","start":80,"length":8,"line":3,"character":2,"targetString":"children"},{"text":"(parameter) response: T","docs":"","start":91,"length":8,"line":3,"character":13,"targetString":"response"},{"text":"(type parameter) T in LazyCom<T>","docs":"","start":101,"length":1,"line":3,"character":23,"targetString":"T"}],[{"text":"function LazyCom<T>({ children, await: wait, fallback }: any): any","docs":"","start":16,"length":7,"line":0,"character":16,"targetString":"LazyCom"},{"text":"(type parameter) T in LazyCom<T>({ children, await: wait, fallback }: any): any","docs":"","start":24,"length":1,"line":0,"character":24,"targetString":"T"},{"text":"var children: any","docs":"","start":29,"length":8,"line":0,"character":29,"targetString":"children"},{"text":"var wait: any","docs":"","start":46,"length":4,"line":0,"character":46,"targetString":"wait"},{"text":"var fallback: any","docs":"","start":52,"length":8,"line":0,"character":52,"targetString":"fallback"},{"text":"(type parameter) T in LazyCom<T>({ children, await: wait, fallback }: any): any","docs":"","start":72,"length":1,"line":0,"character":72,"targetString":"T"},{"text":"const Com: any","docs":"","start":86,"length":3,"line":1,"character":8,"targetString":"Com"},{"text":"const com: any","docs":"","start":127,"length":3,"line":2,"character":10,"targetString":"com"},{"text":"var wait: any","docs":"","start":139,"length":4,"line":2,"character":22,"targetString":"wait"},{"text":"(property) default: () => any","docs":"","start":163,"length":7,"line":4,"character":6,"targetString":"default"},{"text":"var children: any","docs":"","start":178,"length":8,"line":4,"character":21,"targetString":"children"},{"text":"const com: any","docs":"","start":187,"length":3,"line":4,"character":30,"targetString":"com"},{"text":"(JSX attribute) fallback: any","docs":"","start":235,"length":8,"line":9,"character":20,"targetString":"fallback"},{"text":"var fallback: any","docs":"","start":245,"length":8,"line":9,"character":30,"targetString":"fallback"},{"text":"const Com: any","docs":"","start":263,"length":3,"line":10,"character":7,"targetString":"Com"}]],"/blog/React常用组件/读取一次即销毁的refValue":[[{"text":"let value: string","docs":"","start":4,"length":5,"line":0,"character":4,"targetString":"value"},{"text":"const getOnceValue: () => string","docs":"","start":35,"length":12,"line":2,"character":6,"targetString":"getOnceValue"},{"text":"const onceValue: string","docs":"","start":66,"length":9,"line":3,"character":8,"targetString":"onceValue"},{"text":"let value: string","docs":"","start":78,"length":5,"line":3,"character":20,"targetString":"value"},{"text":"let value: string","docs":"","start":86,"length":5,"line":4,"character":2,"targetString":"value"},{"text":"const onceValue: string","docs":"","start":108,"length":9,"line":5,"character":9,"targetString":"onceValue"},{"text":"const initValue: string","docs":"","start":127,"length":9,"line":8,"character":6,"targetString":"initValue"},{"text":"const getOnceValue: () => string","docs":"","start":139,"length":12,"line":8,"character":18,"targetString":"getOnceValue"},{"text":"const value: any","docs":"","start":160,"length":5,"line":9,"character":6,"targetString":"value"},{"text":"const initValue: string","docs":"","start":168,"length":9,"line":9,"character":14,"targetString":"initValue"},{"text":"const initValue: string","docs":"","start":180,"length":9,"line":9,"character":26,"targetString":"initValue"}],[{"text":"import useRef","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"useRef"},{"text":"const useOnceValue: any","docs":"","start":45,"length":12,"line":2,"character":13,"targetString":"useOnceValue"}]],"/blog/React常用组件/验证码发送计时组件":[[{"text":"import React","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"React"},{"text":"import useState","docs":"","start":16,"length":8,"line":0,"character":16,"targetString":"useState"},{"text":"import useInterval","docs":"","start":47,"length":11,"line":1,"character":7,"targetString":"useInterval"},{"text":"interface TimeBtn","docs":"","start":110,"length":7,"line":3,"character":17,"targetString":"TimeBtn"},{"text":"(property) TimeBtn.onClick: (start: Function) => void","docs":"","start":122,"length":7,"line":4,"character":2,"targetString":"onClick"},{"text":"(parameter) start: Function","docs":"","start":132,"length":5,"line":4,"character":12,"targetString":"start"},{"text":"interface Function","docs":"Creates a new function.","start":139,"length":8,"line":4,"character":19,"targetString":"Function"},{"text":"(property) TimeBtn.time?: number | undefined","docs":"","start":159,"length":4,"line":5,"character":2,"targetString":"time"},{"text":"const TimeBtn: ({ onClick, time }: TimeBtn) => any","docs":"","start":189,"length":7,"line":8,"character":13,"targetString":"TimeBtn"},{"text":"var onClick: (start: Function) => void","docs":"","start":202,"length":7,"line":8,"character":26,"targetString":"onClick"},{"text":"var time: number","docs":"","start":211,"length":4,"line":8,"character":35,"targetString":"time"},{"text":"interface TimeBtn","docs":"","start":224,"length":7,"line":8,"character":48,"targetString":"TimeBtn"},{"text":"const text: any","docs":"","start":247,"length":4,"line":9,"character":9,"targetString":"text"},{"text":"const setText: any","docs":"","start":253,"length":7,"line":9,"character":15,"targetString":"setText"},{"text":"import useState","docs":"","start":264,"length":8,"line":9,"character":26,"targetString":"useState"},{"text":"const state: any","docs":"","start":291,"length":5,"line":10,"character":9,"targetString":"state"},{"text":"const setState: any","docs":"","start":298,"length":8,"line":10,"character":16,"targetString":"setState"},{"text":"import useState","docs":"","start":310,"length":8,"line":10,"character":28,"targetString":"useState"},{"text":"var time: number","docs":"","start":319,"length":4,"line":10,"character":37,"targetString":"time"},{"text":"const isRunning: any","docs":"","start":334,"length":9,"line":11,"character":9,"targetString":"isRunning"},{"text":"const toggleIsRunning: any","docs":"","start":345,"length":15,"line":11,"character":20,"targetString":"toggleIsRunning"},{"text":"import useState","docs":"","start":364,"length":8,"line":11,"character":39,"targetString":"useState"},{"text":"import useInterval","docs":"","start":382,"length":11,"line":12,"character":2,"targetString":"useInterval"},{"text":"const state: any","docs":"","start":417,"length":5,"line":14,"character":10,"targetString":"state"},{"text":"const setState: any","docs":"","start":438,"length":8,"line":15,"character":8,"targetString":"setState"},{"text":"const state: any","docs":"","start":447,"length":5,"line":15,"character":17,"targetString":"state"},{"text":"const setState: any","docs":"","start":481,"length":8,"line":17,"character":8,"targetString":"setState"},{"text":"var time: number","docs":"","start":490,"length":4,"line":17,"character":17,"targetString":"time"},{"text":"const setText: any","docs":"","start":504,"length":7,"line":18,"character":8,"targetString":"setText"},{"text":"const toggleIsRunning: any","docs":"","start":528,"length":15,"line":19,"character":8,"targetString":"toggleIsRunning"},{"text":"const isRunning: any","docs":"","start":570,"length":9,"line":22,"character":4,"targetString":"isRunning"},{"text":"(JSX attribute) disabled: any","docs":"","start":628,"length":8,"line":27,"character":6,"targetString":"disabled"},{"text":"const isRunning: any","docs":"","start":638,"length":9,"line":27,"character":16,"targetString":"isRunning"},{"text":"(JSX attribute) onClick: () => void","docs":"","start":655,"length":7,"line":28,"character":6,"targetString":"onClick"},{"text":"var onClick: (start: Function) => void","docs":"","start":680,"length":7,"line":29,"character":8,"targetString":"onClick"},{"text":"const toggleIsRunning: any","docs":"","start":694,"length":15,"line":29,"character":22,"targetString":"toggleIsRunning"},{"text":"(JSX attribute) className: string","docs":"","start":732,"length":9,"line":31,"character":6,"targetString":"className"},{"text":"(JSX attribute) style: {\n    cursor: string;\n}","docs":"","start":758,"length":5,"line":32,"character":6,"targetString":"style"},{"text":"(property) cursor: string","docs":"","start":775,"length":6,"line":33,"character":8,"targetString":"cursor"},{"text":"const isRunning: any","docs":"","start":783,"length":9,"line":33,"character":16,"targetString":"isRunning"},{"text":"const isRunning: any","docs":"","start":844,"length":9,"line":36,"character":7,"targetString":"isRunning"},{"text":"(JSX attribute) style: {\n    color: string;\n}","docs":"","start":882,"length":5,"line":38,"character":10,"targetString":"style"},{"text":"(property) color: string","docs":"","start":903,"length":5,"line":39,"character":12,"targetString":"color"},{"text":"const state: any","docs":"","start":955,"length":5,"line":42,"character":11,"targetString":"state"},{"text":"const text: any","docs":"","start":998,"length":4,"line":45,"character":8,"targetString":"text"}],[{"text":"(JSX attribute) onClick: (start: any) => Promise<void>","docs":"","start":40,"length":7,"line":2,"character":2,"targetString":"onClick"},{"text":"(parameter) start: any","docs":"","start":55,"length":5,"line":2,"character":17,"targetString":"start"},{"text":"(parameter) start: any","docs":"","start":90,"length":5,"line":4,"character":4,"targetString":"start"}]],"/blog/React生态/hoist-non-react-statics源码阅读":[[{"text":"const REACT_STATICS: {\n    childContextTypes: boolean;\n    contextType: boolean;\n    contextTypes: boolean;\n    defaultProps: boolean;\n    displayName: boolean;\n    getDefaultProps: boolean;\n    getDerivedStateFromError: boolean;\n    getDerivedStateFromProps: boolean;\n    mixins: boolean;\n    propTypes: boolean;\n    type: boolean;\n}","docs":"","start":6,"length":13,"line":0,"character":6,"targetString":"REACT_STATICS"},{"text":"(property) childContextTypes: boolean","docs":"","start":26,"length":17,"line":1,"character":2,"targetString":"childContextTypes"},{"text":"(property) contextType: boolean","docs":"","start":53,"length":11,"line":2,"character":2,"targetString":"contextType"},{"text":"(property) contextTypes: boolean","docs":"","start":74,"length":12,"line":3,"character":2,"targetString":"contextTypes"},{"text":"(property) defaultProps: boolean","docs":"","start":96,"length":12,"line":4,"character":2,"targetString":"defaultProps"},{"text":"(property) displayName: boolean","docs":"","start":118,"length":11,"line":5,"character":2,"targetString":"displayName"},{"text":"(property) getDefaultProps: boolean","docs":"","start":139,"length":15,"line":6,"character":2,"targetString":"getDefaultProps"},{"text":"(property) getDerivedStateFromError: boolean","docs":"","start":164,"length":24,"line":7,"character":2,"targetString":"getDerivedStateFromError"},{"text":"(property) getDerivedStateFromProps: boolean","docs":"","start":198,"length":24,"line":8,"character":2,"targetString":"getDerivedStateFromProps"},{"text":"(property) mixins: boolean","docs":"","start":232,"length":6,"line":9,"character":2,"targetString":"mixins"},{"text":"(property) propTypes: boolean","docs":"","start":248,"length":9,"line":10,"character":2,"targetString":"propTypes"},{"text":"(property) type: boolean","docs":"","start":267,"length":4,"line":11,"character":2,"targetString":"type"}],[{"text":"const KNOWN_STATICS: {\n    name: boolean;\n    length: boolean;\n    prototype: boolean;\n    caller: boolean;\n    callee: boolean;\n    arguments: boolean;\n    arity: boolean;\n}","docs":"","start":6,"length":13,"line":0,"character":6,"targetString":"KNOWN_STATICS"},{"text":"(property) name: boolean","docs":"","start":26,"length":4,"line":1,"character":2,"targetString":"name"},{"text":"(property) length: boolean","docs":"","start":40,"length":6,"line":2,"character":2,"targetString":"length"},{"text":"(property) prototype: boolean","docs":"","start":56,"length":9,"line":3,"character":2,"targetString":"prototype"},{"text":"(property) caller: boolean","docs":"","start":75,"length":6,"line":4,"character":2,"targetString":"caller"},{"text":"(property) callee: boolean","docs":"","start":91,"length":6,"line":5,"character":2,"targetString":"callee"},{"text":"(property) arguments: boolean","docs":"","start":107,"length":9,"line":6,"character":2,"targetString":"arguments"},{"text":"(property) arity: boolean","docs":"","start":126,"length":5,"line":7,"character":2,"targetString":"arity"}],[{"text":"const FORWARD_REF_STATICS: {\n    $$typeof: boolean;\n    render: boolean;\n    defaultProps: boolean;\n    displayName: boolean;\n    propTypes: boolean;\n}","docs":"","start":6,"length":19,"line":0,"character":6,"targetString":"FORWARD_REF_STATICS"},{"text":"(property) $$typeof: boolean","docs":"","start":32,"length":8,"line":1,"character":2,"targetString":"$$typeof"},{"text":"(property) render: boolean","docs":"","start":50,"length":6,"line":2,"character":2,"targetString":"render"},{"text":"(property) defaultProps: boolean","docs":"","start":66,"length":12,"line":3,"character":2,"targetString":"defaultProps"},{"text":"(property) displayName: boolean","docs":"","start":88,"length":11,"line":4,"character":2,"targetString":"displayName"},{"text":"(property) propTypes: boolean","docs":"","start":109,"length":9,"line":5,"character":2,"targetString":"propTypes"}],[{"text":"const MEMO_STATICS: {\n    $$typeof: boolean;\n    compare: boolean;\n    defaultProps: boolean;\n    displayName: boolean;\n    propTypes: boolean;\n    type: boolean;\n}","docs":"","start":6,"length":12,"line":0,"character":6,"targetString":"MEMO_STATICS"},{"text":"(property) $$typeof: boolean","docs":"","start":25,"length":8,"line":1,"character":2,"targetString":"$$typeof"},{"text":"(property) compare: boolean","docs":"","start":43,"length":7,"line":2,"character":2,"targetString":"compare"},{"text":"(property) defaultProps: boolean","docs":"","start":60,"length":12,"line":3,"character":2,"targetString":"defaultProps"},{"text":"(property) displayName: boolean","docs":"","start":82,"length":11,"line":4,"character":2,"targetString":"displayName"},{"text":"(property) propTypes: boolean","docs":"","start":103,"length":9,"line":5,"character":2,"targetString":"propTypes"},{"text":"(property) type: boolean","docs":"","start":122,"length":4,"line":6,"character":2,"targetString":"type"},{"text":"const TYPE_STATICS: {}","docs":"","start":142,"length":12,"line":9,"character":6,"targetString":"TYPE_STATICS"},{"text":"const TYPE_STATICS: {}","docs":"","start":160,"length":12,"line":10,"character":0,"targetString":"TYPE_STATICS"}],[{"text":"function getStatics(component: any): any","docs":"","start":44,"length":10,"line":1,"character":9,"targetString":"getStatics"},{"text":"(parameter) component: any","docs":"","start":55,"length":9,"line":1,"character":20,"targetString":"component"},{"text":"(parameter) component: any","docs":"","start":81,"length":9,"line":2,"character":13,"targetString":"component"},{"text":"(parameter) component: any","docs":"","start":145,"length":9,"line":5,"character":22,"targetString":"component"}],[{"text":"function hoistNonReactStatics(targetComponent: any, sourceComponent: any, blacklist: any): any","docs":"","start":24,"length":20,"line":0,"character":24,"targetString":"hoistNonReactStatics"},{"text":"(parameter) targetComponent: any","docs":"","start":48,"length":15,"line":1,"character":2,"targetString":"targetComponent"},{"text":"(parameter) sourceComponent: any","docs":"","start":67,"length":15,"line":2,"character":2,"targetString":"sourceComponent"},{"text":"(parameter) blacklist: any","docs":"","start":86,"length":9,"line":3,"character":2,"targetString":"blacklist"},{"text":"(parameter) sourceComponent: any","docs":"","start":113,"length":15,"line":5,"character":13,"targetString":"sourceComponent"},{"text":"const inheritedComponent: any","docs":"","start":294,"length":18,"line":9,"character":12,"targetString":"inheritedComponent"},{"text":"(parameter) sourceComponent: any","docs":"","start":330,"length":15,"line":9,"character":48,"targetString":"sourceComponent"},{"text":"const inheritedComponent: any","docs":"","start":357,"length":18,"line":10,"character":10,"targetString":"inheritedComponent"},{"text":"const inheritedComponent: any","docs":"","start":379,"length":18,"line":10,"character":32,"targetString":"inheritedComponent"},{"text":"function hoistNonReactStatics(targetComponent: any, sourceComponent: any, blacklist: any): any","docs":"","start":429,"length":20,"line":11,"character":8,"targetString":"hoistNonReactStatics"},{"text":"(parameter) targetComponent: any","docs":"","start":450,"length":15,"line":11,"character":29,"targetString":"targetComponent"},{"text":"const inheritedComponent: any","docs":"","start":467,"length":18,"line":11,"character":46,"targetString":"inheritedComponent"},{"text":"(parameter) blacklist: any","docs":"","start":487,"length":9,"line":11,"character":66,"targetString":"blacklist"},{"text":"let keys: any","docs":"","start":551,"length":4,"line":16,"character":8,"targetString":"keys"},{"text":"(parameter) sourceComponent: any","docs":"","start":578,"length":15,"line":16,"character":35,"targetString":"sourceComponent"},{"text":"let keys: any","docs":"","start":669,"length":4,"line":20,"character":6,"targetString":"keys"},{"text":"let keys: any","docs":"","start":676,"length":4,"line":20,"character":13,"targetString":"keys"},{"text":"(parameter) sourceComponent: any","docs":"","start":710,"length":15,"line":20,"character":47,"targetString":"sourceComponent"},{"text":"const targetStatics: any","docs":"","start":772,"length":13,"line":24,"character":10,"targetString":"targetStatics"},{"text":"(parameter) targetComponent: any","docs":"","start":799,"length":15,"line":24,"character":37,"targetString":"targetComponent"},{"text":"const sourceStatics: any","docs":"","start":826,"length":13,"line":25,"character":10,"targetString":"sourceStatics"},{"text":"(parameter) sourceComponent: any","docs":"","start":853,"length":15,"line":25,"character":37,"targetString":"sourceComponent"},{"text":"let i: number","docs":"","start":884,"length":1,"line":27,"character":13,"targetString":"i"},{"text":"let i: number","docs":"","start":891,"length":1,"line":27,"character":20,"targetString":"i"},{"text":"let keys: any","docs":"","start":895,"length":4,"line":27,"character":24,"targetString":"keys"},{"text":"let i: number","docs":"","start":910,"length":1,"line":27,"character":39,"targetString":"i"},{"text":"const key: any","docs":"","start":927,"length":3,"line":28,"character":12,"targetString":"key"},{"text":"let keys: any","docs":"","start":933,"length":4,"line":28,"character":18,"targetString":"keys"},{"text":"let i: number","docs":"","start":938,"length":1,"line":28,"character":23,"targetString":"i"},{"text":"const key: any","docs":"","start":997,"length":3,"line":31,"character":23,"targetString":"key"},{"text":"(parameter) blacklist: any","docs":"","start":1038,"length":9,"line":33,"character":10,"targetString":"blacklist"},{"text":"(parameter) blacklist: any","docs":"","start":1051,"length":9,"line":33,"character":23,"targetString":"blacklist"},{"text":"const key: any","docs":"","start":1061,"length":3,"line":33,"character":33,"targetString":"key"},{"text":"const sourceStatics: any","docs":"","start":1135,"length":13,"line":35,"character":10,"targetString":"sourceStatics"},{"text":"const sourceStatics: any","docs":"","start":1152,"length":13,"line":35,"character":27,"targetString":"sourceStatics"},{"text":"const key: any","docs":"","start":1166,"length":3,"line":35,"character":41,"targetString":"key"},{"text":"const targetStatics: any","docs":"","start":1240,"length":13,"line":37,"character":10,"targetString":"targetStatics"},{"text":"const targetStatics: any","docs":"","start":1257,"length":13,"line":37,"character":27,"targetString":"targetStatics"},{"text":"const key: any","docs":"","start":1271,"length":3,"line":37,"character":41,"targetString":"key"},{"text":"const descriptor: any","docs":"","start":1301,"length":10,"line":39,"character":14,"targetString":"descriptor"},{"text":"(parameter) sourceComponent: any","docs":"","start":1339,"length":15,"line":39,"character":52,"targetString":"sourceComponent"},{"text":"const key: any","docs":"","start":1356,"length":3,"line":39,"character":69,"targetString":"key"},{"text":"(parameter) targetComponent: any","docs":"","start":1400,"length":15,"line":41,"character":25,"targetString":"targetComponent"},{"text":"const key: any","docs":"","start":1417,"length":3,"line":41,"character":42,"targetString":"key"},{"text":"const descriptor: any","docs":"","start":1422,"length":10,"line":41,"character":47,"targetString":"descriptor"},{"text":"(local var) e: unknown","docs":"","start":1451,"length":1,"line":42,"character":17,"targetString":"e"},{"text":"(parameter) targetComponent: any","docs":"","start":1495,"length":15,"line":47,"character":9,"targetString":"targetComponent"}]],"/blog/React生态/react16以后不需要的一些操作":[[{"text":"type IState = {\n    readonly count: number;\n}","docs":"","start":12,"length":6,"line":0,"character":12,"targetString":"IState"},{"text":"type Readonly<T> = { readonly [P in keyof T]: T[P]; }","docs":"Make all properties in T readonly","start":21,"length":8,"line":0,"character":21,"targetString":"Readonly"},{"text":"(property) count: number","docs":"","start":34,"length":5,"line":1,"character":2,"targetString":"count"},{"text":"type IAction<K extends \"count\" = \"count\"> = {\n    type: K;\n    payload: Readonly<{\n        count: number;\n    }>[K];\n}","docs":"","start":63,"length":7,"line":3,"character":12,"targetString":"IAction"},{"text":"(type parameter) K in type IAction<K extends \"count\" = \"count\">","docs":"","start":71,"length":1,"line":3,"character":20,"targetString":"K"},{"text":"type IState = {\n    readonly count: number;\n}","docs":"","start":87,"length":6,"line":3,"character":36,"targetString":"IState"},{"text":"type IState = {\n    readonly count: number;\n}","docs":"","start":102,"length":6,"line":3,"character":51,"targetString":"IState"},{"text":"(property) type: K extends \"count\" = \"count\"","docs":"","start":116,"length":4,"line":4,"character":2,"targetString":"type"},{"text":"(type parameter) K in type IAction<K extends \"count\" = \"count\">","docs":"","start":122,"length":1,"line":4,"character":8,"targetString":"K"},{"text":"(property) payload: Readonly<{\n    count: number;\n}>[K]","docs":"","start":126,"length":7,"line":5,"character":2,"targetString":"payload"},{"text":"type IState = {\n    readonly count: number;\n}","docs":"","start":135,"length":6,"line":5,"character":11,"targetString":"IState"},{"text":"(type parameter) K in type IAction<K extends \"count\" = \"count\">","docs":"","start":142,"length":1,"line":5,"character":18,"targetString":"K"},{"text":"const initState: Readonly<{\n    count: number;\n}>","docs":"","start":161,"length":9,"line":8,"character":13,"targetString":"initState"},{"text":"type IState = {\n    readonly count: number;\n}","docs":"","start":172,"length":6,"line":8,"character":24,"targetString":"IState"},{"text":"(property) count: number","docs":"","start":185,"length":5,"line":9,"character":2,"targetString":"count"},{"text":"const reducer: any","docs":"","start":210,"length":7,"line":11,"character":13,"targetString":"reducer"},{"text":"type IState = {\n    readonly count: number;\n}","docs":"","start":227,"length":6,"line":11,"character":30,"targetString":"IState"},{"text":"type IAction<K extends \"count\" = \"count\"> = {\n    type: K;\n    payload: Readonly<{\n        count: number;\n    }>[K];\n}","docs":"","start":235,"length":7,"line":11,"character":38,"targetString":"IAction"},{"text":"(parameter) state: any","docs":"","start":250,"length":5,"line":12,"character":2,"targetString":"state"},{"text":"var type: any","docs":"","start":261,"length":4,"line":13,"character":4,"targetString":"type"},{"text":"var payload: any","docs":"","start":267,"length":7,"line":13,"character":10,"targetString":"payload"},{"text":"(parameter) state: any","docs":"","start":288,"length":5,"line":14,"character":11,"targetString":"state"},{"text":"var type: any","docs":"","start":296,"length":4,"line":14,"character":19,"targetString":"type"},{"text":"var payload: any","docs":"","start":303,"length":7,"line":14,"character":26,"targetString":"payload"},{"text":"const store: any","docs":"","start":321,"length":5,"line":16,"character":6,"targetString":"store"},{"text":"const reducer: any","docs":"","start":341,"length":7,"line":16,"character":26,"targetString":"reducer"},{"text":"const initState: Readonly<{\n    count: number;\n}>","docs":"","start":350,"length":9,"line":16,"character":35,"targetString":"initState"}]],"/blog/React生态/useSelector和reselect源码阅读":[[{"text":"function useSelectorWithStoreAndSubscription(selector: any, equalityFn: any, store: any, contextSub: any): any","docs":"","start":286,"length":35,"line":5,"character":9,"targetString":"useSelectorWithStoreAndSubscription"},{"text":"(parameter) selector: any","docs":"","start":325,"length":8,"line":6,"character":2,"targetString":"selector"},{"text":"(parameter) equalityFn: any","docs":"","start":337,"length":10,"line":7,"character":2,"targetString":"equalityFn"},{"text":"(parameter) store: any","docs":"","start":351,"length":5,"line":8,"character":2,"targetString":"store"},{"text":"(parameter) contextSub: any","docs":"","start":360,"length":10,"line":9,"character":2,"targetString":"contextSub"},{"text":"const forceRender: any","docs":"","start":403,"length":11,"line":12,"character":11,"targetString":"forceRender"},{"text":"(parameter) s: any","docs":"","start":429,"length":1,"line":12,"character":37,"targetString":"s"},{"text":"(parameter) s: any","docs":"","start":434,"length":1,"line":12,"character":42,"targetString":"s"},{"text":"const subscription: any","docs":"","start":453,"length":12,"line":14,"character":8,"targetString":"subscription"},{"text":"(parameter) store: any","docs":"","start":499,"length":5,"line":14,"character":54,"targetString":"store"},{"text":"(parameter) contextSub: any","docs":"","start":506,"length":10,"line":14,"character":61,"targetString":"contextSub"},{"text":"(parameter) store: any","docs":"","start":525,"length":5,"line":15,"character":4,"targetString":"store"},{"text":"(parameter) contextSub: any","docs":"","start":536,"length":10,"line":16,"character":4,"targetString":"contextSub"},{"text":"const latestSelector: any","docs":"","start":561,"length":14,"line":19,"character":8,"targetString":"latestSelector"},{"text":"const latestSelectedState: any","docs":"","start":610,"length":19,"line":20,"character":8,"targetString":"latestSelectedState"},{"text":"let selectedState: any","docs":"","start":680,"length":13,"line":22,"character":6,"targetString":"selectedState"},{"text":"(parameter) selector: any","docs":"","start":749,"length":8,"line":25,"character":6,"targetString":"selector"},{"text":"const latestSelector: any","docs":"","start":762,"length":14,"line":25,"character":19,"targetString":"latestSelector"},{"text":"let selectedState: any","docs":"","start":825,"length":13,"line":27,"character":4,"targetString":"selectedState"},{"text":"(parameter) selector: any","docs":"","start":841,"length":8,"line":27,"character":20,"targetString":"selector"},{"text":"(parameter) store: any","docs":"","start":850,"length":5,"line":27,"character":29,"targetString":"store"},{"text":"let selectedState: any","docs":"","start":908,"length":13,"line":30,"character":4,"targetString":"selectedState"},{"text":"const latestSelectedState: any","docs":"","start":924,"length":19,"line":30,"character":20,"targetString":"latestSelectedState"},{"text":"const latestSelector: any","docs":"","start":981,"length":14,"line":34,"character":4,"targetString":"latestSelector"},{"text":"(parameter) selector: any","docs":"","start":1006,"length":8,"line":34,"character":29,"targetString":"selector"},{"text":"const latestSelectedState: any","docs":"","start":1019,"length":19,"line":35,"character":4,"targetString":"latestSelectedState"},{"text":"let selectedState: any","docs":"","start":1049,"length":13,"line":35,"character":34,"targetString":"selectedState"},{"text":"(local function) checkForUpdates(): void","docs":"","start":1102,"length":15,"line":39,"character":13,"targetString":"checkForUpdates"},{"text":"const newSelectedState: any","docs":"","start":1170,"length":16,"line":41,"character":12,"targetString":"newSelectedState"},{"text":"const latestSelector: any","docs":"","start":1189,"length":14,"line":41,"character":31,"targetString":"latestSelector"},{"text":"(parameter) store: any","docs":"","start":1212,"length":5,"line":41,"character":54,"targetString":"store"},{"text":"(parameter) equalityFn: any","docs":"","start":1283,"length":10,"line":44,"character":10,"targetString":"equalityFn"},{"text":"const newSelectedState: any","docs":"","start":1294,"length":16,"line":44,"character":21,"targetString":"newSelectedState"},{"text":"const latestSelectedState: any","docs":"","start":1312,"length":19,"line":44,"character":39,"targetString":"latestSelectedState"},{"text":"const latestSelectedState: any","docs":"","start":1422,"length":19,"line":48,"character":6,"targetString":"latestSelectedState"},{"text":"const newSelectedState: any","docs":"","start":1452,"length":16,"line":48,"character":36,"targetString":"newSelectedState"},{"text":"const forceRender: any","docs":"","start":1497,"length":11,"line":51,"character":6,"targetString":"forceRender"},{"text":"const subscription: any","docs":"","start":1844,"length":12,"line":62,"character":4,"targetString":"subscription"},{"text":"(local function) checkForUpdates(): void","docs":"","start":1873,"length":15,"line":62,"character":33,"targetString":"checkForUpdates"},{"text":"const subscription: any","docs":"","start":1893,"length":12,"line":63,"character":4,"targetString":"subscription"},{"text":"(local function) checkForUpdates(): void","docs":"","start":1949,"length":15,"line":66,"character":4,"targetString":"checkForUpdates"},{"text":"const subscription: any","docs":"","start":1985,"length":12,"line":68,"character":17,"targetString":"subscription"},{"text":"(parameter) store: any","docs":"","start":2038,"length":5,"line":69,"character":6,"targetString":"store"},{"text":"const subscription: any","docs":"","start":2045,"length":12,"line":69,"character":13,"targetString":"subscription"},{"text":"let selectedState: any","docs":"","start":2070,"length":13,"line":71,"character":9,"targetString":"selectedState"}],[{"text":"function createSelectorCreator(memoize: any, ...memoizeOptions: any[]): (...funcs: any[]) => any","docs":"","start":188,"length":21,"line":3,"character":16,"targetString":"createSelectorCreator"},{"text":"(parameter) memoize: any","docs":"","start":210,"length":7,"line":3,"character":38,"targetString":"memoize"},{"text":"(parameter) memoizeOptions: any[]","docs":"","start":222,"length":14,"line":3,"character":50,"targetString":"memoizeOptions"},{"text":"(parameter) funcs: any[]","docs":"","start":340,"length":5,"line":6,"character":13,"targetString":"funcs"},{"text":"let recomputations: number","docs":"","start":360,"length":14,"line":7,"character":8,"targetString":"recomputations"},{"text":"const resultFunc: any","docs":"","start":412,"length":10,"line":10,"character":10,"targetString":"resultFunc"},{"text":"(parameter) funcs: any[]","docs":"","start":425,"length":5,"line":10,"character":23,"targetString":"funcs"},{"text":"(method) Array<any>.pop(): any","docs":"Removes the last element from an array and returns it.\r\nIf the array is empty, undefined is returned and the array is not modified.","start":431,"length":3,"line":10,"character":29,"targetString":"pop"},{"text":"const dependencies: any","docs":"","start":545,"length":12,"line":14,"character":10,"targetString":"dependencies"},{"text":"(parameter) funcs: any[]","docs":"","start":576,"length":5,"line":14,"character":41,"targetString":"funcs"},{"text":"const memoizedResultFunc: any","docs":"","start":630,"length":18,"line":17,"character":10,"targetString":"memoizedResultFunc"},{"text":"(parameter) memoize: any","docs":"","start":651,"length":7,"line":17,"character":31,"targetString":"memoize"},{"text":"(parameter) args: any[]","docs":"","start":663,"length":4,"line":17,"character":43,"targetString":"args"},{"text":"let recomputations: number","docs":"","start":680,"length":14,"line":18,"character":6,"targetString":"recomputations"},{"text":"const resultFunc: any","docs":"","start":710,"length":10,"line":19,"character":13,"targetString":"resultFunc"},{"text":"(parameter) args: any[]","docs":"","start":724,"length":4,"line":19,"character":27,"targetString":"args"},{"text":"(parameter) memoizeOptions: any[]","docs":"","start":740,"length":14,"line":20,"character":10,"targetString":"memoizeOptions"},{"text":"const selector: any","docs":"","start":843,"length":8,"line":24,"character":10,"targetString":"selector"},{"text":"(parameter) memoize: any","docs":"","start":854,"length":7,"line":24,"character":21,"targetString":"memoize"},{"text":"(parameter) args: any[]","docs":"","start":866,"length":4,"line":24,"character":33,"targetString":"args"},{"text":"const params: any[]","docs":"","start":889,"length":6,"line":25,"character":12,"targetString":"params"},{"text":"const length: any","docs":"","start":913,"length":6,"line":26,"character":12,"targetString":"length"},{"text":"const dependencies: any","docs":"","start":922,"length":12,"line":26,"character":21,"targetString":"dependencies"},{"text":"let i: number","docs":"","start":958,"length":1,"line":28,"character":15,"targetString":"i"},{"text":"let i: number","docs":"","start":965,"length":1,"line":28,"character":22,"targetString":"i"},{"text":"const length: any","docs":"","start":969,"length":6,"line":28,"character":26,"targetString":"length"},{"text":"let i: number","docs":"","start":977,"length":1,"line":28,"character":34,"targetString":"i"},{"text":"const params: any[]","docs":"","start":1049,"length":6,"line":31,"character":8,"targetString":"params"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":1056,"length":4,"line":31,"character":15,"targetString":"push"},{"text":"const dependencies: any","docs":"","start":1061,"length":12,"line":31,"character":20,"targetString":"dependencies"},{"text":"let i: number","docs":"","start":1074,"length":1,"line":31,"character":33,"targetString":"i"},{"text":"(parameter) args: any[]","docs":"","start":1080,"length":4,"line":31,"character":39,"targetString":"args"},{"text":"const memoizedResultFunc: any","docs":"","start":1172,"length":18,"line":36,"character":13,"targetString":"memoizedResultFunc"},{"text":"const params: any[]","docs":"","start":1194,"length":6,"line":36,"character":35,"targetString":"params"},{"text":"const selector: any","docs":"","start":1214,"length":8,"line":39,"character":4,"targetString":"selector"},{"text":"const resultFunc: any","docs":"","start":1236,"length":10,"line":39,"character":26,"targetString":"resultFunc"},{"text":"const selector: any","docs":"","start":1251,"length":8,"line":40,"character":4,"targetString":"selector"},{"text":"const dependencies: any","docs":"","start":1275,"length":12,"line":40,"character":28,"targetString":"dependencies"},{"text":"const selector: any","docs":"","start":1292,"length":8,"line":41,"character":4,"targetString":"selector"},{"text":"let recomputations: number","docs":"","start":1324,"length":14,"line":41,"character":36,"targetString":"recomputations"},{"text":"const selector: any","docs":"","start":1343,"length":8,"line":42,"character":4,"targetString":"selector"},{"text":"let recomputations: number","docs":"","start":1381,"length":14,"line":42,"character":42,"targetString":"recomputations"},{"text":"const selector: any","docs":"","start":1412,"length":8,"line":43,"character":11,"targetString":"selector"}],[{"text":"function defaultMemoize(func: any, equalityCheck?: any): (...args: any[]) => any","docs":"","start":130,"length":14,"line":3,"character":16,"targetString":"defaultMemoize"},{"text":"(parameter) func: any","docs":"","start":145,"length":4,"line":3,"character":31,"targetString":"func"},{"text":"(parameter) equalityCheck: any","docs":"","start":151,"length":13,"line":3,"character":37,"targetString":"equalityCheck"},{"text":"let lastArgs: any","docs":"","start":197,"length":8,"line":4,"character":6,"targetString":"lastArgs"},{"text":"let lastResult: any","docs":"","start":234,"length":10,"line":5,"character":6,"targetString":"lastResult"},{"text":"(parameter) args: any[]","docs":"","start":280,"length":4,"line":6,"character":13,"targetString":"args"},{"text":"function areArgumentsShallowlyEqual(equalityCheck: any, prev: any, next: any): boolean","docs":"","start":348,"length":26,"line":8,"character":9,"targetString":"areArgumentsShallowlyEqual"},{"text":"(parameter) equalityCheck: any","docs":"","start":375,"length":13,"line":8,"character":36,"targetString":"equalityCheck"},{"text":"let lastArgs: any","docs":"","start":390,"length":8,"line":8,"character":51,"targetString":"lastArgs"},{"text":"(parameter) args: any[]","docs":"","start":400,"length":4,"line":8,"character":61,"targetString":"args"},{"text":"let lastResult: any","docs":"","start":440,"length":10,"line":10,"character":6,"targetString":"lastResult"},{"text":"(parameter) func: any","docs":"","start":453,"length":4,"line":10,"character":19,"targetString":"func"},{"text":"(parameter) args: any[]","docs":"","start":458,"length":4,"line":10,"character":24,"targetString":"args"},{"text":"let lastArgs: any","docs":"","start":500,"length":8,"line":14,"character":4,"targetString":"lastArgs"},{"text":"(parameter) args: any[]","docs":"","start":511,"length":4,"line":14,"character":15,"targetString":"args"},{"text":"let lastResult: any","docs":"","start":544,"length":10,"line":17,"character":11,"targetString":"lastResult"},{"text":"function areArgumentsShallowlyEqual(equalityCheck: any, prev: any, next: any): boolean","docs":"","start":758,"length":26,"line":25,"character":9,"targetString":"areArgumentsShallowlyEqual"},{"text":"(parameter) equalityCheck: any","docs":"","start":785,"length":13,"line":25,"character":36,"targetString":"equalityCheck"},{"text":"(parameter) prev: any","docs":"","start":800,"length":4,"line":25,"character":51,"targetString":"prev"},{"text":"(parameter) next: any","docs":"","start":806,"length":4,"line":25,"character":57,"targetString":"next"},{"text":"(parameter) prev: any","docs":"","start":820,"length":4,"line":26,"character":6,"targetString":"prev"},{"text":"(parameter) next: any","docs":"","start":837,"length":4,"line":26,"character":23,"targetString":"next"},{"text":"(parameter) prev: any","docs":"","start":854,"length":4,"line":26,"character":40,"targetString":"prev"},{"text":"(parameter) next: any","docs":"","start":870,"length":4,"line":26,"character":56,"targetString":"next"},{"text":"const length: any","docs":"","start":915,"length":6,"line":30,"character":8,"targetString":"length"},{"text":"(parameter) prev: any","docs":"","start":924,"length":4,"line":30,"character":17,"targetString":"prev"},{"text":"let i: number","docs":"","start":947,"length":1,"line":31,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":954,"length":1,"line":31,"character":18,"targetString":"i"},{"text":"const length: any","docs":"","start":958,"length":6,"line":31,"character":22,"targetString":"length"},{"text":"let i: number","docs":"","start":966,"length":1,"line":31,"character":30,"targetString":"i"},{"text":"(parameter) equalityCheck: any","docs":"","start":982,"length":13,"line":32,"character":9,"targetString":"equalityCheck"},{"text":"(parameter) prev: any","docs":"","start":996,"length":4,"line":32,"character":23,"targetString":"prev"},{"text":"let i: number","docs":"","start":1001,"length":1,"line":32,"character":28,"targetString":"i"},{"text":"(parameter) next: any","docs":"","start":1005,"length":4,"line":32,"character":32,"targetString":"next"},{"text":"let i: number","docs":"","start":1010,"length":1,"line":32,"character":37,"targetString":"i"}],[{"text":"const cache: {}","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"cache"},{"text":"const cacheLimit: 10000","docs":"","start":23,"length":10,"line":1,"character":6,"targetString":"cacheLimit"},{"text":"let cacheCount: number","docs":"","start":56,"length":10,"line":2,"character":4,"targetString":"cacheCount"},{"text":"function compilePath(path: any, options: any): any","docs":"","start":81,"length":11,"line":4,"character":9,"targetString":"compilePath"},{"text":"(parameter) path: any","docs":"","start":93,"length":4,"line":4,"character":21,"targetString":"path"},{"text":"(parameter) options: any","docs":"","start":99,"length":7,"line":4,"character":27,"targetString":"options"},{"text":"const cacheKey: string","docs":"","start":118,"length":8,"line":5,"character":8,"targetString":"cacheKey"},{"text":"(parameter) options: any","docs":"","start":132,"length":7,"line":5,"character":22,"targetString":"options"},{"text":"(parameter) options: any","docs":"","start":146,"length":7,"line":5,"character":36,"targetString":"options"},{"text":"(parameter) options: any","docs":"","start":163,"length":7,"line":5,"character":53,"targetString":"options"},{"text":"const pathCache: any","docs":"","start":191,"length":9,"line":6,"character":8,"targetString":"pathCache"},{"text":"const cache: {}","docs":"","start":203,"length":5,"line":6,"character":20,"targetString":"cache"},{"text":"const cacheKey: string","docs":"","start":209,"length":8,"line":6,"character":26,"targetString":"cacheKey"},{"text":"const cache: {}","docs":"","start":223,"length":5,"line":6,"character":40,"targetString":"cache"},{"text":"const cacheKey: string","docs":"","start":229,"length":8,"line":6,"character":46,"targetString":"cacheKey"},{"text":"const pathCache: any","docs":"","start":268,"length":9,"line":9,"character":6,"targetString":"pathCache"},{"text":"(parameter) path: any","docs":"","start":278,"length":4,"line":9,"character":16,"targetString":"path"},{"text":"const pathCache: any","docs":"","start":292,"length":9,"line":9,"character":30,"targetString":"pathCache"},{"text":"(parameter) path: any","docs":"","start":302,"length":4,"line":9,"character":40,"targetString":"path"}]],"/blog/Redux状态管理/applyMiddleware":[[{"text":"function applyMiddleware(...middlewares: any[]): (createStore: any) => (...args: any[]) => any","docs":"","start":133,"length":15,"line":2,"character":24,"targetString":"applyMiddleware"},{"text":"(parameter) middlewares: any[]","docs":"","start":152,"length":11,"line":2,"character":43,"targetString":"middlewares"},{"text":"(parameter) createStore: any","docs":"","start":239,"length":11,"line":4,"character":9,"targetString":"createStore"},{"text":"(parameter) args: any[]","docs":"","start":258,"length":4,"line":4,"character":28,"targetString":"args"},{"text":"const store: any","docs":"","start":279,"length":5,"line":5,"character":10,"targetString":"store"},{"text":"(parameter) createStore: any","docs":"","start":287,"length":11,"line":5,"character":18,"targetString":"createStore"},{"text":"(parameter) args: any[]","docs":"","start":302,"length":4,"line":5,"character":33,"targetString":"args"},{"text":"let dispatch: () => never","docs":"","start":382,"length":8,"line":7,"character":8,"targetString":"dispatch"},{"text":"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error","docs":"","start":417,"length":5,"line":8,"character":16,"targetString":"Error"},{"text":"const middlewareAPI: {\n    getState: any;\n    dispatch: (...args: any[]) => never;\n}","docs":"","start":593,"length":13,"line":14,"character":10,"targetString":"middlewareAPI"},{"text":"(property) getState: any","docs":"","start":617,"length":8,"line":15,"character":6,"targetString":"getState"},{"text":"const store: any","docs":"","start":627,"length":5,"line":15,"character":16,"targetString":"store"},{"text":"(property) dispatch: (...args: any[]) => never","docs":"","start":649,"length":8,"line":16,"character":6,"targetString":"dispatch"},{"text":"(parameter) args: any[]","docs":"","start":663,"length":4,"line":16,"character":20,"targetString":"args"},{"text":"let dispatch: () => never","docs":"","start":672,"length":8,"line":16,"character":29,"targetString":"dispatch"},{"text":"(parameter) args: any[]","docs":"","start":684,"length":4,"line":16,"character":41,"targetString":"args"},{"text":"const chain: any[]","docs":"","start":789,"length":5,"line":21,"character":10,"targetString":"chain"},{"text":"(parameter) middlewares: any[]","docs":"","start":797,"length":11,"line":21,"character":18,"targetString":"middlewares"},{"text":"(method) Array<any>.map<any>(callbackfn: (value: any, index: number, array: any[]) => any, thisArg?: any): any[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":809,"length":3,"line":21,"character":30,"targetString":"map"},{"text":"(parameter) middleware: any","docs":"","start":813,"length":10,"line":21,"character":34,"targetString":"middleware"},{"text":"(parameter) middleware: any","docs":"","start":827,"length":10,"line":21,"character":48,"targetString":"middleware"},{"text":"const middlewareAPI: {\n    getState: any;\n    dispatch: (...args: any[]) => never;\n}","docs":"","start":838,"length":13,"line":21,"character":59,"targetString":"middlewareAPI"},{"text":"let dispatch: () => never","docs":"","start":919,"length":8,"line":23,"character":4,"targetString":"dispatch"},{"text":"const chain: any[]","docs":"","start":941,"length":5,"line":23,"character":26,"targetString":"chain"},{"text":"const store: any","docs":"","start":948,"length":5,"line":23,"character":33,"targetString":"store"},{"text":"const store: any","docs":"","start":1006,"length":5,"line":27,"character":9,"targetString":"store"},{"text":"(property) dispatch: () => never","docs":"","start":1019,"length":8,"line":28,"character":6,"targetString":"dispatch"}]],"/blog/Redux状态管理/bindActionCreators":[[{"text":"function bindActionCreator(actionCreator: any, dispatch: any): (...args: any[]) => any","docs":"","start":9,"length":17,"line":0,"character":9,"targetString":"bindActionCreator"},{"text":"(parameter) actionCreator: any","docs":"","start":27,"length":13,"line":0,"character":27,"targetString":"actionCreator"},{"text":"(parameter) dispatch: any","docs":"","start":42,"length":8,"line":0,"character":42,"targetString":"dispatch"},{"text":"(parameter) args: any[]","docs":"","start":67,"length":4,"line":1,"character":13,"targetString":"args"},{"text":"(parameter) dispatch: any","docs":"","start":76,"length":8,"line":1,"character":22,"targetString":"dispatch"},{"text":"(parameter) actionCreator: any","docs":"","start":85,"length":13,"line":1,"character":31,"targetString":"actionCreator"},{"text":"(parameter) args: any[]","docs":"","start":99,"length":4,"line":1,"character":45,"targetString":"args"},{"text":"function bindActionCreators(actionCreators: any, dispatch: any): {}","docs":"","start":133,"length":18,"line":4,"character":24,"targetString":"bindActionCreators"},{"text":"(parameter) actionCreators: any","docs":"","start":152,"length":14,"line":4,"character":43,"targetString":"actionCreators"},{"text":"(parameter) dispatch: any","docs":"","start":168,"length":8,"line":4,"character":59,"targetString":"dispatch"},{"text":"(parameter) actionCreators: any","docs":"","start":193,"length":14,"line":5,"character":13,"targetString":"actionCreators"},{"text":"function bindActionCreator(actionCreator: any, dispatch: any): (...args: any[]) => any","docs":"","start":237,"length":17,"line":6,"character":11,"targetString":"bindActionCreator"},{"text":"(parameter) actionCreators: any","docs":"","start":255,"length":14,"line":6,"character":29,"targetString":"actionCreators"},{"text":"(parameter) dispatch: any","docs":"","start":271,"length":8,"line":6,"character":45,"targetString":"dispatch"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":295,"length":6,"line":9,"character":9,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":302,"length":4,"line":9,"character":16,"targetString":"keys"},{"text":"(parameter) actionCreators: any","docs":"","start":307,"length":14,"line":9,"character":21,"targetString":"actionCreators"},{"text":"(method) Array<string>.reduce<{}>(callbackfn: (previousValue: {}, currentValue: string, currentIndex: number, array: string[]) => {}, initialValue: {}): {} (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":323,"length":6,"line":9,"character":37,"targetString":"reduce"},{"text":"(parameter) boundActionCreators: {}","docs":"","start":331,"length":19,"line":9,"character":45,"targetString":"boundActionCreators"},{"text":"(parameter) key: string","docs":"","start":352,"length":3,"line":9,"character":66,"targetString":"key"},{"text":"(parameter) boundActionCreators: {}","docs":"","start":366,"length":19,"line":10,"character":4,"targetString":"boundActionCreators"},{"text":"(parameter) key: string","docs":"","start":386,"length":3,"line":10,"character":24,"targetString":"key"},{"text":"function bindActionCreator(actionCreator: any, dispatch: any): (...args: any[]) => any","docs":"","start":393,"length":17,"line":10,"character":31,"targetString":"bindActionCreator"},{"text":"(parameter) dispatch: any","docs":"","start":426,"length":8,"line":10,"character":64,"targetString":"dispatch"},{"text":"(parameter) boundActionCreators: {}","docs":"","start":447,"length":19,"line":11,"character":11,"targetString":"boundActionCreators"}],[{"text":"const TodoActionCreators: {\n    readonly addTodo: (text: any) => {\n        type: string;\n        text: any;\n    };\n    readonly removeTodo: (text: any) => {\n        type: string;\n        text: any;\n    };\n}","docs":"","start":6,"length":18,"line":0,"character":6,"targetString":"TodoActionCreators"},{"text":"(property) addTodo: (text: any) => {\n    type: string;\n    text: any;\n}","docs":"","start":31,"length":7,"line":1,"character":2,"targetString":"addTodo"},{"text":"(parameter) text: any","docs":"","start":40,"length":4,"line":1,"character":11,"targetString":"text"},{"text":"(property) type: string","docs":"","start":50,"length":4,"line":1,"character":21,"targetString":"type"},{"text":"(property) text: any","docs":"","start":68,"length":4,"line":1,"character":39,"targetString":"text"},{"text":"(property) removeTodo: (text: any) => {\n    type: string;\n    text: any;\n}","docs":"","start":78,"length":10,"line":2,"character":2,"targetString":"removeTodo"},{"text":"(parameter) text: any","docs":"","start":90,"length":4,"line":2,"character":14,"targetString":"text"},{"text":"(property) type: string","docs":"","start":100,"length":4,"line":2,"character":24,"targetString":"type"},{"text":"(property) text: any","docs":"","start":121,"length":4,"line":2,"character":45,"targetString":"text"},{"text":"const TodoActionCreators: {\n    readonly addTodo: (text: any) => {\n        type: string;\n        text: any;\n    };\n    readonly removeTodo: (text: any) => {\n        type: string;\n        text: any;\n    };\n}","docs":"","start":181,"length":18,"line":5,"character":41,"targetString":"TodoActionCreators"}]],"/blog/Redux状态管理/combineReducers":[[{"text":"interface Action<T = any>","docs":"","start":17,"length":6,"line":0,"character":17,"targetString":"Action"},{"text":"(type parameter) T in Action<T = any>","docs":"","start":24,"length":1,"line":0,"character":24,"targetString":"T"},{"text":"(property) Action<T = any>.type: T = any","docs":"","start":37,"length":4,"line":1,"character":2,"targetString":"type"},{"text":"(type parameter) T in Action<T = any>","docs":"","start":43,"length":1,"line":1,"character":8,"targetString":"T"},{"text":"interface AnyAction","docs":"","start":65,"length":9,"line":4,"character":17,"targetString":"AnyAction"},{"text":"interface Action<T = any>","docs":"","start":83,"length":6,"line":4,"character":35,"targetString":"Action"},{"text":"(parameter) extraProps: string","docs":"","start":95,"length":10,"line":5,"character":3,"targetString":"extraProps"},{"text":"type ReducersMapObject<S, A extends Action<any> = AnyAction> = { [K in keyof S]: any; }","docs":"","start":135,"length":17,"line":8,"character":12,"targetString":"ReducersMapObject"},{"text":"(type parameter) S in type ReducersMapObject<S, A extends Action<any> = AnyAction>","docs":"","start":153,"length":1,"line":8,"character":30,"targetString":"S"},{"text":"(type parameter) A in type ReducersMapObject<S, A extends Action<any> = AnyAction>","docs":"","start":156,"length":1,"line":8,"character":33,"targetString":"A"},{"text":"interface Action<T = any>","docs":"","start":166,"length":6,"line":8,"character":43,"targetString":"Action"},{"text":"interface AnyAction","docs":"","start":175,"length":9,"line":8,"character":52,"targetString":"AnyAction"},{"text":"(type parameter) K","docs":"","start":193,"length":1,"line":9,"character":3,"targetString":"K"},{"text":"(type parameter) S in type ReducersMapObject<S, A extends Action<any> = AnyAction>","docs":"","start":204,"length":1,"line":9,"character":14,"targetString":"S"},{"text":"(type parameter) S in type ReducersMapObject<S, A extends Action<any> = AnyAction>","docs":"","start":216,"length":1,"line":9,"character":26,"targetString":"S"},{"text":"(type parameter) K","docs":"","start":218,"length":1,"line":9,"character":28,"targetString":"K"},{"text":"(type parameter) A in type ReducersMapObject<S, A extends Action<any> = AnyAction>","docs":"","start":222,"length":1,"line":9,"character":32,"targetString":"A"},{"text":"const combineReducers: <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>) => (state: S, action: A) => S","docs":"","start":241,"length":15,"line":12,"character":13,"targetString":"combineReducers"},{"text":"(type parameter) S in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":260,"length":1,"line":12,"character":32,"targetString":"S"},{"text":"(type parameter) A in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":263,"length":1,"line":12,"character":35,"targetString":"A"},{"text":"interface Action<T = any>","docs":"","start":273,"length":6,"line":12,"character":45,"targetString":"Action"},{"text":"interface AnyAction","docs":"","start":282,"length":9,"line":12,"character":54,"targetString":"AnyAction"},{"text":"(parameter) reducers: ReducersMapObject<S, A>","docs":"","start":296,"length":8,"line":13,"character":2,"targetString":"reducers"},{"text":"type ReducersMapObject<S, A extends Action<any> = AnyAction> = { [K in keyof S]: any; }","docs":"","start":306,"length":17,"line":13,"character":12,"targetString":"ReducersMapObject"},{"text":"(type parameter) S in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":324,"length":1,"line":13,"character":30,"targetString":"S"},{"text":"(type parameter) A in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":327,"length":1,"line":13,"character":33,"targetString":"A"},{"text":"(parameter) state: S","docs":"","start":336,"length":5,"line":14,"character":6,"targetString":"state"},{"text":"(type parameter) S in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":343,"length":1,"line":14,"character":13,"targetString":"S"},{"text":"(parameter) action: A extends Action<any> = AnyAction","docs":"","start":346,"length":6,"line":14,"character":16,"targetString":"action"},{"text":"(type parameter) A in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":354,"length":1,"line":14,"character":24,"targetString":"A"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":363,"length":6,"line":15,"character":3,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":370,"length":4,"line":15,"character":10,"targetString":"keys"},{"text":"(parameter) reducers: ReducersMapObject<S, A>","docs":"","start":375,"length":8,"line":15,"character":15,"targetString":"reducers"},{"text":"(type parameter) S in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":395,"length":1,"line":15,"character":35,"targetString":"S"},{"text":"(method) Array<keyof S>.reduce<S>(callbackfn: (previousValue: S, currentValue: keyof S, currentIndex: number, array: (keyof S)[]) => S, initialValue: S): S (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":401,"length":6,"line":15,"character":41,"targetString":"reduce"},{"text":"(parameter) nextState: S","docs":"","start":414,"length":9,"line":16,"character":5,"targetString":"nextState"},{"text":"(parameter) key: keyof S","docs":"","start":425,"length":3,"line":16,"character":16,"targetString":"key"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":439,"length":6,"line":17,"character":6,"targetString":"Object"},{"text":"(method) ObjectConstructor.assign<S, {\n    [x: string]: any;\n}>(target: S, source: {\n    [x: string]: any;\n}): S & {\n    [x: string]: any;\n} (+3 overloads)","docs":"Copy the values of all of the enumerable own properties from one or more source objects to a\r\ntarget object. Returns the target object.","start":446,"length":6,"line":17,"character":13,"targetString":"assign"},{"text":"(parameter) nextState: S","docs":"","start":453,"length":9,"line":17,"character":20,"targetString":"nextState"},{"text":"(parameter) key: keyof S","docs":"","start":475,"length":3,"line":18,"character":9,"targetString":"key"},{"text":"(parameter) reducers: ReducersMapObject<S, A>","docs":"","start":481,"length":8,"line":18,"character":15,"targetString":"reducers"},{"text":"(parameter) key: keyof S","docs":"","start":490,"length":3,"line":18,"character":24,"targetString":"key"},{"text":"(parameter) state: S","docs":"","start":495,"length":5,"line":18,"character":29,"targetString":"state"},{"text":"(parameter) key: keyof S","docs":"","start":501,"length":3,"line":18,"character":35,"targetString":"key"},{"text":"(parameter) action: A extends Action<any> = AnyAction","docs":"","start":507,"length":6,"line":18,"character":41,"targetString":"action"},{"text":"(type parameter) S in <S, A extends Action<any> = AnyAction>(reducers: ReducersMapObject<S, A>): (state: S, action: A) => S","docs":"","start":535,"length":1,"line":20,"character":10,"targetString":"S"}],[{"text":"type Reducers = {\n    readonly [reducer: string]: (s: any, a: any) => any;\n}","docs":"","start":5,"length":8,"line":0,"character":5,"targetString":"Reducers"},{"text":"(parameter) reducer: string","docs":"","start":28,"length":7,"line":0,"character":28,"targetString":"reducer"},{"text":"(parameter) s: any","docs":"","start":47,"length":1,"line":0,"character":47,"targetString":"s"},{"text":"(parameter) a: any","docs":"","start":57,"length":1,"line":0,"character":57,"targetString":"a"}],[{"text":"function combineReducers(reducers: any): (state: {} | undefined, action: any) => {}","docs":"","start":24,"length":15,"line":0,"character":24,"targetString":"combineReducers"},{"text":"(parameter) reducers: any","docs":"","start":41,"length":8,"line":0,"character":41,"targetString":"reducers"},{"text":"const reducerKeys: string[]","docs":"","start":61,"length":11,"line":1,"character":8,"targetString":"reducerKeys"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":75,"length":6,"line":1,"character":22,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":82,"length":4,"line":1,"character":29,"targetString":"keys"},{"text":"(parameter) reducers: any","docs":"","start":87,"length":8,"line":1,"character":34,"targetString":"reducers"},{"text":"const finalReducers: {}","docs":"","start":105,"length":13,"line":2,"character":8,"targetString":"finalReducers"},{"text":"let i: number","docs":"","start":197,"length":1,"line":5,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":204,"length":1,"line":5,"character":18,"targetString":"i"},{"text":"const reducerKeys: string[]","docs":"","start":208,"length":11,"line":5,"character":22,"targetString":"reducerKeys"},{"text":"(property) Array<string>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":220,"length":6,"line":5,"character":34,"targetString":"length"},{"text":"let i: number","docs":"","start":228,"length":1,"line":5,"character":42,"targetString":"i"},{"text":"const key: string","docs":"","start":245,"length":3,"line":6,"character":10,"targetString":"key"},{"text":"const reducerKeys: string[]","docs":"","start":251,"length":11,"line":6,"character":16,"targetString":"reducerKeys"},{"text":"let i: number","docs":"","start":263,"length":1,"line":6,"character":28,"targetString":"i"},{"text":"(parameter) reducers: any","docs":"","start":281,"length":8,"line":7,"character":15,"targetString":"reducers"},{"text":"const key: string","docs":"","start":290,"length":3,"line":7,"character":24,"targetString":"key"},{"text":"const finalReducers: {}","docs":"","start":319,"length":13,"line":8,"character":6,"targetString":"finalReducers"},{"text":"const key: string","docs":"","start":333,"length":3,"line":8,"character":20,"targetString":"key"},{"text":"(parameter) reducers: any","docs":"","start":340,"length":8,"line":8,"character":27,"targetString":"reducers"},{"text":"const key: string","docs":"","start":349,"length":3,"line":8,"character":36,"targetString":"key"},{"text":"const finalReducerKeys: string[]","docs":"","start":392,"length":16,"line":12,"character":8,"targetString":"finalReducerKeys"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":411,"length":6,"line":12,"character":27,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":418,"length":4,"line":12,"character":34,"targetString":"keys"},{"text":"const finalReducers: {}","docs":"","start":423,"length":13,"line":12,"character":39,"targetString":"finalReducers"},{"text":"(parameter) state: {}","docs":"","start":449,"length":5,"line":14,"character":10,"targetString":"state"},{"text":"(parameter) action: any","docs":"","start":461,"length":6,"line":14,"character":22,"targetString":"action"},{"text":"let hasChanged: boolean","docs":"","start":482,"length":10,"line":15,"character":8,"targetString":"hasChanged"},{"text":"const nextState: {}","docs":"","start":511,"length":9,"line":16,"character":10,"targetString":"nextState"},{"text":"let i: number","docs":"","start":540,"length":1,"line":18,"character":13,"targetString":"i"},{"text":"let i: number","docs":"","start":547,"length":1,"line":18,"character":20,"targetString":"i"},{"text":"const finalReducerKeys: string[]","docs":"","start":551,"length":16,"line":18,"character":24,"targetString":"finalReducerKeys"},{"text":"(property) Array<string>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":568,"length":6,"line":18,"character":41,"targetString":"length"},{"text":"let i: number","docs":"","start":576,"length":1,"line":18,"character":49,"targetString":"i"},{"text":"const key: string","docs":"","start":595,"length":3,"line":19,"character":12,"targetString":"key"},{"text":"const finalReducerKeys: string[]","docs":"","start":601,"length":16,"line":19,"character":18,"targetString":"finalReducerKeys"},{"text":"let i: number","docs":"","start":618,"length":1,"line":19,"character":35,"targetString":"i"},{"text":"const reducer: any","docs":"","start":664,"length":7,"line":21,"character":12,"targetString":"reducer"},{"text":"const finalReducers: {}","docs":"","start":674,"length":13,"line":21,"character":22,"targetString":"finalReducers"},{"text":"const key: string","docs":"","start":688,"length":3,"line":21,"character":36,"targetString":"key"},{"text":"const previousStateForKey: any","docs":"","start":705,"length":19,"line":22,"character":12,"targetString":"previousStateForKey"},{"text":"(parameter) state: {}","docs":"","start":727,"length":5,"line":22,"character":34,"targetString":"state"},{"text":"const key: string","docs":"","start":733,"length":3,"line":22,"character":40,"targetString":"key"},{"text":"const nextStateForKey: any","docs":"","start":751,"length":15,"line":24,"character":12,"targetString":"nextStateForKey"},{"text":"const reducer: any","docs":"","start":769,"length":7,"line":24,"character":30,"targetString":"reducer"},{"text":"const previousStateForKey: any","docs":"","start":777,"length":19,"line":24,"character":38,"targetString":"previousStateForKey"},{"text":"(parameter) action: any","docs":"","start":798,"length":6,"line":24,"character":59,"targetString":"action"},{"text":"const nextState: {}","docs":"","start":813,"length":9,"line":26,"character":6,"targetString":"nextState"},{"text":"const key: string","docs":"","start":823,"length":3,"line":26,"character":16,"targetString":"key"},{"text":"const nextStateForKey: any","docs":"","start":830,"length":15,"line":26,"character":23,"targetString":"nextStateForKey"},{"text":"let hasChanged: boolean","docs":"","start":872,"length":10,"line":28,"character":6,"targetString":"hasChanged"},{"text":"let hasChanged: boolean","docs":"","start":885,"length":10,"line":28,"character":19,"targetString":"hasChanged"},{"text":"const nextStateForKey: any","docs":"","start":899,"length":15,"line":28,"character":33,"targetString":"nextStateForKey"},{"text":"const previousStateForKey: any","docs":"","start":919,"length":19,"line":28,"character":53,"targetString":"previousStateForKey"},{"text":"let hasChanged: boolean","docs":"","start":972,"length":10,"line":32,"character":4,"targetString":"hasChanged"},{"text":"let hasChanged: boolean","docs":"","start":991,"length":10,"line":33,"character":6,"targetString":"hasChanged"},{"text":"const finalReducerKeys: string[]","docs":"","start":1005,"length":16,"line":33,"character":20,"targetString":"finalReducerKeys"},{"text":"(property) Array<string>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":1022,"length":6,"line":33,"character":37,"targetString":"length"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":1033,"length":6,"line":33,"character":48,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":1040,"length":4,"line":33,"character":55,"targetString":"keys"},{"text":"(parameter) state: {}","docs":"","start":1045,"length":5,"line":33,"character":60,"targetString":"state"},{"text":"(property) Array<string>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":1052,"length":6,"line":33,"character":67,"targetString":"length"},{"text":"let hasChanged: boolean","docs":"","start":1096,"length":10,"line":36,"character":11,"targetString":"hasChanged"},{"text":"const nextState: {}","docs":"","start":1109,"length":9,"line":36,"character":24,"targetString":"nextState"},{"text":"(parameter) state: {}","docs":"","start":1121,"length":5,"line":36,"character":36,"targetString":"state"}]],"/blog/Redux状态管理/compose":[[{"text":"function compose(...funcs: any[]): any","docs":"","start":24,"length":7,"line":0,"character":24,"targetString":"compose"},{"text":"(parameter) funcs: any[]","docs":"","start":35,"length":5,"line":0,"character":35,"targetString":"funcs"},{"text":"(parameter) funcs: any[]","docs":"","start":50,"length":5,"line":1,"character":6,"targetString":"funcs"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":56,"length":6,"line":1,"character":12,"targetString":"length"},{"text":"(parameter) arg: any","docs":"","start":77,"length":3,"line":1,"character":33,"targetString":"arg"},{"text":"(parameter) arg: any","docs":"","start":84,"length":3,"line":1,"character":40,"targetString":"arg"},{"text":"(parameter) funcs: any[]","docs":"","start":94,"length":5,"line":2,"character":6,"targetString":"funcs"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":100,"length":6,"line":2,"character":12,"targetString":"length"},{"text":"(parameter) funcs: any[]","docs":"","start":121,"length":5,"line":2,"character":33,"targetString":"funcs"},{"text":"(parameter) funcs: any[]","docs":"","start":139,"length":5,"line":3,"character":9,"targetString":"funcs"},{"text":"(method) Array<any>.reduce(callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: any[]) => any): any (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":145,"length":6,"line":3,"character":15,"targetString":"reduce"},{"text":"(parameter) a: any","docs":"","start":153,"length":1,"line":3,"character":23,"targetString":"a"},{"text":"(parameter) b: any","docs":"","start":156,"length":1,"line":3,"character":26,"targetString":"b"},{"text":"(parameter) args: any[]","docs":"","start":166,"length":4,"line":3,"character":36,"targetString":"args"},{"text":"(parameter) a: any","docs":"","start":175,"length":1,"line":3,"character":45,"targetString":"a"},{"text":"(parameter) b: any","docs":"","start":177,"length":1,"line":3,"character":47,"targetString":"b"},{"text":"(parameter) args: any[]","docs":"","start":182,"length":4,"line":3,"character":52,"targetString":"args"}],[{"text":"function compose(...fns: ((...value: any) => any)[]): (value: any) => any","docs":"","start":16,"length":7,"line":0,"character":16,"targetString":"compose"},{"text":"(parameter) fns: ((...value: any) => any)[]","docs":"","start":27,"length":3,"line":0,"character":27,"targetString":"fns"},{"text":"interface Array<T>","docs":"","start":32,"length":5,"line":0,"character":32,"targetString":"Array"},{"text":"(parameter) value: any","docs":"","start":42,"length":5,"line":0,"character":42,"targetString":"value"},{"text":"(parameter) value: any","docs":"","start":75,"length":5,"line":1,"character":10,"targetString":"value"},{"text":"(parameter) fns: ((...value: any) => any)[]","docs":"","start":90,"length":3,"line":1,"character":25,"targetString":"fns"},{"text":"(method) Array<(...value: any) => any>.reverse(): ((...value: any) => any)[]","docs":"Reverses the elements in an array in place.\r\nThis method mutates the array and returns a reference to the same array.","start":94,"length":7,"line":1,"character":29,"targetString":"reverse"},{"text":"(method) Array<(...value: any) => any>.reduce<any>(callbackfn: (previousValue: any, currentValue: (...value: any) => any, currentIndex: number, array: ((...value: any) => any)[]) => any, initialValue: any): any (+2 overloads)","docs":"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.","start":104,"length":6,"line":1,"character":39,"targetString":"reduce"},{"text":"(parameter) a: any","docs":"","start":112,"length":1,"line":1,"character":47,"targetString":"a"},{"text":"(parameter) b: (...value: any) => any","docs":"","start":115,"length":1,"line":1,"character":50,"targetString":"b"},{"text":"(parameter) b: (...value: any) => any","docs":"","start":121,"length":1,"line":1,"character":56,"targetString":"b"},{"text":"(parameter) a: any","docs":"","start":123,"length":1,"line":1,"character":58,"targetString":"a"},{"text":"(parameter) value: any","docs":"","start":127,"length":5,"line":1,"character":62,"targetString":"value"}],[{"text":"function compose<T1>(fn0: () => T1): () => T1 (+23 overloads)","docs":"","start":16,"length":7,"line":0,"character":16,"targetString":"compose"},{"text":"(type parameter) T1 in compose<T1>(fn0: () => T1): () => T1","docs":"","start":24,"length":2,"line":0,"character":24,"targetString":"T1"},{"text":"(parameter) fn0: () => T1","docs":"","start":28,"length":3,"line":0,"character":28,"targetString":"fn0"},{"text":"(type parameter) T1 in compose<T1>(fn0: () => T1): () => T1","docs":"","start":39,"length":2,"line":0,"character":39,"targetString":"T1"},{"text":"(type parameter) T1 in compose<T1>(fn0: () => T1): () => T1","docs":"","start":50,"length":2,"line":0,"character":50,"targetString":"T1"},{"text":"function compose<V0, T1>(fn0: (x0: V0) => T1): (x0: V0) => T1 (+23 overloads)","docs":"","start":69,"length":7,"line":1,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, T1>(fn0: (x0: V0) => T1): (x0: V0) => T1","docs":"","start":77,"length":2,"line":1,"character":24,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1>(fn0: (x0: V0) => T1): (x0: V0) => T1","docs":"","start":81,"length":2,"line":1,"character":28,"targetString":"T1"},{"text":"(parameter) fn0: (x0: V0) => T1","docs":"","start":85,"length":3,"line":1,"character":32,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":91,"length":2,"line":1,"character":38,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, T1>(fn0: (x0: V0) => T1): (x0: V0) => T1","docs":"","start":95,"length":2,"line":1,"character":42,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1>(fn0: (x0: V0) => T1): (x0: V0) => T1","docs":"","start":102,"length":2,"line":1,"character":49,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":108,"length":2,"line":1,"character":55,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, T1>(fn0: (x0: V0) => T1): (x0: V0) => T1","docs":"","start":112,"length":2,"line":1,"character":59,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1>(fn0: (x0: V0) => T1): (x0: V0) => T1","docs":"","start":119,"length":2,"line":1,"character":66,"targetString":"T1"},{"text":"function compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1 (+23 overloads)","docs":"","start":138,"length":7,"line":2,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":146,"length":2,"line":2,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":150,"length":2,"line":2,"character":28,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":154,"length":2,"line":2,"character":32,"targetString":"T1"},{"text":"(parameter) fn0: (x0: V0, x1: V1) => T1","docs":"","start":161,"length":3,"line":3,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":167,"length":2,"line":3,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":171,"length":2,"line":3,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":175,"length":2,"line":3,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":179,"length":2,"line":3,"character":20,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":186,"length":2,"line":3,"character":27,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":193,"length":2,"line":4,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":197,"length":2,"line":4,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":201,"length":2,"line":4,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":205,"length":2,"line":4,"character":16,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1>(fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T1","docs":"","start":212,"length":2,"line":4,"character":23,"targetString":"T1"},{"text":"function compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1 (+23 overloads)","docs":"","start":231,"length":7,"line":5,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":239,"length":2,"line":5,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":243,"length":2,"line":5,"character":28,"targetString":"V1"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":247,"length":2,"line":5,"character":32,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":251,"length":2,"line":5,"character":36,"targetString":"T1"},{"text":"(parameter) fn0: (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":258,"length":3,"line":6,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":264,"length":2,"line":6,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":268,"length":2,"line":6,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":272,"length":2,"line":6,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":276,"length":2,"line":6,"character":20,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":280,"length":2,"line":6,"character":24,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":284,"length":2,"line":6,"character":28,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":291,"length":2,"line":6,"character":35,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":298,"length":2,"line":7,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":302,"length":2,"line":7,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":306,"length":2,"line":7,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":310,"length":2,"line":7,"character":16,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":314,"length":2,"line":7,"character":20,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":318,"length":2,"line":7,"character":24,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1>(fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":325,"length":2,"line":7,"character":31,"targetString":"T1"},{"text":"function compose<T1, T2>(fn1: (x: T1) => T2, fn0: () => T1): () => T2 (+23 overloads)","docs":"","start":345,"length":7,"line":9,"character":16,"targetString":"compose"},{"text":"(type parameter) T1 in compose<T1, T2>(fn1: (x: T1) => T2, fn0: () => T1): () => T2","docs":"","start":353,"length":2,"line":9,"character":24,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2>(fn1: (x: T1) => T2, fn0: () => T1): () => T2","docs":"","start":357,"length":2,"line":9,"character":28,"targetString":"T2"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":361,"length":3,"line":9,"character":32,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":367,"length":1,"line":9,"character":38,"targetString":"x"},{"text":"(type parameter) T1 in compose<T1, T2>(fn1: (x: T1) => T2, fn0: () => T1): () => T2","docs":"","start":370,"length":2,"line":9,"character":41,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2>(fn1: (x: T1) => T2, fn0: () => T1): () => T2","docs":"","start":377,"length":2,"line":9,"character":48,"targetString":"T2"},{"text":"(parameter) fn0: () => T1","docs":"","start":381,"length":3,"line":9,"character":52,"targetString":"fn0"},{"text":"(type parameter) T1 in compose<T1, T2>(fn1: (x: T1) => T2, fn0: () => T1): () => T2","docs":"","start":392,"length":2,"line":9,"character":63,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2>(fn1: (x: T1) => T2, fn0: () => T1): () => T2","docs":"","start":403,"length":2,"line":9,"character":74,"targetString":"T2"},{"text":"function compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2 (+23 overloads)","docs":"","start":422,"length":7,"line":10,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":430,"length":2,"line":10,"character":24,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":434,"length":2,"line":10,"character":28,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":438,"length":2,"line":10,"character":32,"targetString":"T2"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":445,"length":3,"line":11,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":451,"length":1,"line":11,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":454,"length":2,"line":11,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":461,"length":2,"line":11,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0) => T1","docs":"","start":467,"length":3,"line":12,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":473,"length":2,"line":12,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":477,"length":2,"line":12,"character":12,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":484,"length":2,"line":12,"character":19,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":491,"length":2,"line":13,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":495,"length":2,"line":13,"character":8,"targetString":"V0"},{"text":"(type parameter) T2 in compose<V0, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0) => T1): (x0: V0) => T2","docs":"","start":502,"length":2,"line":13,"character":15,"targetString":"T2"},{"text":"function compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2 (+23 overloads)","docs":"","start":521,"length":7,"line":14,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":529,"length":2,"line":14,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":533,"length":2,"line":14,"character":28,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":537,"length":2,"line":14,"character":32,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":541,"length":2,"line":14,"character":36,"targetString":"T2"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":548,"length":3,"line":15,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":554,"length":1,"line":15,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":557,"length":2,"line":15,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":564,"length":2,"line":15,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1) => T1","docs":"","start":570,"length":3,"line":16,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":576,"length":2,"line":16,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":580,"length":2,"line":16,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":584,"length":2,"line":16,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":588,"length":2,"line":16,"character":20,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":595,"length":2,"line":16,"character":27,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":602,"length":2,"line":17,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":606,"length":2,"line":17,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":610,"length":2,"line":17,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":614,"length":2,"line":17,"character":16,"targetString":"V1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T2","docs":"","start":621,"length":2,"line":17,"character":23,"targetString":"T2"},{"text":"function compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2 (+23 overloads)","docs":"","start":640,"length":7,"line":18,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":648,"length":2,"line":18,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":652,"length":2,"line":18,"character":28,"targetString":"V1"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":656,"length":2,"line":18,"character":32,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":660,"length":2,"line":18,"character":36,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":664,"length":2,"line":18,"character":40,"targetString":"T2"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":671,"length":3,"line":19,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":677,"length":1,"line":19,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":680,"length":2,"line":19,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":687,"length":2,"line":19,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":693,"length":3,"line":20,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":699,"length":2,"line":20,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":703,"length":2,"line":20,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":707,"length":2,"line":20,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":711,"length":2,"line":20,"character":20,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":715,"length":2,"line":20,"character":24,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":719,"length":2,"line":20,"character":28,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":726,"length":2,"line":20,"character":35,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":733,"length":2,"line":21,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":737,"length":2,"line":21,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":741,"length":2,"line":21,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":745,"length":2,"line":21,"character":16,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":749,"length":2,"line":21,"character":20,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":753,"length":2,"line":21,"character":24,"targetString":"V2"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2>(fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T2","docs":"","start":760,"length":2,"line":21,"character":31,"targetString":"T2"},{"text":"function compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3 (+23 overloads)","docs":"","start":780,"length":7,"line":23,"character":16,"targetString":"compose"},{"text":"(type parameter) T1 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":788,"length":2,"line":23,"character":24,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":792,"length":2,"line":23,"character":28,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":796,"length":2,"line":23,"character":32,"targetString":"T3"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":803,"length":3,"line":24,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":809,"length":1,"line":24,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":812,"length":2,"line":24,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":819,"length":2,"line":24,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":825,"length":3,"line":25,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":831,"length":1,"line":25,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":834,"length":2,"line":25,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":841,"length":2,"line":25,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: () => T1","docs":"","start":847,"length":3,"line":26,"character":2,"targetString":"fn0"},{"text":"(type parameter) T1 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":858,"length":2,"line":26,"character":13,"targetString":"T1"},{"text":"(type parameter) T3 in compose<T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T3","docs":"","start":870,"length":2,"line":27,"character":9,"targetString":"T3"},{"text":"function compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3 (+23 overloads)","docs":"","start":889,"length":7,"line":28,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":897,"length":2,"line":28,"character":24,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":901,"length":2,"line":28,"character":28,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":905,"length":2,"line":28,"character":32,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":909,"length":2,"line":28,"character":36,"targetString":"T3"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":916,"length":3,"line":29,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":922,"length":1,"line":29,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":925,"length":2,"line":29,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":932,"length":2,"line":29,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":938,"length":3,"line":30,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":944,"length":1,"line":30,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":947,"length":2,"line":30,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":954,"length":2,"line":30,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x: V0) => T1","docs":"","start":960,"length":3,"line":31,"character":2,"targetString":"fn0"},{"text":"(parameter) x: V0","docs":"","start":966,"length":1,"line":31,"character":8,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":969,"length":2,"line":31,"character":11,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":976,"length":2,"line":31,"character":18,"targetString":"T1"},{"text":"(parameter) x: V0","docs":"","start":983,"length":1,"line":32,"character":4,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":986,"length":2,"line":32,"character":7,"targetString":"V0"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T3","docs":"","start":993,"length":2,"line":32,"character":14,"targetString":"T3"},{"text":"function compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3 (+23 overloads)","docs":"","start":1012,"length":7,"line":33,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1020,"length":2,"line":33,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1024,"length":2,"line":33,"character":28,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1028,"length":2,"line":33,"character":32,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1032,"length":2,"line":33,"character":36,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1036,"length":2,"line":33,"character":40,"targetString":"T3"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":1043,"length":3,"line":34,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":1049,"length":1,"line":34,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1052,"length":2,"line":34,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1059,"length":2,"line":34,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":1065,"length":3,"line":35,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":1071,"length":1,"line":35,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1074,"length":2,"line":35,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1081,"length":2,"line":35,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1) => T1","docs":"","start":1087,"length":3,"line":36,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":1093,"length":2,"line":36,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1097,"length":2,"line":36,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1101,"length":2,"line":36,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1105,"length":2,"line":36,"character":20,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1112,"length":2,"line":36,"character":27,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":1119,"length":2,"line":37,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1123,"length":2,"line":37,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1127,"length":2,"line":37,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1131,"length":2,"line":37,"character":16,"targetString":"V1"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T3","docs":"","start":1138,"length":2,"line":37,"character":23,"targetString":"T3"},{"text":"function compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3 (+23 overloads)","docs":"","start":1157,"length":7,"line":38,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1165,"length":2,"line":38,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1169,"length":2,"line":38,"character":28,"targetString":"V1"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1173,"length":2,"line":38,"character":32,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1177,"length":2,"line":38,"character":36,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1181,"length":2,"line":38,"character":40,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1185,"length":2,"line":38,"character":44,"targetString":"T3"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":1192,"length":3,"line":39,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":1198,"length":1,"line":39,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1201,"length":2,"line":39,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1208,"length":2,"line":39,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":1214,"length":3,"line":40,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":1220,"length":1,"line":40,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1223,"length":2,"line":40,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1230,"length":2,"line":40,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":1236,"length":3,"line":41,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":1242,"length":2,"line":41,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1246,"length":2,"line":41,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1250,"length":2,"line":41,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1254,"length":2,"line":41,"character":20,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":1258,"length":2,"line":41,"character":24,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1262,"length":2,"line":41,"character":28,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1269,"length":2,"line":41,"character":35,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":1276,"length":2,"line":42,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1280,"length":2,"line":42,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1284,"length":2,"line":42,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1288,"length":2,"line":42,"character":16,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":1292,"length":2,"line":42,"character":20,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1296,"length":2,"line":42,"character":24,"targetString":"V2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3>(fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T3","docs":"","start":1303,"length":2,"line":42,"character":31,"targetString":"T3"},{"text":"function compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4 (+23 overloads)","docs":"","start":1323,"length":7,"line":44,"character":16,"targetString":"compose"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1331,"length":2,"line":44,"character":24,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1335,"length":2,"line":44,"character":28,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1339,"length":2,"line":44,"character":32,"targetString":"T3"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1343,"length":2,"line":44,"character":36,"targetString":"T4"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":1350,"length":3,"line":45,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":1356,"length":1,"line":45,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1359,"length":2,"line":45,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1366,"length":2,"line":45,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":1372,"length":3,"line":46,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":1378,"length":1,"line":46,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1381,"length":2,"line":46,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1388,"length":2,"line":46,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":1394,"length":3,"line":47,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":1400,"length":1,"line":47,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1403,"length":2,"line":47,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1410,"length":2,"line":47,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: () => T1","docs":"","start":1416,"length":3,"line":48,"character":2,"targetString":"fn0"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1427,"length":2,"line":48,"character":13,"targetString":"T1"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T4","docs":"","start":1439,"length":2,"line":49,"character":9,"targetString":"T4"},{"text":"function compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4 (+23 overloads)","docs":"","start":1458,"length":7,"line":50,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1466,"length":2,"line":50,"character":24,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1470,"length":2,"line":50,"character":28,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1474,"length":2,"line":50,"character":32,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1478,"length":2,"line":50,"character":36,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1482,"length":2,"line":50,"character":40,"targetString":"T4"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":1489,"length":3,"line":51,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":1495,"length":1,"line":51,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1498,"length":2,"line":51,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1505,"length":2,"line":51,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":1511,"length":3,"line":52,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":1517,"length":1,"line":52,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1520,"length":2,"line":52,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1527,"length":2,"line":52,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":1533,"length":3,"line":53,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":1539,"length":1,"line":53,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1542,"length":2,"line":53,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1549,"length":2,"line":53,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x: V0) => T1","docs":"","start":1555,"length":3,"line":54,"character":2,"targetString":"fn0"},{"text":"(parameter) x: V0","docs":"","start":1561,"length":1,"line":54,"character":8,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1564,"length":2,"line":54,"character":11,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1571,"length":2,"line":54,"character":18,"targetString":"T1"},{"text":"(parameter) x: V0","docs":"","start":1578,"length":1,"line":55,"character":4,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1581,"length":2,"line":55,"character":7,"targetString":"V0"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T4","docs":"","start":1588,"length":2,"line":55,"character":14,"targetString":"T4"},{"text":"function compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4 (+23 overloads)","docs":"","start":1607,"length":7,"line":56,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1615,"length":2,"line":56,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1619,"length":2,"line":56,"character":28,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1623,"length":2,"line":56,"character":32,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1627,"length":2,"line":56,"character":36,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1631,"length":2,"line":56,"character":40,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1635,"length":2,"line":56,"character":44,"targetString":"T4"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":1642,"length":3,"line":57,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":1648,"length":1,"line":57,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1651,"length":2,"line":57,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1658,"length":2,"line":57,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":1664,"length":3,"line":58,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":1670,"length":1,"line":58,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1673,"length":2,"line":58,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1680,"length":2,"line":58,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":1686,"length":3,"line":59,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":1692,"length":1,"line":59,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1695,"length":2,"line":59,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1702,"length":2,"line":59,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1) => T1","docs":"","start":1708,"length":3,"line":60,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":1714,"length":2,"line":60,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1718,"length":2,"line":60,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1722,"length":2,"line":60,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1726,"length":2,"line":60,"character":20,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1733,"length":2,"line":60,"character":27,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":1740,"length":2,"line":61,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1744,"length":2,"line":61,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1748,"length":2,"line":61,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1752,"length":2,"line":61,"character":16,"targetString":"V1"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T4","docs":"","start":1759,"length":2,"line":61,"character":23,"targetString":"T4"},{"text":"function compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4 (+23 overloads)","docs":"","start":1778,"length":7,"line":62,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1786,"length":2,"line":62,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1790,"length":2,"line":62,"character":28,"targetString":"V1"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1794,"length":2,"line":62,"character":32,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1798,"length":2,"line":62,"character":36,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1802,"length":2,"line":62,"character":40,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1806,"length":2,"line":62,"character":44,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1810,"length":2,"line":62,"character":48,"targetString":"T4"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":1817,"length":3,"line":63,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":1823,"length":1,"line":63,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1826,"length":2,"line":63,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1833,"length":2,"line":63,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":1839,"length":3,"line":64,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":1845,"length":1,"line":64,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1848,"length":2,"line":64,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1855,"length":2,"line":64,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":1861,"length":3,"line":65,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":1867,"length":1,"line":65,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1870,"length":2,"line":65,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1877,"length":2,"line":65,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":1883,"length":3,"line":66,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":1889,"length":2,"line":66,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1893,"length":2,"line":66,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1897,"length":2,"line":66,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1901,"length":2,"line":66,"character":20,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":1905,"length":2,"line":66,"character":24,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1909,"length":2,"line":66,"character":28,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1916,"length":2,"line":66,"character":35,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":1923,"length":2,"line":67,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1927,"length":2,"line":67,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":1931,"length":2,"line":67,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1935,"length":2,"line":67,"character":16,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":1939,"length":2,"line":67,"character":20,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1943,"length":2,"line":67,"character":24,"targetString":"V2"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4>(fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T4","docs":"","start":1950,"length":2,"line":67,"character":31,"targetString":"T4"},{"text":"function compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5 (+23 overloads)","docs":"","start":1970,"length":7,"line":69,"character":16,"targetString":"compose"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":1978,"length":2,"line":69,"character":24,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":1982,"length":2,"line":69,"character":28,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":1986,"length":2,"line":69,"character":32,"targetString":"T3"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":1990,"length":2,"line":69,"character":36,"targetString":"T4"},{"text":"(type parameter) T5 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":1994,"length":2,"line":69,"character":40,"targetString":"T5"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":2001,"length":3,"line":70,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":2007,"length":1,"line":70,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2010,"length":2,"line":70,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2017,"length":2,"line":70,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":2023,"length":3,"line":71,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":2029,"length":1,"line":71,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2032,"length":2,"line":71,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2039,"length":2,"line":71,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":2045,"length":3,"line":72,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":2051,"length":1,"line":72,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2054,"length":2,"line":72,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2061,"length":2,"line":72,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":2067,"length":3,"line":73,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":2073,"length":1,"line":73,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2076,"length":2,"line":73,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2083,"length":2,"line":73,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: () => T1","docs":"","start":2089,"length":3,"line":74,"character":2,"targetString":"fn0"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2100,"length":2,"line":74,"character":13,"targetString":"T1"},{"text":"(type parameter) T5 in compose<T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T5","docs":"","start":2112,"length":2,"line":75,"character":9,"targetString":"T5"},{"text":"function compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5 (+23 overloads)","docs":"","start":2131,"length":7,"line":76,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2139,"length":2,"line":76,"character":24,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2143,"length":2,"line":76,"character":28,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2147,"length":2,"line":76,"character":32,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2151,"length":2,"line":76,"character":36,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2155,"length":2,"line":76,"character":40,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2159,"length":2,"line":76,"character":44,"targetString":"T5"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":2166,"length":3,"line":77,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":2172,"length":1,"line":77,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2175,"length":2,"line":77,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2182,"length":2,"line":77,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":2188,"length":3,"line":78,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":2194,"length":1,"line":78,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2197,"length":2,"line":78,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2204,"length":2,"line":78,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":2210,"length":3,"line":79,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":2216,"length":1,"line":79,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2219,"length":2,"line":79,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2226,"length":2,"line":79,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":2232,"length":3,"line":80,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":2238,"length":1,"line":80,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2241,"length":2,"line":80,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2248,"length":2,"line":80,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x: V0) => T1","docs":"","start":2254,"length":3,"line":81,"character":2,"targetString":"fn0"},{"text":"(parameter) x: V0","docs":"","start":2260,"length":1,"line":81,"character":8,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2263,"length":2,"line":81,"character":11,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2270,"length":2,"line":81,"character":18,"targetString":"T1"},{"text":"(parameter) x: V0","docs":"","start":2277,"length":1,"line":82,"character":4,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2280,"length":2,"line":82,"character":7,"targetString":"V0"},{"text":"(type parameter) T5 in compose<V0, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T5","docs":"","start":2287,"length":2,"line":82,"character":14,"targetString":"T5"},{"text":"function compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5 (+23 overloads)","docs":"","start":2306,"length":7,"line":83,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2314,"length":2,"line":83,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2318,"length":2,"line":83,"character":28,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2322,"length":2,"line":83,"character":32,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2326,"length":2,"line":83,"character":36,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2330,"length":2,"line":83,"character":40,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2334,"length":2,"line":83,"character":44,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2338,"length":2,"line":83,"character":48,"targetString":"T5"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":2345,"length":3,"line":84,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":2351,"length":1,"line":84,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2354,"length":2,"line":84,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2361,"length":2,"line":84,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":2367,"length":3,"line":85,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":2373,"length":1,"line":85,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2376,"length":2,"line":85,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2383,"length":2,"line":85,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":2389,"length":3,"line":86,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":2395,"length":1,"line":86,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2398,"length":2,"line":86,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2405,"length":2,"line":86,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":2411,"length":3,"line":87,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":2417,"length":1,"line":87,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2420,"length":2,"line":87,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2427,"length":2,"line":87,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1) => T1","docs":"","start":2433,"length":3,"line":88,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":2439,"length":2,"line":88,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2443,"length":2,"line":88,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":2447,"length":2,"line":88,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2451,"length":2,"line":88,"character":20,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2458,"length":2,"line":88,"character":27,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":2465,"length":2,"line":89,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2469,"length":2,"line":89,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":2473,"length":2,"line":89,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2477,"length":2,"line":89,"character":16,"targetString":"V1"},{"text":"(type parameter) T5 in compose<V0, V1, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T5","docs":"","start":2484,"length":2,"line":89,"character":23,"targetString":"T5"},{"text":"function compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5 (+23 overloads)","docs":"","start":2503,"length":7,"line":90,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2511,"length":2,"line":90,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2515,"length":2,"line":90,"character":28,"targetString":"V1"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2519,"length":2,"line":90,"character":32,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2523,"length":2,"line":90,"character":36,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2527,"length":2,"line":90,"character":40,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2531,"length":2,"line":90,"character":44,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2535,"length":2,"line":90,"character":48,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2539,"length":2,"line":90,"character":52,"targetString":"T5"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":2546,"length":3,"line":91,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":2552,"length":1,"line":91,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2555,"length":2,"line":91,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2562,"length":2,"line":91,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":2568,"length":3,"line":92,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":2574,"length":1,"line":92,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2577,"length":2,"line":92,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2584,"length":2,"line":92,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":2590,"length":3,"line":93,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":2596,"length":1,"line":93,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2599,"length":2,"line":93,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2606,"length":2,"line":93,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":2612,"length":3,"line":94,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":2618,"length":1,"line":94,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2621,"length":2,"line":94,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2628,"length":2,"line":94,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":2634,"length":3,"line":95,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":2640,"length":2,"line":95,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2644,"length":2,"line":95,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":2648,"length":2,"line":95,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2652,"length":2,"line":95,"character":20,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":2656,"length":2,"line":95,"character":24,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2660,"length":2,"line":95,"character":28,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2667,"length":2,"line":95,"character":35,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":2674,"length":2,"line":96,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2678,"length":2,"line":96,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":2682,"length":2,"line":96,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2686,"length":2,"line":96,"character":16,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":2690,"length":2,"line":96,"character":20,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2694,"length":2,"line":96,"character":24,"targetString":"V2"},{"text":"(type parameter) T5 in compose<V0, V1, V2, T1, T2, T3, T4, T5>(fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T5","docs":"","start":2701,"length":2,"line":96,"character":31,"targetString":"T5"},{"text":"function compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6 (+23 overloads)","docs":"","start":2721,"length":7,"line":98,"character":16,"targetString":"compose"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2729,"length":2,"line":98,"character":24,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2733,"length":2,"line":98,"character":28,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2737,"length":2,"line":98,"character":32,"targetString":"T3"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2741,"length":2,"line":98,"character":36,"targetString":"T4"},{"text":"(type parameter) T5 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2745,"length":2,"line":98,"character":40,"targetString":"T5"},{"text":"(type parameter) T6 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2749,"length":2,"line":98,"character":44,"targetString":"T6"},{"text":"(parameter) fn5: (x: T5) => T6","docs":"","start":2756,"length":3,"line":99,"character":2,"targetString":"fn5"},{"text":"(parameter) x: T5","docs":"","start":2762,"length":1,"line":99,"character":8,"targetString":"x"},{"text":"(type parameter) T5 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2765,"length":2,"line":99,"character":11,"targetString":"T5"},{"text":"(type parameter) T6 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2772,"length":2,"line":99,"character":18,"targetString":"T6"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":2778,"length":3,"line":100,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":2784,"length":1,"line":100,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2787,"length":2,"line":100,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2794,"length":2,"line":100,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":2800,"length":3,"line":101,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":2806,"length":1,"line":101,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2809,"length":2,"line":101,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2816,"length":2,"line":101,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":2822,"length":3,"line":102,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":2828,"length":1,"line":102,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2831,"length":2,"line":102,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2838,"length":2,"line":102,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":2844,"length":3,"line":103,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":2850,"length":1,"line":103,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2853,"length":2,"line":103,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2860,"length":2,"line":103,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: () => T1","docs":"","start":2866,"length":3,"line":104,"character":2,"targetString":"fn0"},{"text":"(type parameter) T1 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2877,"length":2,"line":104,"character":13,"targetString":"T1"},{"text":"(type parameter) T6 in compose<T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: () => T1): () => T6","docs":"","start":2889,"length":2,"line":105,"character":9,"targetString":"T6"},{"text":"function compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6 (+23 overloads)","docs":"","start":2908,"length":7,"line":106,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2916,"length":2,"line":106,"character":24,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2920,"length":2,"line":106,"character":28,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2924,"length":2,"line":106,"character":32,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2928,"length":2,"line":106,"character":36,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2932,"length":2,"line":106,"character":40,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2936,"length":2,"line":106,"character":44,"targetString":"T5"},{"text":"(type parameter) T6 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2940,"length":2,"line":106,"character":48,"targetString":"T6"},{"text":"(parameter) fn5: (x: T5) => T6","docs":"","start":2947,"length":3,"line":107,"character":2,"targetString":"fn5"},{"text":"(parameter) x: T5","docs":"","start":2953,"length":1,"line":107,"character":8,"targetString":"x"},{"text":"(type parameter) T5 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2956,"length":2,"line":107,"character":11,"targetString":"T5"},{"text":"(type parameter) T6 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2963,"length":2,"line":107,"character":18,"targetString":"T6"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":2969,"length":3,"line":108,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":2975,"length":1,"line":108,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2978,"length":2,"line":108,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":2985,"length":2,"line":108,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":2991,"length":3,"line":109,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":2997,"length":1,"line":109,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3000,"length":2,"line":109,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3007,"length":2,"line":109,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":3013,"length":3,"line":110,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":3019,"length":1,"line":110,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3022,"length":2,"line":110,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3029,"length":2,"line":110,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":3035,"length":3,"line":111,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":3041,"length":1,"line":111,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3044,"length":2,"line":111,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3051,"length":2,"line":111,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x: V0) => T1","docs":"","start":3057,"length":3,"line":112,"character":2,"targetString":"fn0"},{"text":"(parameter) x: V0","docs":"","start":3063,"length":1,"line":112,"character":8,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3066,"length":2,"line":112,"character":11,"targetString":"V0"},{"text":"(type parameter) T1 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3073,"length":2,"line":112,"character":18,"targetString":"T1"},{"text":"(parameter) x: V0","docs":"","start":3080,"length":1,"line":113,"character":4,"targetString":"x"},{"text":"(type parameter) V0 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3083,"length":2,"line":113,"character":7,"targetString":"V0"},{"text":"(type parameter) T6 in compose<V0, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x: V0) => T1): (x: V0) => T6","docs":"","start":3090,"length":2,"line":113,"character":14,"targetString":"T6"},{"text":"function compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6 (+23 overloads)","docs":"","start":3109,"length":7,"line":114,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3117,"length":2,"line":114,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3121,"length":2,"line":114,"character":28,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3125,"length":2,"line":114,"character":32,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3129,"length":2,"line":114,"character":36,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3133,"length":2,"line":114,"character":40,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3137,"length":2,"line":114,"character":44,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3141,"length":2,"line":114,"character":48,"targetString":"T5"},{"text":"(type parameter) T6 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3145,"length":2,"line":114,"character":52,"targetString":"T6"},{"text":"(parameter) fn5: (x: T5) => T6","docs":"","start":3152,"length":3,"line":115,"character":2,"targetString":"fn5"},{"text":"(parameter) x: T5","docs":"","start":3158,"length":1,"line":115,"character":8,"targetString":"x"},{"text":"(type parameter) T5 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3161,"length":2,"line":115,"character":11,"targetString":"T5"},{"text":"(type parameter) T6 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3168,"length":2,"line":115,"character":18,"targetString":"T6"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":3174,"length":3,"line":116,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":3180,"length":1,"line":116,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3183,"length":2,"line":116,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3190,"length":2,"line":116,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":3196,"length":3,"line":117,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":3202,"length":1,"line":117,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3205,"length":2,"line":117,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3212,"length":2,"line":117,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":3218,"length":3,"line":118,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":3224,"length":1,"line":118,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3227,"length":2,"line":118,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3234,"length":2,"line":118,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":3240,"length":3,"line":119,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":3246,"length":1,"line":119,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3249,"length":2,"line":119,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3256,"length":2,"line":119,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1) => T1","docs":"","start":3262,"length":3,"line":120,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":3268,"length":2,"line":120,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3272,"length":2,"line":120,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":3276,"length":2,"line":120,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3280,"length":2,"line":120,"character":20,"targetString":"V1"},{"text":"(type parameter) T1 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3287,"length":2,"line":120,"character":27,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":3294,"length":2,"line":121,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3298,"length":2,"line":121,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":3302,"length":2,"line":121,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3306,"length":2,"line":121,"character":16,"targetString":"V1"},{"text":"(type parameter) T6 in compose<V0, V1, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1) => T1): (x0: V0, x1: V1) => T6","docs":"","start":3313,"length":2,"line":121,"character":23,"targetString":"T6"},{"text":"function compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6 (+23 overloads)","docs":"","start":3332,"length":7,"line":122,"character":16,"targetString":"compose"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3340,"length":2,"line":122,"character":24,"targetString":"V0"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3344,"length":2,"line":122,"character":28,"targetString":"V1"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3348,"length":2,"line":122,"character":32,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3352,"length":2,"line":122,"character":36,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3356,"length":2,"line":122,"character":40,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3360,"length":2,"line":122,"character":44,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3364,"length":2,"line":122,"character":48,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3368,"length":2,"line":122,"character":52,"targetString":"T5"},{"text":"(type parameter) T6 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3372,"length":2,"line":122,"character":56,"targetString":"T6"},{"text":"(parameter) fn5: (x: T5) => T6","docs":"","start":3379,"length":3,"line":123,"character":2,"targetString":"fn5"},{"text":"(parameter) x: T5","docs":"","start":3385,"length":1,"line":123,"character":8,"targetString":"x"},{"text":"(type parameter) T5 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3388,"length":2,"line":123,"character":11,"targetString":"T5"},{"text":"(type parameter) T6 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3395,"length":2,"line":123,"character":18,"targetString":"T6"},{"text":"(parameter) fn4: (x: T4) => T5","docs":"","start":3401,"length":3,"line":124,"character":2,"targetString":"fn4"},{"text":"(parameter) x: T4","docs":"","start":3407,"length":1,"line":124,"character":8,"targetString":"x"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3410,"length":2,"line":124,"character":11,"targetString":"T4"},{"text":"(type parameter) T5 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3417,"length":2,"line":124,"character":18,"targetString":"T5"},{"text":"(parameter) fn3: (x: T3) => T4","docs":"","start":3423,"length":3,"line":125,"character":2,"targetString":"fn3"},{"text":"(parameter) x: T3","docs":"","start":3429,"length":1,"line":125,"character":8,"targetString":"x"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3432,"length":2,"line":125,"character":11,"targetString":"T3"},{"text":"(type parameter) T4 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3439,"length":2,"line":125,"character":18,"targetString":"T4"},{"text":"(parameter) fn2: (x: T2) => T3","docs":"","start":3445,"length":3,"line":126,"character":2,"targetString":"fn2"},{"text":"(parameter) x: T2","docs":"","start":3451,"length":1,"line":126,"character":8,"targetString":"x"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3454,"length":2,"line":126,"character":11,"targetString":"T2"},{"text":"(type parameter) T3 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3461,"length":2,"line":126,"character":18,"targetString":"T3"},{"text":"(parameter) fn1: (x: T1) => T2","docs":"","start":3467,"length":3,"line":127,"character":2,"targetString":"fn1"},{"text":"(parameter) x: T1","docs":"","start":3473,"length":1,"line":127,"character":8,"targetString":"x"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3476,"length":2,"line":127,"character":11,"targetString":"T1"},{"text":"(type parameter) T2 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3483,"length":2,"line":127,"character":18,"targetString":"T2"},{"text":"(parameter) fn0: (x0: V0, x1: V1, x2: V2) => T1","docs":"","start":3489,"length":3,"line":128,"character":2,"targetString":"fn0"},{"text":"(parameter) x0: V0","docs":"","start":3495,"length":2,"line":128,"character":8,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3499,"length":2,"line":128,"character":12,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":3503,"length":2,"line":128,"character":16,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3507,"length":2,"line":128,"character":20,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":3511,"length":2,"line":128,"character":24,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3515,"length":2,"line":128,"character":28,"targetString":"V2"},{"text":"(type parameter) T1 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3522,"length":2,"line":128,"character":35,"targetString":"T1"},{"text":"(parameter) x0: V0","docs":"","start":3529,"length":2,"line":129,"character":4,"targetString":"x0"},{"text":"(type parameter) V0 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3533,"length":2,"line":129,"character":8,"targetString":"V0"},{"text":"(parameter) x1: V1","docs":"","start":3537,"length":2,"line":129,"character":12,"targetString":"x1"},{"text":"(type parameter) V1 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3541,"length":2,"line":129,"character":16,"targetString":"V1"},{"text":"(parameter) x2: V2","docs":"","start":3545,"length":2,"line":129,"character":20,"targetString":"x2"},{"text":"(type parameter) V2 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3549,"length":2,"line":129,"character":24,"targetString":"V2"},{"text":"(type parameter) T6 in compose<V0, V1, V2, T1, T2, T3, T4, T5, T6>(fn5: (x: T5) => T6, fn4: (x: T4) => T5, fn3: (x: T3) => T4, fn2: (x: T2) => T3, fn1: (x: T1) => T2, fn0: (x0: V0, x1: V1, x2: V2) => T1): (x0: V0, x1: V1, x2: V2) => T6","docs":"","start":3556,"length":2,"line":129,"character":31,"targetString":"T6"}],[{"text":"const compose: <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1) => (a: A) => R2","docs":"","start":21,"length":7,"line":1,"character":6,"targetString":"compose"},{"text":"(type parameter) A in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":31,"length":1,"line":1,"character":16,"targetString":"A"},{"text":"(type parameter) R1 in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":34,"length":2,"line":1,"character":19,"targetString":"R1"},{"text":"(type parameter) R2 in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":38,"length":2,"line":1,"character":23,"targetString":"R2"},{"text":"(parameter) f2: (a: R1) => R2","docs":"","start":45,"length":2,"line":2,"character":2,"targetString":"f2"},{"text":"(parameter) a: R1","docs":"","start":50,"length":1,"line":2,"character":7,"targetString":"a"},{"text":"(type parameter) R1 in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":53,"length":2,"line":2,"character":10,"targetString":"R1"},{"text":"(type parameter) R2 in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":60,"length":2,"line":2,"character":17,"targetString":"R2"},{"text":"(parameter) f1: (a: A) => R1","docs":"","start":66,"length":2,"line":3,"character":2,"targetString":"f1"},{"text":"(parameter) a: A","docs":"","start":71,"length":1,"line":3,"character":7,"targetString":"a"},{"text":"(type parameter) A in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":74,"length":1,"line":3,"character":10,"targetString":"A"},{"text":"(type parameter) R1 in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":80,"length":2,"line":3,"character":16,"targetString":"R1"},{"text":"(parameter) a: A","docs":"","start":89,"length":1,"line":4,"character":6,"targetString":"a"},{"text":"(type parameter) A in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":92,"length":1,"line":4,"character":9,"targetString":"A"},{"text":"(type parameter) R2 in <A, R1, R2>(f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R2","docs":"","start":98,"length":2,"line":4,"character":15,"targetString":"R2"},{"text":"(parameter) f2: (a: R1) => R2","docs":"","start":104,"length":2,"line":4,"character":21,"targetString":"f2"},{"text":"(parameter) f1: (a: A) => R1","docs":"","start":108,"length":2,"line":4,"character":25,"targetString":"f1"},{"text":"(parameter) a: A","docs":"","start":115,"length":1,"line":4,"character":32,"targetString":"a"},{"text":"(parameter) f2: (a: R1) => R2","docs":"","start":120,"length":2,"line":4,"character":37,"targetString":"f2"},{"text":"(parameter) f1: (a: A) => R1","docs":"","start":123,"length":2,"line":4,"character":40,"targetString":"f1"},{"text":"(parameter) a: A","docs":"","start":126,"length":1,"line":4,"character":43,"targetString":"a"},{"text":"const compose: <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1) => (a: A) => R3","docs":"","start":153,"length":7,"line":7,"character":6,"targetString":"compose"},{"text":"(type parameter) A in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":163,"length":1,"line":7,"character":16,"targetString":"A"},{"text":"(type parameter) R1 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":166,"length":2,"line":7,"character":19,"targetString":"R1"},{"text":"(type parameter) R2 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":170,"length":2,"line":7,"character":23,"targetString":"R2"},{"text":"(type parameter) R3 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":174,"length":2,"line":7,"character":27,"targetString":"R3"},{"text":"(parameter) f3: (a: R2) => R3","docs":"","start":181,"length":2,"line":8,"character":2,"targetString":"f3"},{"text":"(parameter) a: R2","docs":"","start":186,"length":1,"line":8,"character":7,"targetString":"a"},{"text":"(type parameter) R2 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":189,"length":2,"line":8,"character":10,"targetString":"R2"},{"text":"(type parameter) R3 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":196,"length":2,"line":8,"character":17,"targetString":"R3"},{"text":"(parameter) f2: (a: R1) => R2","docs":"","start":202,"length":2,"line":9,"character":2,"targetString":"f2"},{"text":"(parameter) a: R1","docs":"","start":207,"length":1,"line":9,"character":7,"targetString":"a"},{"text":"(type parameter) R1 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":210,"length":2,"line":9,"character":10,"targetString":"R1"},{"text":"(type parameter) R2 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":217,"length":2,"line":9,"character":17,"targetString":"R2"},{"text":"(parameter) f1: (a: A) => R1","docs":"","start":223,"length":2,"line":10,"character":2,"targetString":"f1"},{"text":"(parameter) a: A","docs":"","start":228,"length":1,"line":10,"character":7,"targetString":"a"},{"text":"(type parameter) A in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":231,"length":1,"line":10,"character":10,"targetString":"A"},{"text":"(type parameter) R1 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":237,"length":2,"line":10,"character":16,"targetString":"R1"},{"text":"(parameter) a: A","docs":"","start":246,"length":1,"line":11,"character":6,"targetString":"a"},{"text":"(type parameter) A in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":249,"length":1,"line":11,"character":9,"targetString":"A"},{"text":"(type parameter) R3 in <A, R1, R2, R3>(f3: (a: R2) => R3, f2: (a: R1) => R2, f1: (a: A) => R1): (a: A) => R3","docs":"","start":255,"length":2,"line":11,"character":15,"targetString":"R3"},{"text":"(parameter) f3: (a: R2) => R3","docs":"","start":261,"length":2,"line":11,"character":21,"targetString":"f3"},{"text":"(parameter) f2: (a: R1) => R2","docs":"","start":265,"length":2,"line":11,"character":25,"targetString":"f2"},{"text":"(parameter) f1: (a: A) => R1","docs":"","start":269,"length":2,"line":11,"character":29,"targetString":"f1"},{"text":"(parameter) a: A","docs":"","start":276,"length":1,"line":11,"character":36,"targetString":"a"},{"text":"(parameter) f3: (a: R2) => R3","docs":"","start":281,"length":2,"line":11,"character":41,"targetString":"f3"},{"text":"(parameter) f2: (a: R1) => R2","docs":"","start":284,"length":2,"line":11,"character":44,"targetString":"f2"},{"text":"(parameter) f1: (a: A) => R1","docs":"","start":287,"length":2,"line":11,"character":47,"targetString":"f1"},{"text":"(parameter) a: A","docs":"","start":290,"length":1,"line":11,"character":50,"targetString":"a"}]],"/blog/Redux状态管理/createStore":[[{"text":"function createStore(reducer: any, preloadedState: any, enhancer: any): any","docs":"","start":24,"length":11,"line":0,"character":24,"targetString":"createStore"},{"text":"(parameter) reducer: any","docs":"","start":37,"length":7,"line":0,"character":37,"targetString":"reducer"},{"text":"(parameter) preloadedState: any","docs":"","start":46,"length":14,"line":0,"character":46,"targetString":"preloadedState"},{"text":"(parameter) enhancer: any","docs":"","start":62,"length":8,"line":0,"character":62,"targetString":"enhancer"},{"text":"(parameter) enhancer: any","docs":"","start":105,"length":8,"line":2,"character":13,"targetString":"enhancer"},{"text":"(parameter) enhancer: any","docs":"","start":144,"length":8,"line":3,"character":11,"targetString":"enhancer"},{"text":"function createStore(reducer: any, preloadedState: any, enhancer: any): any","docs":"","start":153,"length":11,"line":3,"character":20,"targetString":"createStore"},{"text":"(parameter) reducer: any","docs":"","start":166,"length":7,"line":3,"character":33,"targetString":"reducer"},{"text":"(parameter) preloadedState: any","docs":"","start":175,"length":14,"line":3,"character":42,"targetString":"preloadedState"},{"text":"let currentReducer: any","docs":"","start":202,"length":14,"line":6,"character":6,"targetString":"currentReducer"},{"text":"(parameter) reducer: any","docs":"","start":219,"length":7,"line":6,"character":23,"targetString":"reducer"},{"text":"let currentState: any","docs":"","start":233,"length":12,"line":7,"character":6,"targetString":"currentState"},{"text":"(parameter) preloadedState: any","docs":"","start":248,"length":14,"line":7,"character":21,"targetString":"preloadedState"},{"text":"const currentListeners: any[]","docs":"","start":271,"length":16,"line":8,"character":8,"targetString":"currentListeners"},{"text":"const getState: () => any","docs":"","start":311,"length":8,"line":10,"character":8,"targetString":"getState"},{"text":"let currentState: any","docs":"","start":328,"length":12,"line":10,"character":25,"targetString":"currentState"},{"text":"(local function) subscribe(listener: any): () => any[]","docs":"","start":353,"length":9,"line":12,"character":11,"targetString":"subscribe"},{"text":"(parameter) listener: any","docs":"","start":364,"length":8,"line":12,"character":22,"targetString":"listener"},{"text":"const currentListeners: any[]","docs":"","start":380,"length":16,"line":13,"character":4,"targetString":"currentListeners"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":397,"length":4,"line":13,"character":21,"targetString":"push"},{"text":"(parameter) listener: any","docs":"","start":402,"length":8,"line":13,"character":26,"targetString":"listener"},{"text":"const currentListeners: any[]","docs":"","start":429,"length":16,"line":14,"character":17,"targetString":"currentListeners"},{"text":"(method) Array<any>.splice(start: number, deleteCount?: number | undefined): any[] (+1 overload)","docs":"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.","start":446,"length":6,"line":14,"character":34,"targetString":"splice"},{"text":"const currentListeners: any[]","docs":"","start":453,"length":16,"line":14,"character":41,"targetString":"currentListeners"},{"text":"(method) Array<any>.indexOf(searchElement: any, fromIndex?: number | undefined): number","docs":"Returns the index of the first occurrence of a value in an array, or -1 if it is not present.","start":470,"length":7,"line":14,"character":58,"targetString":"indexOf"},{"text":"(parameter) listener: any","docs":"","start":478,"length":8,"line":14,"character":66,"targetString":"listener"},{"text":"(local function) dispatch(action: any): any","docs":"","start":508,"length":8,"line":17,"character":11,"targetString":"dispatch"},{"text":"(parameter) action: any","docs":"","start":518,"length":6,"line":17,"character":21,"targetString":"action"},{"text":"let currentState: any","docs":"","start":532,"length":12,"line":18,"character":4,"targetString":"currentState"},{"text":"let currentReducer: any","docs":"","start":547,"length":14,"line":18,"character":19,"targetString":"currentReducer"},{"text":"let currentState: any","docs":"","start":562,"length":12,"line":18,"character":34,"targetString":"currentState"},{"text":"(parameter) action: any","docs":"","start":576,"length":6,"line":18,"character":48,"targetString":"action"},{"text":"const currentListeners: any[]","docs":"","start":588,"length":16,"line":19,"character":4,"targetString":"currentListeners"},{"text":"(method) Array<any>.forEach(callbackfn: (value: any, index: number, array: any[]) => void, thisArg?: any): void","docs":"Performs the specified action for each element in an array.","start":605,"length":7,"line":19,"character":21,"targetString":"forEach"},{"text":"(parameter) l: any","docs":"","start":613,"length":1,"line":19,"character":29,"targetString":"l"},{"text":"(parameter) l: any","docs":"","start":618,"length":1,"line":19,"character":34,"targetString":"l"},{"text":"(parameter) action: any","docs":"","start":634,"length":6,"line":20,"character":11,"targetString":"action"},{"text":"(local function) replaceReducer(nextReducer: any): void","docs":"","start":657,"length":14,"line":23,"character":11,"targetString":"replaceReducer"},{"text":"(parameter) nextReducer: any","docs":"","start":673,"length":11,"line":23,"character":27,"targetString":"nextReducer"},{"text":"let currentReducer: any","docs":"","start":692,"length":14,"line":24,"character":4,"targetString":"currentReducer"},{"text":"(parameter) nextReducer: any","docs":"","start":709,"length":11,"line":24,"character":21,"targetString":"nextReducer"},{"text":"(local function) dispatch(action: any): any","docs":"","start":725,"length":8,"line":25,"character":4,"targetString":"dispatch"},{"text":"(property) type: any","docs":"","start":736,"length":4,"line":25,"character":15,"targetString":"type"},{"text":"(local function) observable(): {\n    [x: number]: () => ...;\n    subscribe(observer: any): {\n        unsubscribe: () => any[];\n    };\n}","docs":"","start":924,"length":10,"line":31,"character":11,"targetString":"observable"},{"text":"const outerSubscribe: (listener: any) => () => any[]","docs":"","start":950,"length":14,"line":32,"character":10,"targetString":"outerSubscribe"},{"text":"(local function) subscribe(listener: any): () => any[]","docs":"","start":967,"length":9,"line":32,"character":27,"targetString":"subscribe"},{"text":"(method) subscribe(observer: any): {\n    unsubscribe: () => any[];\n}","docs":"","start":996,"length":9,"line":34,"character":6,"targetString":"subscribe"},{"text":"(parameter) observer: any","docs":"","start":1007,"length":8,"line":34,"character":17,"targetString":"observer"},{"text":"const observeState: () => any","docs":"","start":1033,"length":12,"line":35,"character":14,"targetString":"observeState"},{"text":"(parameter) observer: any","docs":"","start":1054,"length":8,"line":35,"character":35,"targetString":"observer"},{"text":"(parameter) observer: any","docs":"","start":1071,"length":8,"line":35,"character":52,"targetString":"observer"},{"text":"const getState: () => any","docs":"","start":1085,"length":8,"line":35,"character":66,"targetString":"getState"},{"text":"const observeState: () => any","docs":"","start":1105,"length":12,"line":36,"character":8,"targetString":"observeState"},{"text":"const unsubscribe: () => any[]","docs":"","start":1134,"length":11,"line":37,"character":14,"targetString":"unsubscribe"},{"text":"const outerSubscribe: (listener: any) => () => any[]","docs":"","start":1148,"length":14,"line":37,"character":28,"targetString":"outerSubscribe"},{"text":"const observeState: () => any","docs":"","start":1163,"length":12,"line":37,"character":43,"targetString":"observeState"},{"text":"(property) unsubscribe: () => any[]","docs":"","start":1194,"length":11,"line":38,"character":17,"targetString":"unsubscribe"},{"text":"(local function) dispatch(action: any): any","docs":"","start":1285,"length":8,"line":47,"character":2,"targetString":"dispatch"},{"text":"(property) type: any","docs":"","start":1296,"length":4,"line":47,"character":13,"targetString":"type"},{"text":"(property) dispatch: (action: any) => any","docs":"","start":1338,"length":8,"line":50,"character":4,"targetString":"dispatch"},{"text":"(property) subscribe: (listener: any) => () => any[]","docs":"","start":1352,"length":9,"line":51,"character":4,"targetString":"subscribe"},{"text":"(property) getState: () => any","docs":"","start":1367,"length":8,"line":52,"character":4,"targetString":"getState"},{"text":"(property) replaceReducer: (nextReducer: any) => void","docs":"","start":1381,"length":14,"line":53,"character":4,"targetString":"replaceReducer"},{"text":"(local function) observable(): {\n    [x: number]: () => ...;\n    subscribe(observer: any): {\n        unsubscribe: () => any[];\n    };\n}","docs":"","start":1417,"length":10,"line":54,"character":20,"targetString":"observable"}]],"/blog/Redux状态管理/nextListener的双缓冲技术":[[{"text":"function subscribe(listener: any): () => void","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"subscribe"},{"text":"(parameter) listener: any","docs":"","start":19,"length":8,"line":0,"character":19,"targetString":"listener"},{"text":"(parameter) listener: any","docs":"","start":146,"length":8,"line":5,"character":21,"targetString":"listener"},{"text":"(local function) unsubscribe(): void","docs":"","start":175,"length":11,"line":7,"character":18,"targetString":"unsubscribe"},{"text":"const index: any","docs":"","start":301,"length":5,"line":12,"character":10,"targetString":"index"},{"text":"(parameter) listener: any","docs":"","start":331,"length":8,"line":12,"character":40,"targetString":"listener"},{"text":"const index: any","docs":"","start":366,"length":5,"line":13,"character":25,"targetString":"index"},{"text":"function dispatch(action: any): any","docs":"","start":420,"length":8,"line":18,"character":9,"targetString":"dispatch"},{"text":"(parameter) action: any","docs":"","start":429,"length":6,"line":18,"character":18,"targetString":"action"},{"text":"const listeners: any","docs":"","start":447,"length":9,"line":19,"character":8,"targetString":"listeners"},{"text":"let i: number","docs":"","start":505,"length":1,"line":20,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":512,"length":1,"line":20,"character":18,"targetString":"i"},{"text":"const listeners: any","docs":"","start":516,"length":9,"line":20,"character":22,"targetString":"listeners"},{"text":"let i: number","docs":"","start":534,"length":1,"line":20,"character":40,"targetString":"i"},{"text":"const listener: any","docs":"","start":551,"length":8,"line":21,"character":10,"targetString":"listener"},{"text":"const listeners: any","docs":"","start":562,"length":9,"line":21,"character":21,"targetString":"listeners"},{"text":"let i: number","docs":"","start":572,"length":1,"line":21,"character":31,"targetString":"i"},{"text":"const listener: any","docs":"","start":579,"length":8,"line":22,"character":4,"targetString":"listener"},{"text":"(parameter) action: any","docs":"","start":603,"length":6,"line":24,"character":9,"targetString":"action"}]],"/blog/Redux状态管理/redux-thunk":[[{"text":"function createThunkMiddleware(extraArgument: any): ({ dispatch, getState }: {\n    dispatch: any;\n    getState: any;\n}) => (next: any) => (action: any) => any","docs":"","start":9,"length":21,"line":0,"character":9,"targetString":"createThunkMiddleware"},{"text":"(parameter) extraArgument: any","docs":"","start":31,"length":13,"line":0,"character":31,"targetString":"extraArgument"},{"text":"var dispatch: any","docs":"","start":125,"length":8,"line":2,"character":12,"targetString":"dispatch"},{"text":"var getState: any","docs":"","start":135,"length":8,"line":2,"character":22,"targetString":"getState"},{"text":"(parameter) next: any","docs":"","start":150,"length":4,"line":2,"character":37,"targetString":"next"},{"text":"(parameter) action: any","docs":"","start":158,"length":6,"line":2,"character":45,"targetString":"action"},{"text":"(parameter) action: any","docs":"","start":204,"length":6,"line":4,"character":15,"targetString":"action"},{"text":"(parameter) action: any","docs":"","start":242,"length":6,"line":5,"character":13,"targetString":"action"},{"text":"var dispatch: any","docs":"","start":249,"length":8,"line":5,"character":20,"targetString":"dispatch"},{"text":"var getState: any","docs":"","start":259,"length":8,"line":5,"character":30,"targetString":"getState"},{"text":"(parameter) extraArgument: any","docs":"","start":269,"length":13,"line":5,"character":40,"targetString":"extraArgument"},{"text":"(parameter) next: any","docs":"","start":303,"length":4,"line":8,"character":11,"targetString":"next"},{"text":"(parameter) action: any","docs":"","start":308,"length":6,"line":8,"character":16,"targetString":"action"}]],"/blog/Redux状态管理/redux思想":[[{"text":"const name: void","docs":"","start":35,"length":4,"line":1,"character":2,"targetString":"name"},{"text":"const name: void","docs":"","start":59,"length":4,"line":1,"character":26,"targetString":"name"}]],"/blog/Typescript基础/Typescript类型运算":[[{"text":"type Test = {\n    a: string;\n    b: number;\n}","docs":"","start":5,"length":4,"line":0,"character":5,"targetString":"Test"},{"text":"(property) a: string","docs":"","start":16,"length":1,"line":1,"character":2,"targetString":"a"},{"text":"(property) b: number","docs":"","start":28,"length":1,"line":2,"character":2,"targetString":"b"}],[{"text":"type keys = string | number | symbol","docs":"","start":5,"length":4,"line":0,"character":5,"targetString":"keys"}],[{"text":"type result = any","docs":"","start":5,"length":6,"line":0,"character":5,"targetString":"result"}],[{"text":"type result = {\n    [x: string]: any;\n}","docs":"","start":5,"length":6,"line":0,"character":5,"targetString":"result"},{"text":"(type parameter) P","docs":"","start":17,"length":1,"line":0,"character":17,"targetString":"P"},{"text":"(type parameter) P","docs":"","start":34,"length":1,"line":0,"character":34,"targetString":"P"}],[{"text":"var result: any","docs":"","start":4,"length":6,"line":0,"character":4,"targetString":"result"},{"text":"(parameter) P: any","docs":"","start":22,"length":1,"line":0,"character":22,"targetString":"P"},{"text":"(parameter) P: any","docs":"","start":32,"length":1,"line":0,"character":32,"targetString":"P"}],[{"text":"type isExtendsA = \"yes\" | \"no\"","docs":"","start":5,"length":10,"line":0,"character":5,"targetString":"isExtendsA"},{"text":"type isExtendsAB = \"yes\" | \"no\"","docs":"","start":63,"length":11,"line":1,"character":5,"targetString":"isExtendsAB"}],[{"text":"type Test = {\n    a: string;\n    b: number;\n}","docs":"","start":5,"length":4,"line":0,"character":5,"targetString":"Test"},{"text":"(property) a: string","docs":"","start":16,"length":1,"line":1,"character":2,"targetString":"a"},{"text":"(property) b: number","docs":"","start":28,"length":1,"line":2,"character":2,"targetString":"b"},{"text":"type keys = keyof Test","docs":"","start":46,"length":4,"line":5,"character":5,"targetString":"keys"},{"text":"type Test = {\n    a: string;\n    b: number;\n}","docs":"","start":59,"length":4,"line":5,"character":18,"targetString":"Test"}],[{"text":"type keys_added_c = any","docs":"","start":5,"length":12,"line":0,"character":5,"targetString":"keys_added_c"}],[{"text":"type result = {\n    [x: string]: any;\n}","docs":"","start":5,"length":6,"line":0,"character":5,"targetString":"result"},{"text":"(type parameter) P","docs":"","start":17,"length":1,"line":0,"character":17,"targetString":"P"}],[{"text":"type result = {\n    [x: string]: any;\n}","docs":"","start":5,"length":6,"line":0,"character":5,"targetString":"result"},{"text":"(type parameter) P","docs":"","start":17,"length":1,"line":0,"character":17,"targetString":"P"},{"text":"(type parameter) P","docs":"","start":37,"length":1,"line":0,"character":37,"targetString":"P"},{"text":"(type parameter) P","docs":"","start":59,"length":1,"line":0,"character":59,"targetString":"P"},{"text":"interface Function","docs":"Creates a new function.","start":64,"length":8,"line":0,"character":64,"targetString":"Function"}],[{"text":"type Test = {\n    a: string;\n    b: number;\n}","docs":"","start":5,"length":4,"line":0,"character":5,"targetString":"Test"},{"text":"(property) a: string","docs":"","start":16,"length":1,"line":1,"character":2,"targetString":"a"},{"text":"(property) b: number","docs":"","start":28,"length":1,"line":2,"character":2,"targetString":"b"},{"text":"type GetKeys<T, Filter = any> = { [P in keyof T]: T[P] extends Filter ? P : never; }[keyof T]","docs":"get the keys which extends Filter","start":97,"length":7,"line":7,"character":12,"targetString":"GetKeys"},{"text":"(type parameter) T in type GetKeys<T, Filter = any>","docs":"","start":105,"length":1,"line":7,"character":20,"targetString":"T"},{"text":"(type parameter) Filter in type GetKeys<T, Filter = any>","docs":"","start":108,"length":6,"line":7,"character":23,"targetString":"Filter"},{"text":"(type parameter) P","docs":"","start":129,"length":1,"line":8,"character":3,"targetString":"P"},{"text":"(type parameter) T in type GetKeys<T, Filter = any>","docs":"","start":140,"length":1,"line":8,"character":14,"targetString":"T"},{"text":"(type parameter) T in type GetKeys<T, Filter = any>","docs":"","start":144,"length":1,"line":8,"character":18,"targetString":"T"},{"text":"(type parameter) P","docs":"","start":146,"length":1,"line":8,"character":20,"targetString":"P"},{"text":"(type parameter) Filter in type GetKeys<T, Filter = any>","docs":"","start":157,"length":6,"line":8,"character":31,"targetString":"Filter"},{"text":"(type parameter) P","docs":"","start":166,"length":1,"line":8,"character":40,"targetString":"P"},{"text":"(type parameter) T in type GetKeys<T, Filter = any>","docs":"","start":184,"length":1,"line":9,"character":8,"targetString":"T"},{"text":"type AddKey<T, K> = K | GetKeys<T, any>","docs":"add a key to keys","start":228,"length":6,"line":13,"character":12,"targetString":"AddKey"},{"text":"(type parameter) T in type AddKey<T, K>","docs":"","start":235,"length":1,"line":13,"character":19,"targetString":"T"},{"text":"(type parameter) K in type AddKey<T, K>","docs":"","start":238,"length":1,"line":13,"character":22,"targetString":"K"},{"text":"type GetKeys<T, Filter = any> = { [P in keyof T]: T[P] extends Filter ? P : never; }[keyof T]","docs":"get the keys which extends Filter","start":243,"length":7,"line":13,"character":27,"targetString":"GetKeys"},{"text":"(type parameter) T in type AddKey<T, K>","docs":"","start":251,"length":1,"line":13,"character":35,"targetString":"T"},{"text":"(type parameter) K in type AddKey<T, K>","docs":"","start":256,"length":1,"line":13,"character":40,"targetString":"K"},{"text":"type Add<Target, K extends string | number | symbol, T = any> = { [P in AddKey<Target, K>]: P extends keyof Target ? Target[P] : T; }","docs":"add a key to type","start":299,"length":3,"line":17,"character":12,"targetString":"Add"},{"text":"(type parameter) Target in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":303,"length":6,"line":17,"character":16,"targetString":"Target"},{"text":"(type parameter) K in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":311,"length":1,"line":17,"character":24,"targetString":"K"},{"text":"(type parameter) T in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":347,"length":1,"line":17,"character":60,"targetString":"T"},{"text":"(type parameter) P","docs":"","start":363,"length":1,"line":18,"character":3,"targetString":"P"},{"text":"type AddKey<T, K> = K | GetKeys<T, any>","docs":"add a key to keys","start":368,"length":6,"line":18,"character":8,"targetString":"AddKey"},{"text":"(type parameter) Target in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":375,"length":6,"line":18,"character":15,"targetString":"Target"},{"text":"(type parameter) K in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":383,"length":1,"line":18,"character":23,"targetString":"K"},{"text":"(type parameter) P","docs":"","start":388,"length":1,"line":18,"character":28,"targetString":"P"},{"text":"(type parameter) Target in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":404,"length":6,"line":18,"character":44,"targetString":"Target"},{"text":"(type parameter) Target in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":413,"length":6,"line":18,"character":53,"targetString":"Target"},{"text":"(type parameter) P","docs":"","start":420,"length":1,"line":18,"character":60,"targetString":"P"},{"text":"(type parameter) T in type Add<Target, K extends string | number | symbol, T = any>","docs":"","start":425,"length":1,"line":18,"character":65,"targetString":"T"},{"text":"type result = {\n    c: Function;\n    a: string;\n    b: number;\n}","docs":"","start":435,"length":6,"line":21,"character":5,"targetString":"result"},{"text":"type Add<Target, K extends string | number | symbol, T = any> = { [P in AddKey<Target, K>]: P extends keyof Target ? Target[P] : T; }","docs":"add a key to type","start":444,"length":3,"line":21,"character":14,"targetString":"Add"},{"text":"type Test = {\n    a: string;\n    b: number;\n}","docs":"","start":448,"length":4,"line":21,"character":18,"targetString":"Test"},{"text":"interface Function","docs":"Creates a new function.","start":459,"length":8,"line":21,"character":29,"targetString":"Function"}]],"/blog/Typescript基础/axios拦截器类型":[[{"text":"type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\"> = {\n    OnFulfilled: unknown;\n    OnRejected: unknown;\n}[U]","docs":"","start":5,"length":16,"line":0,"character":5,"targetString":"AxiosInterceptor"},{"text":"(type parameter) T in type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\">","docs":"","start":22,"length":1,"line":0,"character":22,"targetString":"T"},{"text":"(type parameter) U in type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\">","docs":"","start":25,"length":1,"line":0,"character":25,"targetString":"U"},{"text":"(property) OnFulfilled: unknown","docs":"","start":71,"length":11,"line":1,"character":2,"targetString":"OnFulfilled"},{"text":"type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never","docs":"Obtain the parameters of a function type in a tuple","start":84,"length":10,"line":1,"character":15,"targetString":"Parameters"},{"text":"(type parameter) T in type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\">","docs":"","start":119,"length":1,"line":1,"character":50,"targetString":"T"},{"text":"(property) OnRejected: unknown","docs":"","start":136,"length":10,"line":2,"character":2,"targetString":"OnRejected"},{"text":"type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never","docs":"Obtain the parameters of a function type in a tuple","start":148,"length":10,"line":2,"character":14,"targetString":"Parameters"},{"text":"(type parameter) T in type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\">","docs":"","start":183,"length":1,"line":2,"character":49,"targetString":"T"},{"text":"(type parameter) U in type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\">","docs":"","start":200,"length":1,"line":3,"character":2,"targetString":"U"},{"text":"type ResOnFulfilledInterceptor = unknown","docs":"","start":217,"length":25,"line":5,"character":12,"targetString":"ResOnFulfilledInterceptor"},{"text":"type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\"> = {\n    OnFulfilled: unknown;\n    OnRejected: unknown;\n}[U]","docs":"","start":245,"length":16,"line":5,"character":40,"targetString":"AxiosInterceptor"},{"text":"type ResOnRejectedInterceptor = unknown","docs":"","start":311,"length":24,"line":9,"character":12,"targetString":"ResOnRejectedInterceptor"},{"text":"type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\"> = {\n    OnFulfilled: unknown;\n    OnRejected: unknown;\n}[U]","docs":"","start":338,"length":16,"line":9,"character":39,"targetString":"AxiosInterceptor"},{"text":"type ReqOnFulfilledInterceptor = unknown","docs":"","start":403,"length":25,"line":13,"character":12,"targetString":"ReqOnFulfilledInterceptor"},{"text":"type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\"> = {\n    OnFulfilled: unknown;\n    OnRejected: unknown;\n}[U]","docs":"","start":431,"length":16,"line":13,"character":40,"targetString":"AxiosInterceptor"},{"text":"type ReqOnRejectedInterceptor = unknown","docs":"","start":502,"length":24,"line":17,"character":12,"targetString":"ReqOnRejectedInterceptor"},{"text":"type AxiosInterceptor<T, U extends \"OnFulfilled\" | \"OnRejected\"> = {\n    OnFulfilled: unknown;\n    OnRejected: unknown;\n}[U]","docs":"","start":529,"length":16,"line":17,"character":39,"targetString":"AxiosInterceptor"}]],"/blog/Typescript基础/使用ts-compiler来遍历AST处理你的代码":[[{"text":"(alias) namespace ts\nimport ts","docs":"","start":7,"length":2,"line":0,"character":7,"targetString":"ts"},{"text":"const js: string","docs":"","start":70,"length":2,"line":3,"character":6,"targetString":"js"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":75,"length":2,"line":3,"character":11,"targetString":"ts"},{"text":"function ts.transpileModule(input: string, transpileOptions: ts.TranspileOptions): ts.TranspileOutput","docs":"","start":78,"length":15,"line":3,"character":14,"targetString":"transpileModule"},{"text":"(property) ts.TranspileOutput.outputText: string","docs":"","start":120,"length":10,"line":3,"character":56,"targetString":"outputText"}],[{"text":"(alias) namespace ts\nimport ts","docs":"","start":7,"length":2,"line":0,"character":7,"targetString":"ts"},{"text":"function loader(this: any, contents: string): void","docs":"","start":54,"length":6,"line":3,"character":9,"targetString":"loader"},{"text":"(parameter) this: any","docs":"","start":61,"length":4,"line":3,"character":16,"targetString":"this"},{"text":"(parameter) contents: string","docs":"","start":105,"length":8,"line":3,"character":60,"targetString":"contents"},{"text":"const callback: any","docs":"","start":133,"length":8,"line":4,"character":8,"targetString":"callback"},{"text":"const result: ts.TranspileOutput","docs":"","start":191,"length":6,"line":6,"character":8,"targetString":"result"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":200,"length":2,"line":6,"character":17,"targetString":"ts"},{"text":"function ts.transpileModule(input: string, transpileOptions: ts.TranspileOptions): ts.TranspileOutput","docs":"","start":203,"length":15,"line":6,"character":20,"targetString":"transpileModule"},{"text":"(parameter) contents: string","docs":"","start":219,"length":8,"line":6,"character":36,"targetString":"contents"},{"text":"(property) ts.TranspileOptions.compilerOptions?: ts.CompilerOptions | undefined","docs":"","start":235,"length":15,"line":7,"character":4,"targetString":"compilerOptions"},{"text":"const callback: any","docs":"","start":276,"length":8,"line":10,"character":2,"targetString":"callback"},{"text":"const result: ts.TranspileOutput","docs":"","start":291,"length":6,"line":10,"character":17,"targetString":"result"},{"text":"(property) ts.TranspileOutput.outputText: string","docs":"","start":298,"length":10,"line":10,"character":24,"targetString":"outputText"}],[{"text":"(alias) namespace ts\nimport ts","docs":"","start":7,"length":2,"line":0,"character":7,"targetString":"ts"},{"text":"const compilerOptions: {}","docs":"","start":50,"length":15,"line":2,"character":6,"targetString":"compilerOptions"},{"text":"const compilerHost: ts.CompilerHost","docs":"","start":101,"length":12,"line":4,"character":6,"targetString":"compilerHost"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":116,"length":2,"line":4,"character":21,"targetString":"ts"},{"text":"function ts.createCompilerHost(options: ts.CompilerOptions, setParentNodes?: boolean | undefined): ts.CompilerHost","docs":"","start":119,"length":18,"line":4,"character":24,"targetString":"createCompilerHost"},{"text":"const compilerOptions: {}","docs":"","start":138,"length":15,"line":4,"character":43,"targetString":"compilerOptions"},{"text":"const program: ts.Program","docs":"","start":172,"length":7,"line":7,"character":6,"targetString":"program"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":182,"length":2,"line":7,"character":16,"targetString":"ts"},{"text":"function ts.createProgram(rootNames: readonly string[], options: ts.CompilerOptions, host?: ts.CompilerHost | undefined, oldProgram?: ts.Program | undefined, configFileParsingDiagnostics?: readonly ts.Diagnostic[] | undefined): ts.Program (+1 overload)","docs":"Create a new 'Program' instance. A Program is an immutable collection of 'SourceFile's and a 'CompilerOptions'\nthat represent a compilation unit.\n\nCreating a program proceeds from a set of root files, expanding the set of inputs by following imports and\ntriple-slash-reference-path directives transitively. '@types' and triple-slash-reference-types are also pulled in.","start":185,"length":13,"line":7,"character":19,"targetString":"createProgram"},{"text":"const compilerOptions: {}","docs":"","start":215,"length":15,"line":7,"character":49,"targetString":"compilerOptions"},{"text":"const compilerHost: ts.CompilerHost","docs":"","start":232,"length":12,"line":7,"character":66,"targetString":"compilerHost"},{"text":"const program: ts.Program","docs":"","start":261,"length":7,"line":10,"character":0,"targetString":"program"},{"text":"(method) ts.Program.emit(targetSourceFile?: ts.SourceFile | undefined, writeFile?: ts.WriteFileCallback | undefined, cancellationToken?: ts.CancellationToken | undefined, emitOnlyDtsFiles?: boolean | undefined, customTransformers?: ts.CustomTransformers | undefined): ts.EmitResult","docs":"Emits the JavaScript and declaration files.  If targetSourceFile is not specified, then\nthe JavaScript and declaration files will be produced for all the files in this program.\nIf targetSourceFile is specified, then only the JavaScript and declaration for that\nspecific file will be generated.\n\nIf writeFile is not specified then the writeFile callback from the compiler host will be\nused for writing the JavaScript and declaration files.  Otherwise, the writeFile parameter\nwill be invoked when writing the JavaScript and declaration files.","start":269,"length":4,"line":10,"character":8,"targetString":"emit"}],[{"text":"const compilerHost: any","docs":"","start":6,"length":12,"line":0,"character":6,"targetString":"compilerHost"},{"text":"const originalGetSourceFile: any","docs":"","start":77,"length":21,"line":3,"character":6,"targetString":"originalGetSourceFile"},{"text":"const compilerHost: any","docs":"","start":101,"length":12,"line":3,"character":30,"targetString":"compilerHost"},{"text":"const compilerHost: any","docs":"","start":128,"length":12,"line":4,"character":0,"targetString":"compilerHost"},{"text":"(parameter) fileName: any","docs":"","start":157,"length":8,"line":4,"character":29,"targetString":"fileName"},{"text":"var console: Console","docs":"","start":202,"length":7,"line":6,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":210,"length":3,"line":6,"character":10,"targetString":"log"},{"text":"(parameter) fileName: any","docs":"","start":214,"length":8,"line":6,"character":14,"targetString":"fileName"},{"text":"const originalGetSourceFile: any","docs":"","start":233,"length":21,"line":7,"character":9,"targetString":"originalGetSourceFile"},{"text":"const compilerHost: any","docs":"","start":260,"length":12,"line":7,"character":36,"targetString":"compilerHost"},{"text":"(parameter) fileName: any","docs":"","start":274,"length":8,"line":7,"character":50,"targetString":"fileName"},{"text":"const compilerHost: any","docs":"","start":297,"length":12,"line":11,"character":0,"targetString":"compilerHost"},{"text":"(parameter) fileName: any","docs":"","start":323,"length":8,"line":11,"character":26,"targetString":"fileName"},{"text":"(parameter) data: any","docs":"","start":333,"length":4,"line":11,"character":36,"targetString":"data"},{"text":"var console: Console","docs":"","start":367,"length":7,"line":13,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":375,"length":3,"line":13,"character":10,"targetString":"log"},{"text":"(parameter) fileName: any","docs":"","start":379,"length":8,"line":13,"character":14,"targetString":"fileName"},{"text":"(parameter) data: any","docs":"","start":389,"length":4,"line":13,"character":24,"targetString":"data"}],[{"text":"(alias) namespace ts\nimport ts","docs":"","start":7,"length":2,"line":0,"character":7,"targetString":"ts"},{"text":"import tsvfs","docs":"","start":35,"length":5,"line":1,"character":7,"targetString":"tsvfs"},{"text":"import lzstring","docs":"","start":81,"length":8,"line":2,"character":7,"targetString":"lzstring"},{"text":"const fsMap: Map<string, string>","docs":"","start":158,"length":5,"line":5,"character":6,"targetString":"fsMap"},{"text":"import tsvfs","docs":"","start":172,"length":5,"line":5,"character":20,"targetString":"tsvfs"},{"text":"const createDefaultMapFromCDN: (options: ts.CompilerOptions, version: string, cache: boolean, ts: typeof ts, lzstring?: any, fetcher?: ((input: RequestInfo, init?: RequestInit | undefined) => Promise<...>) | undefined, storer?: Storage | undefined) => Promise<...>","docs":"Create a virtual FS Map with the lib files from a particular TypeScript\r\nversion based on the target, Always includes dom ATM.","start":178,"length":23,"line":5,"character":26,"targetString":"createDefaultMapFromCDN"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":224,"length":2,"line":7,"character":2,"targetString":"ts"},{"text":"const ts.version: string","docs":"The version of the TypeScript compiler release","start":227,"length":7,"line":7,"character":5,"targetString":"version"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":246,"length":2,"line":9,"character":2,"targetString":"ts"},{"text":"import lzstring","docs":"","start":252,"length":8,"line":10,"character":2,"targetString":"lzstring"},{"text":"const fsMap: Map<string, string>","docs":"","start":300,"length":5,"line":13,"character":0,"targetString":"fsMap"},{"text":"(method) Map<string, string>.set(key: string, value: string): Map<string, string>","docs":"","start":306,"length":3,"line":13,"character":6,"targetString":"set"},{"text":"const system: ts.System","docs":"","start":354,"length":6,"line":15,"character":6,"targetString":"system"},{"text":"import tsvfs","docs":"","start":363,"length":5,"line":15,"character":15,"targetString":"tsvfs"},{"text":"function createSystem(files: Map<string, string>): ts.System","docs":"Creates an in-memory System object which can be used in a TypeScript program, this\r\nis what provides read/write aspects of the virtual fs","start":369,"length":12,"line":15,"character":21,"targetString":"createSystem"},{"text":"const fsMap: Map<string, string>","docs":"","start":382,"length":5,"line":15,"character":34,"targetString":"fsMap"},{"text":"const host: {\n    compilerHost: ts.CompilerHost;\n    updateFile: (sourceFile: ts.SourceFile) => boolean;\n}","docs":"","start":458,"length":4,"line":18,"character":6,"targetString":"host"},{"text":"import tsvfs","docs":"","start":465,"length":5,"line":18,"character":13,"targetString":"tsvfs"},{"text":"function createVirtualCompilerHost(sys: ts.System, compilerOptions: ts.CompilerOptions, ts: typeof ts): {\n    compilerHost: ts.CompilerHost;\n    updateFile: (sourceFile: ts.SourceFile) => boolean;\n}","docs":"Creates an in-memory CompilerHost -which is essentially an extra wrapper to System\r\nwhich works with TypeScript objects - returns both a compiler host, and a way to add new SourceFile\r\ninstances to the in-memory file system.","start":471,"length":25,"line":18,"character":19,"targetString":"createVirtualCompilerHost"},{"text":"const system: ts.System","docs":"","start":497,"length":6,"line":18,"character":45,"targetString":"system"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":522,"length":2,"line":18,"character":70,"targetString":"ts"},{"text":"const program: ts.Program","docs":"","start":543,"length":7,"line":21,"character":6,"targetString":"program"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":553,"length":2,"line":21,"character":16,"targetString":"ts"},{"text":"function ts.createProgram(createProgramOptions: ts.CreateProgramOptions): ts.Program (+1 overload)","docs":"Create a new 'Program' instance. A Program is an immutable collection of 'SourceFile's and a 'CompilerOptions'\nthat represent a compilation unit.\n\nCreating a program proceeds from a set of root files, expanding the set of inputs by following imports and\ntriple-slash-reference-path directives transitively. '@types' and triple-slash-reference-types are also pulled in.","start":556,"length":13,"line":21,"character":19,"targetString":"createProgram"},{"text":"(property) ts.CreateProgramOptions.rootNames: readonly string[]","docs":"","start":574,"length":9,"line":22,"character":2,"targetString":"rootNames"},{"text":"const fsMap: Map<string, string>","docs":"","start":589,"length":5,"line":22,"character":17,"targetString":"fsMap"},{"text":"(method) Map<string, string>.keys(): IterableIterator<string>","docs":"Returns an iterable of keys in the map","start":595,"length":4,"line":22,"character":23,"targetString":"keys"},{"text":"(property) ts.CreateProgramOptions.options: ts.CompilerOptions","docs":"","start":606,"length":7,"line":23,"character":2,"targetString":"options"},{"text":"(property) ts.CreateProgramOptions.host?: ts.CompilerHost | undefined","docs":"","start":634,"length":4,"line":24,"character":2,"targetString":"host"},{"text":"const host: {\n    compilerHost: ts.CompilerHost;\n    updateFile: (sourceFile: ts.SourceFile) => boolean;\n}","docs":"","start":640,"length":4,"line":24,"character":8,"targetString":"host"},{"text":"(property) compilerHost: ts.CompilerHost","docs":"","start":645,"length":12,"line":24,"character":13,"targetString":"compilerHost"}],[{"text":"(alias) namespace ts\nimport ts","docs":"","start":7,"length":2,"line":0,"character":7,"targetString":"ts"},{"text":"function registerExtension(): void","docs":"","start":38,"length":17,"line":2,"character":9,"targetString":"registerExtension"},{"text":"const old: any","docs":"","start":124,"length":3,"line":5,"character":8,"targetString":"old"},{"text":"(parameter) m: any","docs":"","start":211,"length":1,"line":8,"character":40,"targetString":"m"},{"text":"(parameter) filename: any","docs":"","start":219,"length":8,"line":8,"character":48,"targetString":"filename"},{"text":"const _compile: any","docs":"","start":298,"length":8,"line":11,"character":10,"targetString":"_compile"},{"text":"(parameter) m: any","docs":"","start":309,"length":1,"line":11,"character":21,"targetString":"m"},{"text":"(parameter) m: any","docs":"","start":687,"length":1,"line":18,"character":4,"targetString":"m"},{"text":"(parameter) code: string","docs":"","start":710,"length":4,"line":18,"character":27,"targetString":"code"},{"text":"(parameter) fileName: string","docs":"","start":724,"length":8,"line":18,"character":41,"targetString":"fileName"},{"text":"const result: ts.TranspileOutput","docs":"","start":788,"length":6,"line":20,"character":12,"targetString":"result"},{"text":"(alias) namespace ts\nimport ts","docs":"","start":797,"length":2,"line":20,"character":21,"targetString":"ts"},{"text":"function ts.transpileModule(input: string, transpileOptions: ts.TranspileOptions): ts.TranspileOutput","docs":"","start":800,"length":15,"line":20,"character":24,"targetString":"transpileModule"},{"text":"(parameter) code: string","docs":"","start":816,"length":4,"line":20,"character":40,"targetString":"code"},{"text":"(property) ts.TranspileOptions.compilerOptions?: ts.CompilerOptions | undefined","docs":"","start":832,"length":15,"line":21,"character":8,"targetString":"compilerOptions"},{"text":"const _compile: any","docs":"","start":901,"length":8,"line":24,"character":13,"targetString":"_compile"},{"text":"const result: ts.TranspileOutput","docs":"","start":921,"length":6,"line":24,"character":33,"targetString":"result"},{"text":"(parameter) fileName: string","docs":"","start":929,"length":8,"line":24,"character":41,"targetString":"fileName"},{"text":"const old: any","docs":"","start":957,"length":3,"line":27,"character":11,"targetString":"old"},{"text":"(parameter) m: any","docs":"","start":961,"length":1,"line":27,"character":15,"targetString":"m"},{"text":"(parameter) filename: any","docs":"","start":964,"length":8,"line":27,"character":18,"targetString":"filename"}],[{"text":"const rootNode: any","docs":"","start":18,"length":8,"line":1,"character":6,"targetString":"rootNode"}],[{"text":"(parameter) node: any","docs":"","start":44,"length":4,"line":1,"character":26,"targetString":"node"},{"text":"var console: Console","docs":"","start":81,"length":7,"line":3,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":89,"length":3,"line":3,"character":10,"targetString":"log"},{"text":"(parameter) node: any","docs":"","start":93,"length":4,"line":3,"character":14,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":203,"length":4,"line":8,"character":29,"targetString":"node"},{"text":"var console: Console","docs":"","start":288,"length":7,"line":11,"character":4,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":296,"length":3,"line":11,"character":12,"targetString":"log"},{"text":"(parameter) node: any","docs":"","start":300,"length":4,"line":11,"character":16,"targetString":"node"}],[{"text":"const traverse: (node: any) => void","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"traverse"},{"text":"(parameter) node: any","docs":"","start":18,"length":4,"line":0,"character":18,"targetString":"node"},{"text":"var console: Console","docs":"","start":40,"length":7,"line":1,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":48,"length":3,"line":1,"character":10,"targetString":"log"},{"text":"(parameter) node: any","docs":"","start":52,"length":4,"line":1,"character":14,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":100,"length":4,"line":3,"character":18,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":106,"length":4,"line":3,"character":24,"targetString":"node"},{"text":"const traverse: (node: any) => void","docs":"","start":114,"length":8,"line":3,"character":32,"targetString":"traverse"},{"text":"(parameter) node: any","docs":"","start":123,"length":4,"line":3,"character":41,"targetString":"node"}],[{"text":"const traverse: (node: any) => void","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"traverse"},{"text":"(parameter) node: any","docs":"","start":18,"length":4,"line":0,"character":18,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":67,"length":4,"line":1,"character":29,"targetString":"node"},{"text":"const library: any","docs":"","start":122,"length":7,"line":3,"character":10,"targetString":"library"},{"text":"(parameter) node: any","docs":"","start":132,"length":4,"line":3,"character":20,"targetString":"node"},{"text":"const defaultImport: any","docs":"","start":186,"length":13,"line":6,"character":10,"targetString":"defaultImport"},{"text":"(parameter) node: any","docs":"","start":202,"length":4,"line":6,"character":26,"targetString":"node"},{"text":"const bindings: any","docs":"","start":260,"length":8,"line":9,"character":10,"targetString":"bindings"},{"text":"(parameter) node: any","docs":"","start":271,"length":4,"line":9,"character":21,"targetString":"node"},{"text":"const names: any","docs":"","start":354,"length":5,"line":11,"character":10,"targetString":"names"},{"text":"const bindings: any","docs":"","start":362,"length":8,"line":11,"character":18,"targetString":"bindings"},{"text":"(parameter) item: any","docs":"","start":384,"length":4,"line":11,"character":40,"targetString":"item"},{"text":"(parameter) item: any","docs":"","start":392,"length":4,"line":11,"character":48,"targetString":"item"},{"text":"(parameter) node: any","docs":"","start":440,"length":4,"line":14,"character":18,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":446,"length":4,"line":14,"character":24,"targetString":"node"},{"text":"const traverse: (node: any) => void","docs":"","start":454,"length":8,"line":14,"character":32,"targetString":"traverse"},{"text":"(parameter) node: any","docs":"","start":463,"length":4,"line":14,"character":41,"targetString":"node"}],[{"text":"const program: any","docs":"","start":23,"length":7,"line":1,"character":6,"targetString":"program"},{"text":"const program: any","docs":"","start":117,"length":7,"line":3,"character":0,"targetString":"program"},{"text":"var undefined","docs":"","start":130,"length":9,"line":3,"character":13,"targetString":"undefined"},{"text":"var undefined","docs":"","start":141,"length":9,"line":3,"character":24,"targetString":"undefined"},{"text":"var undefined","docs":"","start":152,"length":9,"line":3,"character":35,"targetString":"undefined"},{"text":"var undefined","docs":"","start":163,"length":9,"line":3,"character":46,"targetString":"undefined"},{"text":"(property) transformers: any","docs":"","start":277,"length":12,"line":7,"character":45,"targetString":"transformers"}],[{"text":"(property) transformers: {\n    before: never[];\n    afterDeclarations: never[];\n    after: never[];\n}","docs":"","start":47,"length":12,"line":1,"character":2,"targetString":"transformers"},{"text":"(property) before: never[]","docs":"","start":67,"length":6,"line":2,"character":4,"targetString":"before"},{"text":"(property) afterDeclarations: never[]","docs":"","start":130,"length":17,"line":3,"character":4,"targetString":"afterDeclarations"},{"text":"(property) after: never[]","docs":"","start":157,"length":5,"line":4,"character":4,"targetString":"after"}],[{"text":"function visitNodes(node: any): any","docs":"","start":16,"length":10,"line":0,"character":16,"targetString":"visitNodes"},{"text":"(parameter) node: any","docs":"","start":27,"length":4,"line":0,"character":27,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":141,"length":4,"line":3,"character":27,"targetString":"node"},{"text":"(parameter) childNode: any","docs":"","start":147,"length":9,"line":3,"character":33,"targetString":"childNode"},{"text":"function visitNodes(node: any): any","docs":"","start":160,"length":10,"line":3,"character":46,"targetString":"visitNodes"},{"text":"(parameter) childNode: any","docs":"","start":171,"length":9,"line":3,"character":57,"targetString":"childNode"},{"text":"(property) transformers: {\n    before: ((context: any) => (node: any) => any)[];\n}","docs":"","start":233,"length":12,"line":7,"character":2,"targetString":"transformers"},{"text":"(property) before: ((context: any) => (node: any) => any)[]","docs":"","start":343,"length":6,"line":10,"character":4,"targetString":"before"},{"text":"(parameter) context: any","docs":"","start":352,"length":7,"line":10,"character":13,"targetString":"context"},{"text":"(parameter) node: any","docs":"","start":363,"length":4,"line":10,"character":24,"targetString":"node"},{"text":"function visitNodes(node: any): any","docs":"","start":371,"length":10,"line":10,"character":32,"targetString":"visitNodes"},{"text":"(parameter) node: any","docs":"","start":382,"length":4,"line":10,"character":43,"targetString":"node"}],[{"text":"function main(): number","docs":"","start":30,"length":4,"line":3,"character":9,"targetString":"main"},{"text":"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error","docs":"","start":60,"length":5,"line":4,"character":12,"targetString":"Error"},{"text":"function main(): number","docs":"","start":71,"length":4,"line":7,"character":0,"targetString":"main"}],[{"text":"var console: Console","docs":"","start":78,"length":7,"line":2,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":86,"length":3,"line":2,"character":10,"targetString":"log"}],[{"text":"const enableNoexcept: boolean","docs":"","start":80,"length":14,"line":2,"character":8,"targetString":"enableNoexcept"},{"text":"(parameter) tag: any","docs":"","start":126,"length":3,"line":2,"character":54,"targetString":"tag"},{"text":"(parameter) tag: any","docs":"","start":180,"length":3,"line":4,"character":11,"targetString":"tag"}],[],[{"text":"const tryStatement: any","docs":"","start":25,"length":12,"line":1,"character":6,"targetString":"tryStatement"},{"text":"var undefined","docs":"","start":255,"length":9,"line":9,"character":2,"targetString":"undefined"}],[{"text":"const consoleErrorStatement: any","docs":"","start":19,"length":21,"line":1,"character":6,"targetString":"consoleErrorStatement"}],[{"text":"const transformNoExcept: (node: any) => any","docs":"","start":37,"length":17,"line":1,"character":13,"targetString":"transformNoExcept"},{"text":"(parameter) node: any","docs":"","start":57,"length":4,"line":1,"character":33,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":98,"length":4,"line":2,"character":31,"targetString":"node"},{"text":"const enable: boolean","docs":"","start":117,"length":6,"line":3,"character":10,"targetString":"enable"},{"text":"(parameter) node: any","docs":"","start":144,"length":4,"line":3,"character":37,"targetString":"node"},{"text":"(parameter) tag: any","docs":"","start":155,"length":3,"line":3,"character":48,"targetString":"tag"},{"text":"(parameter) tag: any","docs":"","start":177,"length":3,"line":4,"character":13,"targetString":"tag"},{"text":"const enable: boolean","docs":"","start":231,"length":6,"line":6,"character":8,"targetString":"enable"},{"text":"(parameter) node: any","docs":"","start":300,"length":4,"line":8,"character":8,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":325,"length":4,"line":9,"character":8,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":349,"length":4,"line":10,"character":8,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":377,"length":4,"line":11,"character":8,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":396,"length":4,"line":12,"character":8,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":425,"length":4,"line":13,"character":8,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":450,"length":4,"line":14,"character":8,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":547,"length":4,"line":17,"character":12,"targetString":"node"},{"text":"var undefined","docs":"","start":997,"length":9,"line":30,"character":12,"targetString":"undefined"},{"text":"(parameter) node: any","docs":"","start":1058,"length":4,"line":36,"character":9,"targetString":"node"}],[{"text":"function visitNodes(node: any): any","docs":"","start":16,"length":10,"line":0,"character":16,"targetString":"visitNodes"},{"text":"(parameter) node: any","docs":"","start":27,"length":4,"line":0,"character":27,"targetString":"node"},{"text":"const newNode: any","docs":"","start":83,"length":7,"line":2,"character":8,"targetString":"newNode"},{"text":"(parameter) node: any","docs":"","start":111,"length":4,"line":2,"character":36,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":123,"length":4,"line":3,"character":6,"targetString":"node"},{"text":"const newNode: any","docs":"","start":132,"length":7,"line":3,"character":15,"targetString":"newNode"},{"text":"const newNode: any","docs":"","start":154,"length":7,"line":4,"character":11,"targetString":"newNode"},{"text":"(parameter) node: any","docs":"","start":193,"length":4,"line":6,"character":27,"targetString":"node"},{"text":"(parameter) childNode: any","docs":"","start":199,"length":9,"line":6,"character":33,"targetString":"childNode"},{"text":"function visitNodes(node: any): any","docs":"","start":212,"length":10,"line":6,"character":46,"targetString":"visitNodes"},{"text":"(parameter) childNode: any","docs":"","start":223,"length":9,"line":6,"character":57,"targetString":"childNode"},{"text":"(property) transformers: {\n    before: ((context: any) => (node: any) => any)[];\n}","docs":"","start":285,"length":12,"line":10,"character":2,"targetString":"transformers"},{"text":"(property) before: ((context: any) => (node: any) => any)[]","docs":"","start":305,"length":6,"line":11,"character":4,"targetString":"before"},{"text":"(parameter) context: any","docs":"","start":314,"length":7,"line":11,"character":13,"targetString":"context"},{"text":"(parameter) node: any","docs":"","start":325,"length":4,"line":11,"character":24,"targetString":"node"},{"text":"function visitNodes(node: any): any","docs":"","start":333,"length":10,"line":11,"character":32,"targetString":"visitNodes"},{"text":"(parameter) node: any","docs":"","start":344,"length":4,"line":11,"character":43,"targetString":"node"}],[{"text":"(property) module: {\n    rules: {\n        test: RegExp;\n        loader: string;\n        options: {\n            getCustomTransformers: () => {\n                before: ((context: any) => (node: any) => any)[];\n            };\n        };\n    }[];\n}","docs":"","start":42,"length":6,"line":2,"character":2,"targetString":"module"},{"text":"(property) rules: {\n    test: RegExp;\n    loader: string;\n    options: {\n        getCustomTransformers: () => {\n            before: ((context: any) => (node: any) => any)[];\n        };\n    };\n}[]","docs":"","start":56,"length":5,"line":3,"character":4,"targetString":"rules"},{"text":"(property) test: RegExp","docs":"","start":81,"length":4,"line":5,"character":8,"targetString":"test"},{"text":"(property) loader: string","docs":"","start":104,"length":6,"line":6,"character":8,"targetString":"loader"},{"text":"(property) options: {\n    getCustomTransformers: () => {\n        before: ((context: any) => (node: any) => any)[];\n    };\n}","docs":"","start":133,"length":7,"line":7,"character":8,"targetString":"options"},{"text":"(property) getCustomTransformers: () => {\n    before: ((context: any) => (node: any) => any)[];\n}","docs":"","start":207,"length":21,"line":9,"character":10,"targetString":"getCustomTransformers"},{"text":"(property) before: ((context: any) => (node: any) => any)[]","docs":"","start":288,"length":6,"line":11,"character":12,"targetString":"before"},{"text":"(parameter) context: any","docs":"","start":297,"length":7,"line":11,"character":21,"targetString":"context"},{"text":"(parameter) node: any","docs":"","start":308,"length":4,"line":11,"character":32,"targetString":"node"},{"text":"(parameter) node: any","docs":"","start":316,"length":4,"line":11,"character":40,"targetString":"node"}]],"/blog/Typescript基础/类型协变与逆变":[[{"text":"type Color = {}","docs":"","start":5,"length":5,"line":0,"character":5,"targetString":"Color"},{"text":"type Red = {\n    red: any;\n}","docs":"","start":22,"length":3,"line":2,"character":5,"targetString":"Red"},{"text":"(property) red: any","docs":"","start":32,"length":3,"line":3,"character":2,"targetString":"red"},{"text":"let useC: (c: Color) => number","docs":"","start":48,"length":4,"line":6,"character":4,"targetString":"useC"},{"text":"(parameter) c: Color","docs":"","start":55,"length":1,"line":6,"character":11,"targetString":"c"},{"text":"type Color = {}","docs":"","start":58,"length":5,"line":6,"character":14,"targetString":"Color"},{"text":"let useR: (r: Red) => number","docs":"","start":79,"length":4,"line":7,"character":4,"targetString":"useR"},{"text":"(parameter) r: Red","docs":"","start":86,"length":1,"line":7,"character":11,"targetString":"r"},{"text":"type Red = {\n    red: any;\n}","docs":"","start":89,"length":3,"line":7,"character":14,"targetString":"Red"},{"text":"let useR: (r: Red) => number","docs":"","start":105,"length":4,"line":9,"character":0,"targetString":"useR"},{"text":"let useC: (c: Color) => number","docs":"","start":112,"length":4,"line":9,"character":7,"targetString":"useC"},{"text":"let useC: (c: Color) => number","docs":"","start":117,"length":4,"line":10,"character":0,"targetString":"useC"},{"text":"let useR: (r: Red) => number","docs":"","start":124,"length":4,"line":10,"character":7,"targetString":"useR"}],[{"text":"type Color = {}","docs":"","start":5,"length":5,"line":0,"character":5,"targetString":"Color"},{"text":"type Red = {\n    red: any;\n}","docs":"","start":22,"length":3,"line":2,"character":5,"targetString":"Red"},{"text":"(property) red: any","docs":"","start":32,"length":3,"line":3,"character":2,"targetString":"red"},{"text":"let c: Color","docs":"","start":48,"length":1,"line":6,"character":4,"targetString":"c"},{"text":"type Color = {}","docs":"","start":51,"length":5,"line":6,"character":7,"targetString":"Color"},{"text":"let r: Red","docs":"","start":61,"length":1,"line":7,"character":4,"targetString":"r"},{"text":"type Red = {\n    red: any;\n}","docs":"","start":64,"length":3,"line":7,"character":7,"targetString":"Red"},{"text":"let c: Color","docs":"","start":81,"length":1,"line":10,"character":0,"targetString":"c"},{"text":"let r: Red","docs":"","start":85,"length":1,"line":10,"character":4,"targetString":"r"},{"text":"let r: Red","docs":"","start":106,"length":1,"line":11,"character":0,"targetString":"r"},{"text":"let c: Color","docs":"","start":110,"length":1,"line":11,"character":4,"targetString":"c"},{"text":"let useC: (c: Color) => number","docs":"","start":137,"length":4,"line":14,"character":4,"targetString":"useC"},{"text":"(parameter) c: Color","docs":"","start":144,"length":1,"line":14,"character":11,"targetString":"c"},{"text":"type Color = {}","docs":"","start":147,"length":5,"line":14,"character":14,"targetString":"Color"},{"text":"let useR: (r: Red) => number","docs":"","start":168,"length":4,"line":15,"character":4,"targetString":"useR"},{"text":"(parameter) r: Red","docs":"","start":176,"length":1,"line":15,"character":12,"targetString":"r"},{"text":"type Red = {\n    red: any;\n}","docs":"","start":179,"length":3,"line":15,"character":15,"targetString":"Red"},{"text":"let useC: (c: Color) => number","docs":"","start":190,"length":4,"line":17,"character":0,"targetString":"useC"},{"text":"let useR: (r: Red) => number","docs":"","start":197,"length":4,"line":17,"character":7,"targetString":"useR"},{"text":"let useR: (r: Red) => number","docs":"","start":299,"length":4,"line":20,"character":0,"targetString":"useR"},{"text":"let useC: (c: Color) => number","docs":"","start":306,"length":4,"line":20,"character":7,"targetString":"useC"},{"text":"let useC2: () => Color","docs":"","start":386,"length":5,"line":24,"character":4,"targetString":"useC2"},{"text":"type Color = {}","docs":"","start":399,"length":5,"line":24,"character":17,"targetString":"Color"},{"text":"let useR2: () => Red","docs":"","start":409,"length":5,"line":25,"character":4,"targetString":"useR2"},{"text":"type Red = {\n    red: any;\n}","docs":"","start":422,"length":3,"line":25,"character":17,"targetString":"Red"},{"text":"let useC2: () => Color","docs":"","start":427,"length":5,"line":27,"character":0,"targetString":"useC2"},{"text":"let useR2: () => Red","docs":"","start":435,"length":5,"line":27,"character":8,"targetString":"useR2"},{"text":"let useR2: () => Red","docs":"","start":441,"length":5,"line":28,"character":0,"targetString":"useR2"},{"text":"let useC2: () => Color","docs":"","start":449,"length":5,"line":28,"character":8,"targetString":"useC2"}]],"/blog/VSCode插件开发/vscode插件编写教程":[[],[{"text":"function activate(context: any): void","docs":"","start":27,"length":8,"line":1,"character":16,"targetString":"activate"},{"text":"(parameter) context: any","docs":"","start":36,"length":7,"line":1,"character":25,"targetString":"context"},{"text":"const createIndexCommand: any","docs":"","start":90,"length":18,"line":3,"character":8,"targetString":"createIndexCommand"},{"text":"(parameter) uri: any","docs":"","start":171,"length":3,"line":5,"character":5,"targetString":"uri"},{"text":"const dirPath: any","docs":"","start":261,"length":7,"line":8,"character":12,"targetString":"dirPath"},{"text":"(parameter) uri: any","docs":"","start":271,"length":3,"line":8,"character":22,"targetString":"uri"},{"text":"(parameter) context: any","docs":"","start":367,"length":7,"line":15,"character":2,"targetString":"context"},{"text":"const createIndexCommand: any","docs":"","start":394,"length":18,"line":15,"character":29,"targetString":"createIndexCommand"},{"text":"function deactivate(): void","docs":"","start":444,"length":10,"line":19,"character":16,"targetString":"deactivate"}],[{"text":"import readdir","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"readdir"},{"text":"import writeFile","docs":"","start":18,"length":9,"line":0,"character":18,"targetString":"writeFile"},{"text":"import join","docs":"","start":49,"length":4,"line":1,"character":9,"targetString":"join"},{"text":"import promisify","docs":"","start":77,"length":9,"line":2,"character":9,"targetString":"promisify"},{"text":"const indexFileName: \"index\"","docs":"","start":108,"length":13,"line":4,"character":6,"targetString":"indexFileName"},{"text":"const indexFileExt: \".ts\"","docs":"","start":138,"length":12,"line":5,"character":6,"targetString":"indexFileExt"},{"text":"function genIndex(dir: string): Promise<void>","docs":"","start":182,"length":8,"line":7,"character":22,"targetString":"genIndex"},{"text":"(parameter) dir: string","docs":"","start":191,"length":3,"line":7,"character":31,"targetString":"dir"},{"text":"const result: any","docs":"","start":232,"length":6,"line":9,"character":8,"targetString":"result"},{"text":"import promisify","docs":"","start":247,"length":9,"line":9,"character":23,"targetString":"promisify"},{"text":"import readdir","docs":"","start":257,"length":7,"line":9,"character":33,"targetString":"readdir"},{"text":"(parameter) dir: string","docs":"","start":266,"length":3,"line":9,"character":42,"targetString":"dir"},{"text":"const moduleNames: any","docs":"","start":308,"length":11,"line":12,"character":8,"targetString":"moduleNames"},{"text":"const result: any","docs":"","start":322,"length":6,"line":12,"character":22,"targetString":"result"},{"text":"(parameter) n: any","docs":"","start":338,"length":1,"line":13,"character":9,"targetString":"n"},{"text":"(parameter) n: any","docs":"","start":343,"length":1,"line":13,"character":14,"targetString":"n"},{"text":"(parameter) m: any","docs":"","start":372,"length":1,"line":14,"character":12,"targetString":"m"},{"text":"(parameter) m: any","docs":"","start":377,"length":1,"line":14,"character":17,"targetString":"m"},{"text":"const indexFileName: \"index\"","docs":"","start":383,"length":13,"line":14,"character":23,"targetString":"indexFileName"},{"text":"const content: any","docs":"","start":421,"length":7,"line":17,"character":8,"targetString":"content"},{"text":"const moduleNames: any","docs":"","start":431,"length":11,"line":17,"character":18,"targetString":"moduleNames"},{"text":"(parameter) n: any","docs":"","start":447,"length":1,"line":17,"character":34,"targetString":"n"},{"text":"(parameter) n: any","docs":"","start":472,"length":1,"line":17,"character":59,"targetString":"n"},{"text":"import promisify","docs":"","start":511,"length":9,"line":20,"character":8,"targetString":"promisify"},{"text":"import writeFile","docs":"","start":521,"length":9,"line":20,"character":18,"targetString":"writeFile"},{"text":"import join","docs":"","start":532,"length":4,"line":20,"character":29,"targetString":"join"},{"text":"(parameter) dir: string","docs":"","start":537,"length":3,"line":20,"character":34,"targetString":"dir"},{"text":"const indexFileName: \"index\"","docs":"","start":542,"length":13,"line":20,"character":39,"targetString":"indexFileName"},{"text":"const indexFileExt: \".ts\"","docs":"","start":558,"length":12,"line":20,"character":55,"targetString":"indexFileExt"},{"text":"const content: any","docs":"","start":573,"length":7,"line":20,"character":70,"targetString":"content"}]],"/blog/博客建设日志/网站架构和技术栈":[[],[]],"/blog/微信小程序/loginCode和加密向量":[[{"text":"(property) data: {\n    code: null;\n}","docs":"","start":9,"length":4,"line":1,"character":2,"targetString":"data"},{"text":"(property) code: null","docs":"","start":21,"length":4,"line":2,"character":4,"targetString":"code"},{"text":"(method) onLoad(options: any): void","docs":"","start":40,"length":6,"line":4,"character":2,"targetString":"onLoad"},{"text":"(parameter) options: any","docs":"","start":47,"length":7,"line":4,"character":9,"targetString":"options"},{"text":"(property) success: ({ code }: {\n    code: any;\n}) => void","docs":"","start":108,"length":7,"line":7,"character":6,"targetString":"success"},{"text":"var code: any","docs":"","start":120,"length":4,"line":7,"character":18,"targetString":"code"},{"text":"(property) code: any","docs":"","start":156,"length":4,"line":8,"character":23,"targetString":"code"},{"text":"(method) getUserInfo(event: any): Promise<void>","docs":"","start":193,"length":11,"line":12,"character":8,"targetString":"getUserInfo"},{"text":"(parameter) event: any","docs":"","start":205,"length":5,"line":12,"character":20,"targetString":"event"},{"text":"const encryptedData: any","docs":"","start":226,"length":13,"line":13,"character":12,"targetString":"encryptedData"},{"text":"const iv: any","docs":"","start":241,"length":2,"line":13,"character":27,"targetString":"iv"},{"text":"(parameter) event: any","docs":"","start":248,"length":5,"line":13,"character":34,"targetString":"event"},{"text":"const options: {\n    encryptedData: any;\n    iv: any;\n    code: any;\n}","docs":"","start":271,"length":7,"line":14,"character":10,"targetString":"options"},{"text":"(property) encryptedData: any","docs":"","start":289,"length":13,"line":15,"character":6,"targetString":"encryptedData"},{"text":"(property) iv: any","docs":"","start":310,"length":2,"line":16,"character":6,"targetString":"iv"},{"text":"(property) code: any","docs":"","start":338,"length":4,"line":18,"character":6,"targetString":"code"},{"text":"const options: {\n    encryptedData: any;\n    iv: any;\n    code: any;\n}","docs":"","start":382,"length":7,"line":20,"character":16,"targetString":"options"}]],"/blog/微信小程序/webview小程序3种登录方案":[[{"text":"const getProgramEnv: () => Promise<\"mini\" | \"wechat\" | \"h5\">","docs":"","start":13,"length":13,"line":0,"character":13,"targetString":"getProgramEnv"},{"text":"var Promise: PromiseConstructor\nnew <\"mini\" | \"wechat\" | \"h5\">(executor: (resolve: (value: \"mini\" | \"wechat\" | \"h5\" | PromiseLike<\"mini\" | \"wechat\" | \"h5\">) => void, reject: (reason?: any) => void) => void) => Promise<...>","docs":"Creates a new Promise.","start":41,"length":7,"line":1,"character":6,"targetString":"Promise"},{"text":"(parameter) resolve: (value: \"mini\" | \"wechat\" | \"h5\" | PromiseLike<\"mini\" | \"wechat\" | \"h5\">) => void","docs":"","start":75,"length":7,"line":1,"character":40,"targetString":"resolve"},{"text":"const ua: string","docs":"","start":98,"length":2,"line":2,"character":10,"targetString":"ua"},{"text":"var navigator: Navigator","docs":"","start":103,"length":9,"line":2,"character":15,"targetString":"navigator"},{"text":"(property) NavigatorID.userAgent: string","docs":"","start":114,"length":9,"line":2,"character":26,"targetString":"userAgent"},{"text":"(method) String.toLowerCase(): string","docs":"Converts all the alphabetic characters in a string to lowercase.","start":125,"length":11,"line":2,"character":37,"targetString":"toLowerCase"},{"text":"const ua: string","docs":"","start":153,"length":2,"line":3,"character":8,"targetString":"ua"},{"text":"(method) String.indexOf(searchString: string, position?: number | undefined): number","docs":"Returns the position of the first occurrence of a substring.","start":156,"length":7,"line":3,"character":11,"targetString":"indexOf"},{"text":"(parameter) res: any","docs":"","start":276,"length":3,"line":5,"character":28,"targetString":"res"},{"text":"(parameter) res: any","docs":"","start":297,"length":3,"line":6,"character":12,"targetString":"res"},{"text":"(parameter) resolve: (value: \"mini\" | \"wechat\" | \"h5\" | PromiseLike<\"mini\" | \"wechat\" | \"h5\">) => void","docs":"","start":345,"length":7,"line":8,"character":10,"targetString":"resolve"},{"text":"(parameter) resolve: (value: \"mini\" | \"wechat\" | \"h5\" | PromiseLike<\"mini\" | \"wechat\" | \"h5\">) => void","docs":"","start":413,"length":7,"line":11,"character":10,"targetString":"resolve"},{"text":"(parameter) resolve: (value: \"mini\" | \"wechat\" | \"h5\" | PromiseLike<\"mini\" | \"wechat\" | \"h5\">) => void","docs":"","start":484,"length":7,"line":16,"character":6,"targetString":"resolve"}],[{"text":"(property) url: string","docs":"","start":39,"length":3,"line":1,"character":28,"targetString":"url"}],[{"text":"const getWxLoginCode: () => void","docs":"微信H5登录 oauth2","start":38,"length":14,"line":3,"character":13,"targetString":"getWxLoginCode"},{"text":"var location: Location","docs":"","start":65,"length":8,"line":4,"character":2,"targetString":"location"},{"text":"(property) Location.href: string","docs":"Returns the Location object's URL.\n\nCan be set, to navigate to the given URL.","start":74,"length":4,"line":4,"character":11,"targetString":"href"}]],"/blog/微信小程序/webview调试方法":[[{"text":"var location: Location","docs":"","start":0,"length":8,"line":0,"character":0,"targetString":"location"},{"text":"(property) Location.href: string","docs":"Returns the Location object's URL.\n\nCan be set, to navigate to the given URL.","start":9,"length":4,"line":0,"character":9,"targetString":"href"}]],"/blog/微信小程序/公众号H5登录":[[{"text":"const oauth2_authorize: \"https://open.weixin.qq.com/connect/oauth2/authorize?appid={appid}&redirect_uri={redirect_uri}&response_type=code&scope=snsapi_userinfo#wechat_redirect\"","docs":"","start":6,"length":16,"line":0,"character":6,"targetString":"oauth2_authorize"}]],"/blog/微信小程序/获取url参数":[[{"text":"(property) url: string","docs":"","start":16,"length":3,"line":0,"character":16,"targetString":"url"}],[{"text":"(method) onLoad(options: any): void","docs":"","start":9,"length":6,"line":1,"character":2,"targetString":"onLoad"},{"text":"(parameter) options: any","docs":"","start":16,"length":7,"line":1,"character":9,"targetString":"options"},{"text":"const redirectPath: any","docs":"","start":37,"length":12,"line":2,"character":10,"targetString":"redirectPath"},{"text":"(parameter) options: any","docs":"","start":52,"length":7,"line":2,"character":25,"targetString":"options"}]],"/blog/微信小程序/返回前刷新上一个页面":[[{"text":"const pages: any","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"pages"},{"text":"const prevPage: any","docs":"","start":45,"length":8,"line":2,"character":6,"targetString":"prevPage"},{"text":"const pages: any","docs":"","start":56,"length":5,"line":2,"character":17,"targetString":"pages"},{"text":"const pages: any","docs":"","start":62,"length":5,"line":2,"character":23,"targetString":"pages"},{"text":"const prevPage: any","docs":"","start":80,"length":8,"line":3,"character":0,"targetString":"prevPage"},{"text":"(property) url: string","docs":"","start":123,"length":3,"line":5,"character":2,"targetString":"url"}]],"/blog/性能优化/api缓存":[[{"text":"import AxiosInstance","docs":"","start":9,"length":13,"line":0,"character":9,"targetString":"AxiosInstance"},{"text":"import LRU","docs":"","start":45,"length":3,"line":1,"character":7,"targetString":"LRU"},{"text":"const ApiUrls: {\n    list: string;\n}","docs":"","start":73,"length":7,"line":3,"character":6,"targetString":"ApiUrls"},{"text":"(property) list: string","docs":"","start":87,"length":4,"line":4,"character":2,"targetString":"list"},{"text":"const cachelist: \"list\"[]","docs":"","start":115,"length":9,"line":7,"character":6,"targetString":"cachelist"},{"text":"interface Array<T>","docs":"","start":126,"length":5,"line":7,"character":17,"targetString":"Array"},{"text":"const ApiUrls: {\n    list: string;\n}","docs":"","start":145,"length":7,"line":7,"character":36,"targetString":"ApiUrls"},{"text":"const HOUR_MS: 3600000","docs":"","start":172,"length":7,"line":9,"character":6,"targetString":"HOUR_MS"},{"text":"const cache: any","docs":"","start":197,"length":5,"line":11,"character":6,"targetString":"cache"},{"text":"import LRU","docs":"","start":209,"length":3,"line":11,"character":18,"targetString":"LRU"},{"text":"(property) max: number","docs":"","start":230,"length":3,"line":12,"character":2,"targetString":"max"},{"text":"(property) maxAge: number","docs":"","start":243,"length":6,"line":13,"character":2,"targetString":"maxAge"},{"text":"const HOUR_MS: 3600000","docs":"","start":255,"length":7,"line":13,"character":14,"targetString":"HOUR_MS"},{"text":"const matchCache: (api: string) => boolean","docs":"","start":280,"length":10,"line":16,"character":6,"targetString":"matchCache"},{"text":"(parameter) api: string","docs":"","start":294,"length":3,"line":16,"character":20,"targetString":"api"},{"text":"const cachelist: \"list\"[]","docs":"","start":323,"length":9,"line":17,"character":11,"targetString":"cachelist"},{"text":"(method) Array<\"list\">.find(predicate: (value: \"list\", index: number, obj: \"list\"[]) => unknown, thisArg?: any): \"list\" | undefined (+1 overload)","docs":"Returns the value of the first element in the array where predicate is true, and undefined\r\notherwise.","start":333,"length":4,"line":17,"character":21,"targetString":"find"},{"text":"(parameter) key: \"list\"","docs":"","start":338,"length":3,"line":17,"character":26,"targetString":"key"},{"text":"(parameter) api: string","docs":"","start":345,"length":3,"line":17,"character":33,"targetString":"api"},{"text":"(method) String.endsWith(searchString: string, endPosition?: number | undefined): boolean","docs":"Returns true if the sequence of elements of searchString converted to a String is the\r\nsame as the corresponding elements of this object (converted to a String) starting at\r\nendPosition – length(this). Otherwise returns false.","start":349,"length":8,"line":17,"character":37,"targetString":"endsWith"},{"text":"const ApiUrls: {\n    list: string;\n}","docs":"","start":358,"length":7,"line":17,"character":46,"targetString":"ApiUrls"},{"text":"(parameter) key: \"list\"","docs":"","start":366,"length":3,"line":17,"character":54,"targetString":"key"},{"text":"type Req = {\n    url?: any;\n    method?: any;\n}","docs":"","start":381,"length":3,"line":20,"character":5,"targetString":"Req"},{"text":"(property) url?: any","docs":"","start":391,"length":3,"line":21,"character":2,"targetString":"url"},{"text":"(property) method?: any","docs":"","start":403,"length":6,"line":22,"character":2,"targetString":"method"},{"text":"const getCacheSize: () => any","docs":"","start":432,"length":12,"line":25,"character":13,"targetString":"getCacheSize"},{"text":"const cache: any","docs":"","start":453,"length":5,"line":25,"character":34,"targetString":"cache"},{"text":"const getCache: (req: Req) => any","docs":"","start":483,"length":8,"line":27,"character":13,"targetString":"getCache"},{"text":"(parameter) req: Req","docs":"","start":495,"length":3,"line":27,"character":25,"targetString":"req"},{"text":"type Req = {\n    url?: any;\n    method?: any;\n}","docs":"","start":500,"length":3,"line":27,"character":30,"targetString":"Req"},{"text":"const url: any","docs":"","start":518,"length":3,"line":28,"character":8,"targetString":"url"},{"text":"(parameter) req: Req","docs":"","start":524,"length":3,"line":28,"character":14,"targetString":"req"},{"text":"(property) url?: any","docs":"","start":528,"length":3,"line":28,"character":18,"targetString":"url"},{"text":"const method: any","docs":"","start":540,"length":6,"line":29,"character":8,"targetString":"method"},{"text":"(parameter) req: Req","docs":"","start":549,"length":3,"line":29,"character":17,"targetString":"req"},{"text":"(property) method?: any","docs":"","start":553,"length":6,"line":29,"character":21,"targetString":"method"},{"text":"const url: any","docs":"","start":566,"length":3,"line":30,"character":6,"targetString":"url"},{"text":"const method: any","docs":"","start":573,"length":6,"line":30,"character":13,"targetString":"method"},{"text":"const api: any","docs":"","start":603,"length":3,"line":31,"character":10,"targetString":"api"},{"text":"const url: any","docs":"","start":609,"length":3,"line":31,"character":16,"targetString":"url"},{"text":"const api: any","docs":"","start":635,"length":3,"line":32,"character":8,"targetString":"api"},{"text":"const matchCache: (api: string) => boolean","docs":"","start":642,"length":10,"line":32,"character":15,"targetString":"matchCache"},{"text":"const api: any","docs":"","start":653,"length":3,"line":32,"character":26,"targetString":"api"},{"text":"var console: Console","docs":"","start":667,"length":7,"line":33,"character":6,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":675,"length":3,"line":33,"character":14,"targetString":"log"},{"text":"const url: any","docs":"","start":695,"length":3,"line":33,"character":34,"targetString":"url"},{"text":"const cache: any","docs":"","start":715,"length":5,"line":34,"character":13,"targetString":"cache"},{"text":"const url: any","docs":"","start":725,"length":3,"line":34,"character":23,"targetString":"url"},{"text":"const setCache: (req: Req, data: any) => void","docs":"","start":756,"length":8,"line":39,"character":13,"targetString":"setCache"},{"text":"(parameter) req: Req","docs":"","start":768,"length":3,"line":39,"character":25,"targetString":"req"},{"text":"type Req = {\n    url?: any;\n    method?: any;\n}","docs":"","start":773,"length":3,"line":39,"character":30,"targetString":"Req"},{"text":"(parameter) data: any","docs":"","start":778,"length":4,"line":39,"character":35,"targetString":"data"},{"text":"const url: any","docs":"","start":802,"length":3,"line":40,"character":8,"targetString":"url"},{"text":"(parameter) req: Req","docs":"","start":808,"length":3,"line":40,"character":14,"targetString":"req"},{"text":"(property) url?: any","docs":"","start":812,"length":3,"line":40,"character":18,"targetString":"url"},{"text":"const method: any","docs":"","start":824,"length":6,"line":41,"character":8,"targetString":"method"},{"text":"(parameter) req: Req","docs":"","start":833,"length":3,"line":41,"character":17,"targetString":"req"},{"text":"(property) method?: any","docs":"","start":837,"length":6,"line":41,"character":21,"targetString":"method"},{"text":"const url: any","docs":"","start":850,"length":3,"line":42,"character":6,"targetString":"url"},{"text":"const method: any","docs":"","start":857,"length":6,"line":42,"character":13,"targetString":"method"},{"text":"const api: any","docs":"","start":887,"length":3,"line":43,"character":10,"targetString":"api"},{"text":"const url: any","docs":"","start":893,"length":3,"line":43,"character":16,"targetString":"url"},{"text":"const api: any","docs":"","start":919,"length":3,"line":44,"character":8,"targetString":"api"},{"text":"const matchCache: (api: string) => boolean","docs":"","start":926,"length":10,"line":44,"character":15,"targetString":"matchCache"},{"text":"const api: any","docs":"","start":937,"length":3,"line":44,"character":26,"targetString":"api"},{"text":"var console: Console","docs":"","start":951,"length":7,"line":45,"character":6,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":959,"length":3,"line":45,"character":14,"targetString":"log"},{"text":"const url: any","docs":"","start":979,"length":3,"line":45,"character":34,"targetString":"url"},{"text":"const cache: any","docs":"","start":992,"length":5,"line":46,"character":6,"targetString":"cache"},{"text":"const url: any","docs":"","start":1002,"length":3,"line":46,"character":16,"targetString":"url"},{"text":"(parameter) data: any","docs":"","start":1007,"length":4,"line":46,"character":21,"targetString":"data"},{"text":"const delCache: (req: Req) => void","docs":"","start":1039,"length":8,"line":51,"character":13,"targetString":"delCache"},{"text":"(parameter) req: Req","docs":"","start":1051,"length":3,"line":51,"character":25,"targetString":"req"},{"text":"type Req = {\n    url?: any;\n    method?: any;\n}","docs":"","start":1056,"length":3,"line":51,"character":30,"targetString":"Req"},{"text":"const url: any","docs":"","start":1074,"length":3,"line":52,"character":8,"targetString":"url"},{"text":"(parameter) req: Req","docs":"","start":1080,"length":3,"line":52,"character":14,"targetString":"req"},{"text":"(property) url?: any","docs":"","start":1084,"length":3,"line":52,"character":18,"targetString":"url"},{"text":"const method: any","docs":"","start":1096,"length":6,"line":53,"character":8,"targetString":"method"},{"text":"(parameter) req: Req","docs":"","start":1105,"length":3,"line":53,"character":17,"targetString":"req"},{"text":"(property) method?: any","docs":"","start":1109,"length":6,"line":53,"character":21,"targetString":"method"},{"text":"const url: any","docs":"","start":1122,"length":3,"line":54,"character":6,"targetString":"url"},{"text":"const method: any","docs":"","start":1129,"length":6,"line":54,"character":13,"targetString":"method"},{"text":"const api: any","docs":"","start":1159,"length":3,"line":55,"character":10,"targetString":"api"},{"text":"const url: any","docs":"","start":1165,"length":3,"line":55,"character":16,"targetString":"url"},{"text":"const api: any","docs":"","start":1191,"length":3,"line":56,"character":8,"targetString":"api"},{"text":"const matchCache: (api: string) => boolean","docs":"","start":1198,"length":10,"line":56,"character":15,"targetString":"matchCache"},{"text":"const api: any","docs":"","start":1209,"length":3,"line":56,"character":26,"targetString":"api"},{"text":"var console: Console","docs":"","start":1223,"length":7,"line":57,"character":6,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":1231,"length":3,"line":57,"character":14,"targetString":"log"},{"text":"const url: any","docs":"","start":1251,"length":3,"line":57,"character":34,"targetString":"url"},{"text":"const cache: any","docs":"","start":1264,"length":5,"line":58,"character":6,"targetString":"cache"},{"text":"const url: any","docs":"","start":1274,"length":3,"line":58,"character":16,"targetString":"url"},{"text":"const clearCache: () => void","docs":"","start":1305,"length":10,"line":63,"character":13,"targetString":"clearCache"},{"text":"const cache: any","docs":"","start":1328,"length":5,"line":64,"character":2,"targetString":"cache"},{"text":"const toQueryStr: (obj: any) => string","docs":"","start":1351,"length":10,"line":67,"character":6,"targetString":"toQueryStr"},{"text":"(parameter) obj: any","docs":"","start":1365,"length":3,"line":67,"character":20,"targetString":"obj"},{"text":"var URLSearchParams: new (init?: string | string[][] | Record<string, string> | URLSearchParams | undefined) => URLSearchParams","docs":"","start":1382,"length":15,"line":67,"character":37,"targetString":"URLSearchParams"},{"text":"(parameter) obj: any","docs":"","start":1398,"length":3,"line":67,"character":53,"targetString":"obj"},{"text":"(method) URLSearchParams.toString(): string","docs":"Returns a string containing a query string suitable for use in a URL. Does not include the question mark.","start":1403,"length":8,"line":67,"character":58,"targetString":"toString"},{"text":"const enhanceAxiosCache: (axios: any) => any","docs":"","start":1428,"length":17,"line":69,"character":13,"targetString":"enhanceAxiosCache"},{"text":"(parameter) axios: any","docs":"","start":1449,"length":5,"line":69,"character":34,"targetString":"axios"},{"text":"import AxiosInstance","docs":"","start":1456,"length":13,"line":69,"character":41,"targetString":"AxiosInstance"},{"text":"const originGet: any","docs":"","start":1484,"length":9,"line":70,"character":8,"targetString":"originGet"},{"text":"(parameter) axios: any","docs":"","start":1496,"length":5,"line":70,"character":20,"targetString":"axios"},{"text":"(parameter) axios: any","docs":"","start":1508,"length":5,"line":71,"character":2,"targetString":"axios"},{"text":"(parameter) url: any","docs":"","start":1527,"length":3,"line":71,"character":21,"targetString":"url"},{"text":"(parameter) config: any","docs":"","start":1532,"length":6,"line":71,"character":26,"targetString":"config"},{"text":"const queryStr: string","docs":"","start":1555,"length":8,"line":72,"character":10,"targetString":"queryStr"},{"text":"(parameter) config: any","docs":"","start":1566,"length":6,"line":72,"character":21,"targetString":"config"},{"text":"const toQueryStr: (obj: any) => string","docs":"","start":1583,"length":10,"line":72,"character":38,"targetString":"toQueryStr"},{"text":"(parameter) config: any","docs":"","start":1594,"length":6,"line":72,"character":49,"targetString":"config"},{"text":"const cacheKey: {\n    url: string;\n    method: string;\n}","docs":"","start":1624,"length":8,"line":73,"character":10,"targetString":"cacheKey"},{"text":"(property) url: string","docs":"","start":1637,"length":3,"line":73,"character":23,"targetString":"url"},{"text":"(parameter) url: any","docs":"","start":1645,"length":3,"line":73,"character":31,"targetString":"url"},{"text":"const queryStr: string","docs":"","start":1652,"length":8,"line":73,"character":38,"targetString":"queryStr"},{"text":"(property) method: string","docs":"","start":1664,"length":6,"line":73,"character":50,"targetString":"method"},{"text":"const result: any","docs":"","start":1690,"length":6,"line":74,"character":10,"targetString":"result"},{"text":"const getCache: (req: Req) => any","docs":"","start":1699,"length":8,"line":74,"character":19,"targetString":"getCache"},{"text":"const cacheKey: {\n    url: string;\n    method: string;\n}","docs":"","start":1708,"length":8,"line":74,"character":28,"targetString":"cacheKey"},{"text":"const result: any","docs":"","start":1726,"length":6,"line":75,"character":8,"targetString":"result"},{"text":"const result: any","docs":"","start":1749,"length":6,"line":76,"character":13,"targetString":"result"},{"text":"const apiRes: any","docs":"","start":1784,"length":6,"line":79,"character":12,"targetString":"apiRes"},{"text":"const originGet: any","docs":"","start":1799,"length":9,"line":79,"character":27,"targetString":"originGet"},{"text":"(parameter) url: any","docs":"","start":1809,"length":3,"line":79,"character":37,"targetString":"url"},{"text":"(parameter) config: any","docs":"","start":1814,"length":6,"line":79,"character":42,"targetString":"config"},{"text":"const setCache: (req: Req, data: any) => void","docs":"","start":1828,"length":8,"line":80,"character":6,"targetString":"setCache"},{"text":"const cacheKey: {\n    url: string;\n    method: string;\n}","docs":"","start":1837,"length":8,"line":80,"character":15,"targetString":"cacheKey"},{"text":"const apiRes: any","docs":"","start":1847,"length":6,"line":80,"character":25,"targetString":"apiRes"},{"text":"const apiRes: any","docs":"","start":1868,"length":6,"line":81,"character":13,"targetString":"apiRes"},{"text":"(local var) err: unknown","docs":"","start":1895,"length":3,"line":82,"character":13,"targetString":"err"},{"text":"const delCache: (req: Req) => void","docs":"","start":1908,"length":8,"line":83,"character":6,"targetString":"delCache"},{"text":"const cacheKey: {\n    url: string;\n    method: string;\n}","docs":"","start":1917,"length":8,"line":83,"character":15,"targetString":"cacheKey"},{"text":"(local var) err: unknown","docs":"","start":1939,"length":3,"line":84,"character":12,"targetString":"err"},{"text":"(parameter) axios: any","docs":"","start":1962,"length":5,"line":87,"character":9,"targetString":"axios"}],[{"text":"const request: any","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"request"},{"text":"const request: any","docs":"","start":58,"length":7,"line":2,"character":0,"targetString":"request"}]],"/blog/性能优化/memorize函数":[[{"text":"const store: WeakMap<object, any>","docs":"","start":6,"length":5,"line":0,"character":6,"targetString":"store"},{"text":"var WeakMap: WeakMapConstructor\nnew <object, any>(entries?: readonly [object, any][] | null | undefined) => WeakMap<object, any> (+1 overload)","docs":"","start":18,"length":7,"line":0,"character":18,"targetString":"WeakMap"},{"text":"const MAX_SIZE: 10","docs":"","start":52,"length":8,"line":1,"character":6,"targetString":"MAX_SIZE"},{"text":"const memo: (fn: any, thisArg: any) => (...args: any[]) => any","docs":"","start":85,"length":4,"line":3,"character":6,"targetString":"memo"},{"text":"(parameter) fn: any","docs":"","start":93,"length":2,"line":3,"character":14,"targetString":"fn"},{"text":"(parameter) thisArg: any","docs":"","start":97,"length":7,"line":3,"character":18,"targetString":"thisArg"},{"text":"(parameter) args: any[]","docs":"","start":113,"length":4,"line":3,"character":34,"targetString":"args"},{"text":"const meta: any","docs":"","start":178,"length":4,"line":5,"character":8,"targetString":"meta"},{"text":"const store: WeakMap<object, any>","docs":"","start":185,"length":5,"line":5,"character":15,"targetString":"store"},{"text":"(method) WeakMap<object, any>.get(key: object): any","docs":"","start":191,"length":3,"line":5,"character":21,"targetString":"get"},{"text":"(parameter) fn: any","docs":"","start":195,"length":2,"line":5,"character":25,"targetString":"fn"},{"text":"const meta: any","docs":"","start":224,"length":4,"line":8,"character":6,"targetString":"meta"},{"text":"const mo: any","docs":"","start":265,"length":2,"line":10,"character":10,"targetString":"mo"},{"text":"const meta: any","docs":"","start":270,"length":4,"line":10,"character":15,"targetString":"meta"},{"text":"var p: any","docs":"","start":282,"length":1,"line":10,"character":27,"targetString":"p"},{"text":"var p: any","docs":"","start":294,"length":1,"line":10,"character":39,"targetString":"p"},{"text":"(parameter) args: any[]","docs":"","start":297,"length":4,"line":10,"character":42,"targetString":"args"},{"text":"const mo: any","docs":"","start":326,"length":2,"line":12,"character":8,"targetString":"mo"},{"text":"const mo: any","docs":"","start":337,"length":2,"line":12,"character":19,"targetString":"mo"},{"text":"const O: any","docs":"","start":371,"length":1,"line":16,"character":8,"targetString":"O"},{"text":"(parameter) fn: any","docs":"","start":375,"length":2,"line":16,"character":12,"targetString":"fn"},{"text":"(parameter) thisArg: any","docs":"","start":384,"length":7,"line":16,"character":21,"targetString":"thisArg"},{"text":"(parameter) args: any[]","docs":"","start":393,"length":4,"line":16,"character":30,"targetString":"args"},{"text":"const meta: any","docs":"","start":417,"length":4,"line":19,"character":2,"targetString":"meta"},{"text":"(parameter) args: any[]","docs":"","start":428,"length":4,"line":19,"character":13,"targetString":"args"},{"text":"const O: any","docs":"","start":434,"length":1,"line":19,"character":19,"targetString":"O"},{"text":"const store: WeakMap<object, any>","docs":"","start":440,"length":5,"line":20,"character":2,"targetString":"store"},{"text":"(method) WeakMap<object, any>.set(key: object, value: any): WeakMap<object, any>","docs":"","start":446,"length":3,"line":20,"character":8,"targetString":"set"},{"text":"(parameter) fn: any","docs":"","start":450,"length":2,"line":20,"character":12,"targetString":"fn"},{"text":"const meta: any","docs":"","start":454,"length":4,"line":20,"character":16,"targetString":"meta"},{"text":"const meta: any","docs":"","start":482,"length":4,"line":23,"character":9,"targetString":"meta"},{"text":"const MAX_SIZE: 10","docs":"","start":497,"length":8,"line":23,"character":24,"targetString":"MAX_SIZE"},{"text":"const meta: any","docs":"","start":507,"length":4,"line":23,"character":34,"targetString":"meta"},{"text":"const O: any","docs":"","start":544,"length":1,"line":26,"character":9,"targetString":"O"}],[{"text":"const diff: (a: any, b: any) => boolean","docs":"","start":6,"length":4,"line":0,"character":6,"targetString":"diff"},{"text":"(parameter) a: any","docs":"","start":14,"length":1,"line":0,"character":14,"targetString":"a"},{"text":"(parameter) b: any","docs":"","start":17,"length":1,"line":0,"character":17,"targetString":"b"},{"text":"let i: any","docs":"","start":31,"length":1,"line":1,"character":6,"targetString":"i"},{"text":"(parameter) a: any","docs":"","start":35,"length":1,"line":1,"character":10,"targetString":"a"},{"text":"(parameter) b: any","docs":"","start":46,"length":1,"line":1,"character":21,"targetString":"b"},{"text":"(parameter) a: any","docs":"","start":57,"length":1,"line":1,"character":32,"targetString":"a"},{"text":"(parameter) b: any","docs":"","start":68,"length":1,"line":1,"character":43,"targetString":"b"},{"text":"let i: any","docs":"","start":87,"length":1,"line":3,"character":9,"targetString":"i"},{"text":"(parameter) a: any","docs":"","start":96,"length":1,"line":3,"character":18,"targetString":"a"},{"text":"let i: any","docs":"","start":98,"length":1,"line":3,"character":20,"targetString":"i"},{"text":"(parameter) b: any","docs":"","start":105,"length":1,"line":3,"character":27,"targetString":"b"},{"text":"let i: any","docs":"","start":107,"length":1,"line":3,"character":29,"targetString":"i"}]],"/blog/性能优化/打包优化":[[],[{"text":"import useInterval","docs":"","start":13,"length":11,"line":1,"character":7,"targetString":"useInterval"},{"text":"import useInterval","docs":"","start":55,"length":11,"line":3,"character":7,"targetString":"useInterval"}],[{"text":"import a","docs":"","start":66,"length":1,"line":5,"character":9,"targetString":"a"}]],"/blog/性能优化/用于撤销与反撤销的对象池":[[{"text":"const recorder: {\n    record: never[];\n    max: number;\n    currentIndex: number;\n    push(...values: any[]): void;\n    clean(): void;\n    forward(): never;\n    back(): never;\n}","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"recorder"},{"text":"(property) record: never[]","docs":"","start":23,"length":6,"line":1,"character":4,"targetString":"record"},{"text":"(property) max: number","docs":"","start":39,"length":3,"line":2,"character":4,"targetString":"max"},{"text":"(property) currentIndex: number","docs":"","start":51,"length":12,"line":3,"character":4,"targetString":"currentIndex"},{"text":"(method) push(...values: any[]): void","docs":"","start":72,"length":4,"line":4,"character":4,"targetString":"push"},{"text":"(parameter) values: any[]","docs":"","start":80,"length":6,"line":4,"character":12,"targetString":"values"},{"text":"(property) record: never[]","docs":"","start":103,"length":6,"line":5,"character":13,"targetString":"record"},{"text":"(method) Array<never>.push(...items: never[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":110,"length":4,"line":5,"character":20,"targetString":"push"},{"text":"(parameter) values: any[]","docs":"","start":118,"length":6,"line":5,"character":28,"targetString":"values"},{"text":"(method) clean(): void","docs":"","start":139,"length":5,"line":6,"character":13,"targetString":"clean"},{"text":"(method) clean(): void","docs":"","start":158,"length":5,"line":8,"character":4,"targetString":"clean"},{"text":"(property) record: never[]","docs":"","start":188,"length":6,"line":9,"character":20,"targetString":"record"},{"text":"(property) Array<never>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":195,"length":6,"line":9,"character":27,"targetString":"length"},{"text":"(property) max: number","docs":"","start":209,"length":3,"line":9,"character":41,"targetString":"max"},{"text":"(property) record: never[]","docs":"","start":233,"length":6,"line":10,"character":17,"targetString":"record"},{"text":"(method) Array<never>.shift(): undefined","docs":"Removes the first element from an array and returns it.\r\nIf the array is empty, undefined is returned and the array is not modified.","start":240,"length":5,"line":10,"character":24,"targetString":"shift"},{"text":"(property) currentIndex: number","docs":"","start":271,"length":12,"line":12,"character":13,"targetString":"currentIndex"},{"text":"(property) record: never[]","docs":"","start":291,"length":6,"line":12,"character":33,"targetString":"record"},{"text":"(property) Array<never>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":298,"length":6,"line":12,"character":40,"targetString":"length"},{"text":"(method) forward(): never","docs":"","start":320,"length":7,"line":14,"character":4,"targetString":"forward"},{"text":"(property) currentIndex: number","docs":"","start":345,"length":12,"line":15,"character":13,"targetString":"currentIndex"},{"text":"(property) currentIndex: number","docs":"","start":377,"length":12,"line":16,"character":17,"targetString":"currentIndex"},{"text":"(property) record: never[]","docs":"","start":397,"length":6,"line":16,"character":37,"targetString":"record"},{"text":"(property) Array<never>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":404,"length":6,"line":16,"character":44,"targetString":"length"},{"text":"(property) currentIndex: number","docs":"","start":438,"length":12,"line":17,"character":23,"targetString":"currentIndex"},{"text":"(property) currentIndex: number","docs":"","start":478,"length":12,"line":18,"character":23,"targetString":"currentIndex"},{"text":"(property) record: never[]","docs":"","start":511,"length":6,"line":19,"character":20,"targetString":"record"},{"text":"(property) currentIndex: number","docs":"","start":523,"length":12,"line":19,"character":32,"targetString":"currentIndex"},{"text":"(method) back(): never","docs":"","start":548,"length":4,"line":21,"character":4,"targetString":"back"},{"text":"(property) currentIndex: number","docs":"","start":570,"length":12,"line":22,"character":13,"targetString":"currentIndex"},{"text":"(property) currentIndex: number","docs":"","start":602,"length":12,"line":23,"character":17,"targetString":"currentIndex"},{"text":"(property) currentIndex: number","docs":"","start":642,"length":12,"line":24,"character":23,"targetString":"currentIndex"},{"text":"(property) currentIndex: number","docs":"","start":682,"length":12,"line":25,"character":23,"targetString":"currentIndex"},{"text":"(property) record: never[]","docs":"","start":715,"length":6,"line":26,"character":20,"targetString":"record"},{"text":"(property) currentIndex: number","docs":"","start":727,"length":12,"line":26,"character":32,"targetString":"currentIndex"}]],"/blog/数据结构算法/KMP算法":[[{"text":"function get_next(str: any): any[]","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"get_next"},{"text":"(parameter) str: any","docs":"","start":18,"length":3,"line":0,"character":18,"targetString":"str"},{"text":"const next: any[]","docs":"","start":33,"length":4,"line":1,"character":8,"targetString":"next"},{"text":"var Array: ArrayConstructor\n<any>(...items: any[]) => any[] (+2 overloads)","docs":"","start":40,"length":5,"line":1,"character":15,"targetString":"Array"},{"text":"(parameter) str: any","docs":"","start":46,"length":3,"line":1,"character":21,"targetString":"str"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Changes all array elements from `start` to `end` index to a static `value` and returns the modified array","start":58,"length":4,"line":1,"character":33,"targetString":"fill"},{"text":"let i: number","docs":"","start":72,"length":1,"line":2,"character":6,"targetString":"i"},{"text":"let m: number","docs":"","start":84,"length":1,"line":3,"character":6,"targetString":"m"},{"text":"let i: number","docs":"","start":100,"length":1,"line":5,"character":9,"targetString":"i"},{"text":"(parameter) str: any","docs":"","start":104,"length":3,"line":5,"character":13,"targetString":"str"},{"text":"(parameter) str: any","docs":"","start":126,"length":3,"line":6,"character":8,"targetString":"str"},{"text":"let i: number","docs":"","start":130,"length":1,"line":6,"character":12,"targetString":"i"},{"text":"(parameter) str: any","docs":"","start":137,"length":3,"line":6,"character":19,"targetString":"str"},{"text":"let m: number","docs":"","start":141,"length":1,"line":6,"character":23,"targetString":"m"},{"text":"const next: any[]","docs":"","start":153,"length":4,"line":7,"character":6,"targetString":"next"},{"text":"let i: number","docs":"","start":158,"length":1,"line":7,"character":11,"targetString":"i"},{"text":"let m: number","docs":"","start":165,"length":1,"line":7,"character":18,"targetString":"m"},{"text":"let i: number","docs":"","start":173,"length":1,"line":8,"character":6,"targetString":"i"},{"text":"(parameter) str: any","docs":"","start":191,"length":3,"line":10,"character":8,"targetString":"str"},{"text":"let i: number","docs":"","start":195,"length":1,"line":10,"character":12,"targetString":"i"},{"text":"(parameter) str: any","docs":"","start":202,"length":3,"line":10,"character":19,"targetString":"str"},{"text":"let m: number","docs":"","start":206,"length":1,"line":10,"character":23,"targetString":"m"},{"text":"let m: number","docs":"","start":222,"length":1,"line":11,"character":10,"targetString":"m"},{"text":"const next: any[]","docs":"","start":241,"length":4,"line":12,"character":8,"targetString":"next"},{"text":"let i: number","docs":"","start":246,"length":1,"line":12,"character":13,"targetString":"i"},{"text":"let i: number","docs":"","start":261,"length":1,"line":13,"character":8,"targetString":"i"},{"text":"let m: number","docs":"","start":288,"length":1,"line":15,"character":8,"targetString":"m"},{"text":"const next: any[]","docs":"","start":292,"length":4,"line":15,"character":12,"targetString":"next"},{"text":"let m: number","docs":"","start":297,"length":1,"line":15,"character":17,"targetString":"m"},{"text":"const next: any[]","docs":"","start":331,"length":4,"line":19,"character":9,"targetString":"next"}],[{"text":"function kmp(str: any, subStr: any): number","docs":"","start":9,"length":3,"line":0,"character":9,"targetString":"kmp"},{"text":"(parameter) str: any","docs":"","start":13,"length":3,"line":0,"character":13,"targetString":"str"},{"text":"(parameter) subStr: any","docs":"","start":18,"length":6,"line":0,"character":18,"targetString":"subStr"},{"text":"let i: number","docs":"","start":34,"length":1,"line":1,"character":6,"targetString":"i"},{"text":"let j: number","docs":"","start":46,"length":1,"line":2,"character":6,"targetString":"j"},{"text":"const next: any","docs":"","start":61,"length":4,"line":4,"character":8,"targetString":"next"},{"text":"(parameter) subStr: any","docs":"","start":77,"length":6,"line":4,"character":24,"targetString":"subStr"},{"text":"let i: number","docs":"","start":95,"length":1,"line":6,"character":9,"targetString":"i"},{"text":"(parameter) str: any","docs":"","start":100,"length":3,"line":6,"character":14,"targetString":"str"},{"text":"(parameter) subStr: any","docs":"","start":122,"length":6,"line":7,"character":8,"targetString":"subStr"},{"text":"let j: number","docs":"","start":129,"length":1,"line":7,"character":15,"targetString":"j"},{"text":"(parameter) str: any","docs":"","start":136,"length":3,"line":7,"character":22,"targetString":"str"},{"text":"let i: number","docs":"","start":140,"length":1,"line":7,"character":26,"targetString":"i"},{"text":"let i: number","docs":"","start":152,"length":1,"line":8,"character":6,"targetString":"i"},{"text":"let j: number","docs":"","start":162,"length":1,"line":9,"character":6,"targetString":"j"},{"text":"let j: number","docs":"","start":176,"length":1,"line":10,"character":10,"targetString":"j"},{"text":"(parameter) subStr: any","docs":"","start":182,"length":6,"line":10,"character":16,"targetString":"subStr"},{"text":"let i: number","docs":"","start":214,"length":1,"line":11,"character":15,"targetString":"i"},{"text":"let j: number","docs":"","start":218,"length":1,"line":11,"character":19,"targetString":"j"},{"text":"let j: number","docs":"","start":251,"length":1,"line":14,"character":10,"targetString":"j"},{"text":"let i: number","docs":"","start":270,"length":1,"line":15,"character":8,"targetString":"i"},{"text":"let j: number","docs":"","start":297,"length":1,"line":17,"character":8,"targetString":"j"},{"text":"const next: any","docs":"","start":301,"length":4,"line":17,"character":12,"targetString":"next"},{"text":"let j: number","docs":"","start":306,"length":1,"line":17,"character":17,"targetString":"j"}]],"/blog/数据结构算法/base64算法":[[{"text":"function base64encode(text: any): string","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"base64encode"},{"text":"(parameter) text: any","docs":"","start":22,"length":4,"line":0,"character":22,"targetString":"text"},{"text":"let code: string","docs":"","start":36,"length":4,"line":1,"character":6,"targetString":"code"},{"text":"let base64Code: string","docs":"","start":52,"length":10,"line":2,"character":6,"targetString":"base64Code"},{"text":"let res: string","docs":"","start":142,"length":3,"line":4,"character":6,"targetString":"res"},{"text":"let i: any","docs":"","start":163,"length":1,"line":6,"character":11,"targetString":"i"},{"text":"(parameter) text: any","docs":"","start":168,"length":4,"line":6,"character":16,"targetString":"text"},{"text":"let char: any","docs":"","start":184,"length":4,"line":7,"character":8,"targetString":"char"},{"text":"let i: any","docs":"","start":191,"length":1,"line":7,"character":15,"targetString":"i"},{"text":"let a: number","docs":"","start":266,"length":1,"line":9,"character":13,"targetString":"a"},{"text":"let a: number","docs":"","start":273,"length":1,"line":9,"character":20,"targetString":"a"},{"text":"let char: any","docs":"","start":282,"length":4,"line":9,"character":29,"targetString":"char"},{"text":"let a: number","docs":"","start":295,"length":1,"line":9,"character":42,"targetString":"a"},{"text":"let char: any","docs":"","start":308,"length":4,"line":10,"character":6,"targetString":"char"},{"text":"let char: any","docs":"","start":319,"length":4,"line":10,"character":17,"targetString":"char"},{"text":"let code: string","docs":"","start":334,"length":4,"line":12,"character":4,"targetString":"code"},{"text":"let char: any","docs":"","start":342,"length":4,"line":12,"character":12,"targetString":"char"},{"text":"let code: string","docs":"","start":412,"length":4,"line":16,"character":6,"targetString":"code"},{"text":"(property) String.length: number","docs":"Returns the length of a String object.","start":417,"length":6,"line":16,"character":11,"targetString":"length"},{"text":"let code: string","docs":"","start":466,"length":4,"line":18,"character":4,"targetString":"code"},{"text":"let res: string","docs":"","start":517,"length":3,"line":20,"character":4,"targetString":"res"},{"text":"let code: string","docs":"","start":555,"length":4,"line":23,"character":6,"targetString":"code"},{"text":"(property) String.length: number","docs":"Returns the length of a String object.","start":560,"length":6,"line":23,"character":11,"targetString":"length"},{"text":"let code: string","docs":"","start":612,"length":4,"line":25,"character":4,"targetString":"code"},{"text":"let res: string","docs":"","start":661,"length":3,"line":27,"character":4,"targetString":"res"},{"text":"let encode: string","docs":"","start":683,"length":6,"line":30,"character":6,"targetString":"encode"},{"text":"let i: number","docs":"","start":706,"length":1,"line":31,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":713,"length":1,"line":31,"character":18,"targetString":"i"},{"text":"let code: string","docs":"","start":717,"length":4,"line":31,"character":22,"targetString":"code"},{"text":"(property) String.length: number","docs":"Returns the length of a String object.","start":722,"length":6,"line":31,"character":27,"targetString":"length"},{"text":"let i: number","docs":"","start":730,"length":1,"line":31,"character":35,"targetString":"i"},{"text":"let item: string","docs":"","start":748,"length":4,"line":32,"character":8,"targetString":"item"},{"text":"let code: string","docs":"","start":755,"length":4,"line":32,"character":15,"targetString":"code"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":760,"length":5,"line":32,"character":20,"targetString":"slice"},{"text":"let i: number","docs":"","start":766,"length":1,"line":32,"character":26,"targetString":"i"},{"text":"let i: number","docs":"","start":769,"length":1,"line":32,"character":29,"targetString":"i"},{"text":"let encode: string","docs":"","start":780,"length":6,"line":33,"character":4,"targetString":"encode"},{"text":"let base64Code: string","docs":"","start":790,"length":10,"line":33,"character":14,"targetString":"base64Code"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":801,"length":8,"line":33,"character":25,"targetString":"parseInt"},{"text":"let item: string","docs":"","start":810,"length":4,"line":33,"character":34,"targetString":"item"},{"text":"let encode: string","docs":"","start":834,"length":6,"line":36,"character":9,"targetString":"encode"},{"text":"let res: string","docs":"","start":843,"length":3,"line":36,"character":18,"targetString":"res"},{"text":"var console: Console","docs":"","start":850,"length":7,"line":39,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":858,"length":3,"line":39,"character":8,"targetString":"log"},{"text":"function base64encode(text: any): string","docs":"","start":862,"length":12,"line":39,"character":12,"targetString":"base64encode"}]],"/blog/数据结构算法/凯撒加密":[[{"text":"const charToNum: (char: any) => number","docs":"","start":6,"length":9,"line":0,"character":6,"targetString":"charToNum"},{"text":"(parameter) char: any","docs":"","start":18,"length":4,"line":0,"character":18,"targetString":"char"},{"text":"(parameter) char: any","docs":"","start":26,"length":4,"line":0,"character":26,"targetString":"char"},{"text":"const numToChar: (num: any) => string","docs":"","start":56,"length":9,"line":1,"character":6,"targetString":"numToChar"},{"text":"(parameter) num: any","docs":"","start":68,"length":3,"line":1,"character":18,"targetString":"num"},{"text":"var String: StringConstructor","docs":"Allows manipulation and formatting of text strings and determination and location of substrings within strings.","start":75,"length":6,"line":1,"character":25,"targetString":"String"},{"text":"(method) StringConstructor.fromCharCode(...codes: number[]): string","docs":"","start":82,"length":12,"line":1,"character":32,"targetString":"fromCharCode"},{"text":"(parameter) num: any","docs":"","start":100,"length":3,"line":1,"character":50,"targetString":"num"},{"text":"const decrypt: (value: any, shift: any) => string","docs":"","start":112,"length":7,"line":3,"character":6,"targetString":"decrypt"},{"text":"(parameter) value: any","docs":"","start":123,"length":5,"line":3,"character":17,"targetString":"value"},{"text":"(parameter) shift: any","docs":"","start":130,"length":5,"line":3,"character":24,"targetString":"shift"},{"text":"var Array: ArrayConstructor","docs":"","start":142,"length":5,"line":4,"character":2,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<unknown>(iterable: Iterable<unknown> | ArrayLike<unknown>): unknown[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":148,"length":4,"line":4,"character":8,"targetString":"from"},{"text":"(parameter) value: any","docs":"","start":153,"length":5,"line":4,"character":13,"targetString":"value"},{"text":"(method) Array<unknown>.map<string>(callbackfn: (value: unknown, index: number, array: unknown[]) => string, thisArg?: any): string[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":165,"length":3,"line":5,"character":5,"targetString":"map"},{"text":"(parameter) ch: unknown","docs":"","start":169,"length":2,"line":5,"character":9,"targetString":"ch"},{"text":"const numToChar: (num: any) => string","docs":"","start":175,"length":9,"line":5,"character":15,"targetString":"numToChar"},{"text":"const charToNum: (char: any) => number","docs":"","start":185,"length":9,"line":5,"character":25,"targetString":"charToNum"},{"text":"(parameter) ch: unknown","docs":"","start":195,"length":2,"line":5,"character":35,"targetString":"ch"},{"text":"(parameter) shift: any","docs":"","start":202,"length":5,"line":5,"character":42,"targetString":"shift"},{"text":"(method) Array<string>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":221,"length":4,"line":6,"character":5,"targetString":"join"},{"text":"const encrypt: (value: any, shift: any) => string","docs":"","start":237,"length":7,"line":8,"character":6,"targetString":"encrypt"},{"text":"(parameter) value: any","docs":"","start":248,"length":5,"line":8,"character":17,"targetString":"value"},{"text":"(parameter) shift: any","docs":"","start":255,"length":5,"line":8,"character":24,"targetString":"shift"},{"text":"var Array: ArrayConstructor","docs":"","start":267,"length":5,"line":9,"character":2,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<unknown>(iterable: Iterable<unknown> | ArrayLike<unknown>): unknown[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":273,"length":4,"line":9,"character":8,"targetString":"from"},{"text":"(parameter) value: any","docs":"","start":278,"length":5,"line":9,"character":13,"targetString":"value"},{"text":"(method) Array<unknown>.map<string>(callbackfn: (value: unknown, index: number, array: unknown[]) => string, thisArg?: any): string[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":290,"length":3,"line":10,"character":5,"targetString":"map"},{"text":"(parameter) ch: unknown","docs":"","start":294,"length":2,"line":10,"character":9,"targetString":"ch"},{"text":"const numToChar: (num: any) => string","docs":"","start":300,"length":9,"line":10,"character":15,"targetString":"numToChar"},{"text":"const charToNum: (char: any) => number","docs":"","start":310,"length":9,"line":10,"character":25,"targetString":"charToNum"},{"text":"(parameter) ch: unknown","docs":"","start":320,"length":2,"line":10,"character":35,"targetString":"ch"},{"text":"(parameter) shift: any","docs":"","start":327,"length":5,"line":10,"character":42,"targetString":"shift"},{"text":"(method) Array<string>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":346,"length":4,"line":11,"character":5,"targetString":"join"}]],"/blog/数据结构算法/排序算法":[[{"text":"function sortInsert(array: any): any","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"sortInsert"},{"text":"(parameter) array: any","docs":"","start":20,"length":5,"line":0,"character":20,"targetString":"array"},{"text":"let i: number","docs":"","start":40,"length":1,"line":1,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":47,"length":1,"line":1,"character":18,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":51,"length":5,"line":1,"character":22,"targetString":"array"},{"text":"let i: number","docs":"","start":65,"length":1,"line":1,"character":36,"targetString":"i"},{"text":"const tmp: any","docs":"","start":82,"length":3,"line":2,"character":10,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":88,"length":5,"line":2,"character":16,"targetString":"array"},{"text":"let i: number","docs":"","start":94,"length":1,"line":2,"character":22,"targetString":"i"},{"text":"let j: number","docs":"","start":105,"length":1,"line":3,"character":8,"targetString":"j"},{"text":"let i: number","docs":"","start":109,"length":1,"line":3,"character":12,"targetString":"i"},{"text":"let j: number","docs":"","start":126,"length":1,"line":4,"character":11,"targetString":"j"},{"text":"const tmp: any","docs":"","start":136,"length":3,"line":4,"character":21,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":142,"length":5,"line":4,"character":27,"targetString":"array"},{"text":"let j: number","docs":"","start":148,"length":1,"line":4,"character":33,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":160,"length":5,"line":5,"character":6,"targetString":"array"},{"text":"let j: number","docs":"","start":166,"length":1,"line":5,"character":12,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":175,"length":5,"line":5,"character":21,"targetString":"array"},{"text":"let j: number","docs":"","start":181,"length":1,"line":5,"character":27,"targetString":"j"},{"text":"let j: number","docs":"","start":190,"length":1,"line":6,"character":6,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":204,"length":5,"line":8,"character":4,"targetString":"array"},{"text":"let j: number","docs":"","start":210,"length":1,"line":8,"character":10,"targetString":"j"},{"text":"const tmp: any","docs":"","start":219,"length":3,"line":8,"character":19,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":236,"length":5,"line":10,"character":9,"targetString":"array"}],[{"text":"function sortSplit(array: any): any","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"sortSplit"},{"text":"(parameter) array: any","docs":"","start":19,"length":5,"line":0,"character":19,"targetString":"array"},{"text":"let i: number","docs":"","start":39,"length":1,"line":1,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":46,"length":1,"line":1,"character":18,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":50,"length":5,"line":1,"character":22,"targetString":"array"},{"text":"let i: number","docs":"","start":64,"length":1,"line":1,"character":36,"targetString":"i"},{"text":"const tmp: any","docs":"","start":81,"length":3,"line":2,"character":10,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":87,"length":5,"line":2,"character":16,"targetString":"array"},{"text":"let i: number","docs":"","start":93,"length":1,"line":2,"character":22,"targetString":"i"},{"text":"let low: number","docs":"","start":104,"length":3,"line":3,"character":8,"targetString":"low"},{"text":"let high: number","docs":"","start":120,"length":4,"line":4,"character":8,"targetString":"high"},{"text":"let i: number","docs":"","start":127,"length":1,"line":4,"character":15,"targetString":"i"},{"text":"let low: number","docs":"","start":144,"length":3,"line":5,"character":11,"targetString":"low"},{"text":"let high: number","docs":"","start":151,"length":4,"line":5,"character":18,"targetString":"high"},{"text":"const mid: number","docs":"","start":171,"length":3,"line":6,"character":12,"targetString":"mid"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":177,"length":4,"line":6,"character":18,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":182,"length":5,"line":6,"character":23,"targetString":"floor"},{"text":"let low: number","docs":"","start":189,"length":3,"line":6,"character":30,"targetString":"low"},{"text":"let high: number","docs":"","start":195,"length":4,"line":6,"character":36,"targetString":"high"},{"text":"const tmp: any","docs":"","start":216,"length":3,"line":7,"character":10,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":222,"length":5,"line":7,"character":16,"targetString":"array"},{"text":"const mid: number","docs":"","start":228,"length":3,"line":7,"character":22,"targetString":"mid"},{"text":"let high: number","docs":"","start":244,"length":4,"line":8,"character":8,"targetString":"high"},{"text":"const mid: number","docs":"","start":251,"length":3,"line":8,"character":15,"targetString":"mid"},{"text":"let low: number","docs":"","start":282,"length":3,"line":10,"character":8,"targetString":"low"},{"text":"const mid: number","docs":"","start":288,"length":3,"line":10,"character":14,"targetString":"mid"},{"text":"let j: number","docs":"","start":318,"length":1,"line":13,"character":8,"targetString":"j"},{"text":"let i: number","docs":"","start":322,"length":1,"line":13,"character":12,"targetString":"i"},{"text":"let j: number","docs":"","start":339,"length":1,"line":14,"character":11,"targetString":"j"},{"text":"let high: number","docs":"","start":344,"length":4,"line":14,"character":16,"targetString":"high"},{"text":"let j: number","docs":"","start":354,"length":1,"line":14,"character":26,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":367,"length":5,"line":15,"character":6,"targetString":"array"},{"text":"let j: number","docs":"","start":373,"length":1,"line":15,"character":12,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":382,"length":5,"line":15,"character":21,"targetString":"array"},{"text":"let j: number","docs":"","start":388,"length":1,"line":15,"character":27,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":401,"length":5,"line":17,"character":4,"targetString":"array"},{"text":"let j: number","docs":"","start":407,"length":1,"line":17,"character":10,"targetString":"j"},{"text":"const tmp: any","docs":"","start":416,"length":3,"line":17,"character":19,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":433,"length":5,"line":19,"character":9,"targetString":"array"}],[{"text":"function sortR(array: any): any","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"sortR"},{"text":"(parameter) array: any","docs":"","start":15,"length":5,"line":0,"character":15,"targetString":"array"},{"text":"let gap: number","docs":"","start":30,"length":3,"line":1,"character":6,"targetString":"gap"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":36,"length":8,"line":1,"character":12,"targetString":"parseInt"},{"text":"(parameter) array: any","docs":"","start":45,"length":5,"line":1,"character":21,"targetString":"array"},{"text":"let gap: number","docs":"","start":72,"length":3,"line":2,"character":9,"targetString":"gap"},{"text":"let i: number","docs":"","start":96,"length":1,"line":3,"character":13,"targetString":"i"},{"text":"let gap: number","docs":"","start":100,"length":3,"line":3,"character":17,"targetString":"gap"},{"text":"let i: number","docs":"","start":105,"length":1,"line":3,"character":22,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":109,"length":5,"line":3,"character":26,"targetString":"array"},{"text":"let i: number","docs":"","start":123,"length":1,"line":3,"character":40,"targetString":"i"},{"text":"const tmp: any","docs":"","start":142,"length":3,"line":4,"character":12,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":148,"length":5,"line":4,"character":18,"targetString":"array"},{"text":"let i: number","docs":"","start":154,"length":1,"line":4,"character":24,"targetString":"i"},{"text":"let j: number","docs":"","start":167,"length":1,"line":5,"character":10,"targetString":"j"},{"text":"let i: number","docs":"","start":171,"length":1,"line":5,"character":14,"targetString":"i"},{"text":"let gap: number","docs":"","start":175,"length":3,"line":5,"character":18,"targetString":"gap"},{"text":"let j: number","docs":"","start":192,"length":1,"line":6,"character":13,"targetString":"j"},{"text":"const tmp: any","docs":"","start":202,"length":3,"line":6,"character":23,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":208,"length":5,"line":6,"character":29,"targetString":"array"},{"text":"let j: number","docs":"","start":214,"length":1,"line":6,"character":35,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":228,"length":5,"line":7,"character":8,"targetString":"array"},{"text":"let j: number","docs":"","start":234,"length":1,"line":7,"character":14,"targetString":"j"},{"text":"let gap: number","docs":"","start":238,"length":3,"line":7,"character":18,"targetString":"gap"},{"text":"(parameter) array: any","docs":"","start":245,"length":5,"line":7,"character":25,"targetString":"array"},{"text":"let j: number","docs":"","start":251,"length":1,"line":7,"character":31,"targetString":"j"},{"text":"let j: number","docs":"","start":262,"length":1,"line":8,"character":8,"targetString":"j"},{"text":"let j: number","docs":"","start":266,"length":1,"line":8,"character":12,"targetString":"j"},{"text":"let gap: number","docs":"","start":270,"length":3,"line":8,"character":16,"targetString":"gap"},{"text":"(parameter) array: any","docs":"","start":288,"length":5,"line":10,"character":6,"targetString":"array"},{"text":"let j: number","docs":"","start":294,"length":1,"line":10,"character":12,"targetString":"j"},{"text":"let gap: number","docs":"","start":298,"length":3,"line":10,"character":16,"targetString":"gap"},{"text":"const tmp: any","docs":"","start":305,"length":3,"line":10,"character":23,"targetString":"tmp"},{"text":"let gap: number","docs":"","start":319,"length":3,"line":12,"character":4,"targetString":"gap"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":325,"length":8,"line":12,"character":10,"targetString":"parseInt"},{"text":"let gap: number","docs":"","start":334,"length":3,"line":12,"character":19,"targetString":"gap"},{"text":"(parameter) array: any","docs":"","start":356,"length":5,"line":14,"character":9,"targetString":"array"}],[{"text":"function sortB(array: any): any","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"sortB"},{"text":"(parameter) array: any","docs":"","start":15,"length":5,"line":0,"character":15,"targetString":"array"},{"text":"const len: any","docs":"","start":32,"length":3,"line":1,"character":8,"targetString":"len"},{"text":"(parameter) array: any","docs":"","start":38,"length":5,"line":1,"character":14,"targetString":"array"},{"text":"let i: number","docs":"","start":62,"length":1,"line":2,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":69,"length":1,"line":2,"character":18,"targetString":"i"},{"text":"const len: any","docs":"","start":73,"length":3,"line":2,"character":22,"targetString":"len"},{"text":"let i: number","docs":"","start":78,"length":1,"line":2,"character":27,"targetString":"i"},{"text":"let j: number","docs":"","start":98,"length":1,"line":3,"character":13,"targetString":"j"},{"text":"const len: any","docs":"","start":102,"length":3,"line":3,"character":17,"targetString":"len"},{"text":"let j: number","docs":"","start":111,"length":1,"line":3,"character":26,"targetString":"j"},{"text":"let i: number","docs":"","start":115,"length":1,"line":3,"character":30,"targetString":"i"},{"text":"let j: number","docs":"","start":118,"length":1,"line":3,"character":33,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":135,"length":5,"line":4,"character":10,"targetString":"array"},{"text":"let j: number","docs":"","start":141,"length":1,"line":4,"character":16,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":146,"length":5,"line":4,"character":21,"targetString":"array"},{"text":"let j: number","docs":"","start":152,"length":1,"line":4,"character":27,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":176,"length":5,"line":5,"character":14,"targetString":"array"},{"text":"let j: number","docs":"","start":182,"length":1,"line":5,"character":20,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":197,"length":5,"line":6,"character":8,"targetString":"array"},{"text":"let j: number","docs":"","start":203,"length":1,"line":6,"character":14,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":212,"length":5,"line":6,"character":23,"targetString":"array"},{"text":"let j: number","docs":"","start":218,"length":1,"line":6,"character":29,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":229,"length":5,"line":7,"character":8,"targetString":"array"},{"text":"let j: number","docs":"","start":235,"length":1,"line":7,"character":14,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":271,"length":5,"line":11,"character":9,"targetString":"array"}],[{"text":"function sortB2(array: any): any","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"sortB2"},{"text":"(parameter) array: any","docs":"","start":16,"length":5,"line":0,"character":16,"targetString":"array"},{"text":"const len: any","docs":"","start":33,"length":3,"line":1,"character":8,"targetString":"len"},{"text":"(parameter) array: any","docs":"","start":39,"length":5,"line":1,"character":14,"targetString":"array"},{"text":"let i: number","docs":"","start":63,"length":1,"line":2,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":70,"length":1,"line":2,"character":18,"targetString":"i"},{"text":"const len: any","docs":"","start":74,"length":3,"line":2,"character":22,"targetString":"len"},{"text":"let i: number","docs":"","start":79,"length":1,"line":2,"character":27,"targetString":"i"},{"text":"let exchange: boolean","docs":"","start":94,"length":8,"line":3,"character":8,"targetString":"exchange"},{"text":"let j: number","docs":"","start":124,"length":1,"line":4,"character":13,"targetString":"j"},{"text":"const len: any","docs":"","start":128,"length":3,"line":4,"character":17,"targetString":"len"},{"text":"let j: number","docs":"","start":137,"length":1,"line":4,"character":26,"targetString":"j"},{"text":"let i: number","docs":"","start":141,"length":1,"line":4,"character":30,"targetString":"i"},{"text":"let j: number","docs":"","start":144,"length":1,"line":4,"character":33,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":161,"length":5,"line":5,"character":10,"targetString":"array"},{"text":"let j: number","docs":"","start":167,"length":1,"line":5,"character":16,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":172,"length":5,"line":5,"character":21,"targetString":"array"},{"text":"let j: number","docs":"","start":178,"length":1,"line":5,"character":27,"targetString":"j"},{"text":"const tmp: any","docs":"","start":202,"length":3,"line":6,"character":14,"targetString":"tmp"},{"text":"(parameter) array: any","docs":"","start":208,"length":5,"line":6,"character":20,"targetString":"array"},{"text":"let j: number","docs":"","start":214,"length":1,"line":6,"character":26,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":225,"length":5,"line":7,"character":8,"targetString":"array"},{"text":"let j: number","docs":"","start":231,"length":1,"line":7,"character":14,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":236,"length":5,"line":7,"character":19,"targetString":"array"},{"text":"let j: number","docs":"","start":242,"length":1,"line":7,"character":25,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":257,"length":5,"line":8,"character":8,"targetString":"array"},{"text":"let j: number","docs":"","start":263,"length":1,"line":8,"character":14,"targetString":"j"},{"text":"const tmp: any","docs":"","start":272,"length":3,"line":8,"character":23,"targetString":"tmp"},{"text":"let exchange: boolean","docs":"","start":284,"length":8,"line":9,"character":8,"targetString":"exchange"},{"text":"let exchange: boolean","docs":"","start":323,"length":8,"line":12,"character":9,"targetString":"exchange"},{"text":"(parameter) array: any","docs":"","start":340,"length":5,"line":12,"character":26,"targetString":"array"},{"text":"(parameter) array: any","docs":"","start":359,"length":5,"line":14,"character":9,"targetString":"array"}],[{"text":"function sortQ(arr: any): any","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"sortQ"},{"text":"(parameter) arr: any","docs":"","start":15,"length":3,"line":0,"character":15,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":28,"length":3,"line":1,"character":6,"targetString":"arr"},{"text":"(parameter) arr: any","docs":"","start":52,"length":3,"line":1,"character":30,"targetString":"arr"},{"text":"const mid: number","docs":"","start":64,"length":3,"line":2,"character":8,"targetString":"mid"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":70,"length":4,"line":2,"character":14,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":75,"length":5,"line":2,"character":19,"targetString":"floor"},{"text":"(parameter) arr: any","docs":"","start":81,"length":3,"line":2,"character":25,"targetString":"arr"},{"text":"const stand: any","docs":"","start":105,"length":5,"line":3,"character":8,"targetString":"stand"},{"text":"(parameter) arr: any","docs":"","start":113,"length":3,"line":3,"character":16,"targetString":"arr"},{"text":"const mid: number","docs":"","start":124,"length":3,"line":3,"character":27,"targetString":"mid"},{"text":"const left: any[]","docs":"","start":143,"length":4,"line":4,"character":8,"targetString":"left"},{"text":"const right: any[]","docs":"","start":161,"length":5,"line":5,"character":8,"targetString":"right"},{"text":"let i: number","docs":"","start":183,"length":1,"line":6,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":190,"length":1,"line":6,"character":18,"targetString":"i"},{"text":"(parameter) arr: any","docs":"","start":194,"length":3,"line":6,"character":22,"targetString":"arr"},{"text":"let i: number","docs":"","start":206,"length":1,"line":6,"character":34,"targetString":"i"},{"text":"(parameter) arr: any","docs":"","start":221,"length":3,"line":7,"character":8,"targetString":"arr"},{"text":"let i: number","docs":"","start":225,"length":1,"line":7,"character":12,"targetString":"i"},{"text":"const stand: any","docs":"","start":230,"length":5,"line":7,"character":17,"targetString":"stand"},{"text":"const left: any[]","docs":"","start":245,"length":4,"line":8,"character":6,"targetString":"left"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":250,"length":4,"line":8,"character":11,"targetString":"push"},{"text":"(parameter) arr: any","docs":"","start":255,"length":3,"line":8,"character":16,"targetString":"arr"},{"text":"let i: number","docs":"","start":259,"length":1,"line":8,"character":20,"targetString":"i"},{"text":"const right: any[]","docs":"","start":282,"length":5,"line":10,"character":6,"targetString":"right"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":288,"length":4,"line":10,"character":12,"targetString":"push"},{"text":"(parameter) arr: any","docs":"","start":293,"length":3,"line":10,"character":17,"targetString":"arr"},{"text":"let i: number","docs":"","start":297,"length":1,"line":10,"character":21,"targetString":"i"},{"text":"function sortQ(arr: any): any","docs":"","start":320,"length":5,"line":13,"character":9,"targetString":"sortQ"},{"text":"const left: any[]","docs":"","start":326,"length":4,"line":13,"character":15,"targetString":"left"},{"text":"const stand: any","docs":"","start":340,"length":5,"line":13,"character":29,"targetString":"stand"},{"text":"function sortQ(arr: any): any","docs":"","start":348,"length":5,"line":13,"character":37,"targetString":"sortQ"},{"text":"const right: any[]","docs":"","start":354,"length":5,"line":13,"character":43,"targetString":"right"}],[{"text":"function sortSelect(array: any): any","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"sortSelect"},{"text":"(parameter) array: any","docs":"","start":20,"length":5,"line":0,"character":20,"targetString":"array"},{"text":"const len: any","docs":"","start":37,"length":3,"line":1,"character":8,"targetString":"len"},{"text":"(parameter) array: any","docs":"","start":43,"length":5,"line":1,"character":14,"targetString":"array"},{"text":"let i: number","docs":"","start":67,"length":1,"line":2,"character":11,"targetString":"i"},{"text":"let i: number","docs":"","start":74,"length":1,"line":2,"character":18,"targetString":"i"},{"text":"const len: any","docs":"","start":78,"length":3,"line":2,"character":22,"targetString":"len"},{"text":"let i: number","docs":"","start":83,"length":1,"line":2,"character":27,"targetString":"i"},{"text":"let k: number","docs":"","start":98,"length":1,"line":3,"character":8,"targetString":"k"},{"text":"let i: number","docs":"","start":102,"length":1,"line":3,"character":12,"targetString":"i"},{"text":"let j: number","docs":"","start":117,"length":1,"line":4,"character":13,"targetString":"j"},{"text":"let i: number","docs":"","start":121,"length":1,"line":4,"character":17,"targetString":"i"},{"text":"let j: number","docs":"","start":128,"length":1,"line":4,"character":24,"targetString":"j"},{"text":"const len: any","docs":"","start":132,"length":3,"line":4,"character":28,"targetString":"len"},{"text":"let j: number","docs":"","start":137,"length":1,"line":4,"character":33,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":154,"length":5,"line":5,"character":10,"targetString":"array"},{"text":"let j: number","docs":"","start":160,"length":1,"line":5,"character":16,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":165,"length":5,"line":5,"character":21,"targetString":"array"},{"text":"let k: number","docs":"","start":171,"length":1,"line":5,"character":27,"targetString":"k"},{"text":"let k: number","docs":"","start":175,"length":1,"line":5,"character":31,"targetString":"k"},{"text":"let j: number","docs":"","start":179,"length":1,"line":5,"character":35,"targetString":"j"},{"text":"let k: number","docs":"","start":195,"length":1,"line":7,"character":8,"targetString":"k"},{"text":"let i: number","docs":"","start":200,"length":1,"line":7,"character":13,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":217,"length":5,"line":8,"character":12,"targetString":"array"},{"text":"let k: number","docs":"","start":223,"length":1,"line":8,"character":18,"targetString":"k"},{"text":"(parameter) array: any","docs":"","start":232,"length":5,"line":9,"character":6,"targetString":"array"},{"text":"let k: number","docs":"","start":238,"length":1,"line":9,"character":12,"targetString":"k"},{"text":"(parameter) array: any","docs":"","start":243,"length":5,"line":9,"character":17,"targetString":"array"},{"text":"let i: number","docs":"","start":249,"length":1,"line":9,"character":23,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":258,"length":5,"line":10,"character":6,"targetString":"array"},{"text":"let i: number","docs":"","start":264,"length":1,"line":10,"character":12,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":292,"length":5,"line":13,"character":9,"targetString":"array"}],[{"text":"function swap(array: any, i: any, j: any): void","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"swap"},{"text":"(parameter) array: any","docs":"","start":14,"length":5,"line":0,"character":14,"targetString":"array"},{"text":"(parameter) i: any","docs":"","start":21,"length":1,"line":0,"character":21,"targetString":"i"},{"text":"(parameter) j: any","docs":"","start":24,"length":1,"line":0,"character":24,"targetString":"j"},{"text":"const temp: any","docs":"","start":37,"length":4,"line":1,"character":8,"targetString":"temp"},{"text":"(parameter) array: any","docs":"","start":44,"length":5,"line":1,"character":15,"targetString":"array"},{"text":"(parameter) i: any","docs":"","start":50,"length":1,"line":1,"character":21,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":55,"length":5,"line":2,"character":2,"targetString":"array"},{"text":"(parameter) i: any","docs":"","start":61,"length":1,"line":2,"character":8,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":66,"length":5,"line":2,"character":13,"targetString":"array"},{"text":"(parameter) j: any","docs":"","start":72,"length":1,"line":2,"character":19,"targetString":"j"},{"text":"(parameter) array: any","docs":"","start":77,"length":5,"line":3,"character":2,"targetString":"array"},{"text":"(parameter) j: any","docs":"","start":83,"length":1,"line":3,"character":8,"targetString":"j"},{"text":"const temp: any","docs":"","start":88,"length":4,"line":3,"character":13,"targetString":"temp"},{"text":"function maxHeapify(array: any, index: any, heapSize: any): void","docs":"","start":105,"length":10,"line":6,"character":9,"targetString":"maxHeapify"},{"text":"(parameter) array: any","docs":"","start":116,"length":5,"line":6,"character":20,"targetString":"array"},{"text":"(parameter) index: any","docs":"","start":123,"length":5,"line":6,"character":27,"targetString":"index"},{"text":"(parameter) heapSize: any","docs":"","start":130,"length":8,"line":6,"character":34,"targetString":"heapSize"},{"text":"let iMax: any","docs":"","start":167,"length":4,"line":8,"character":8,"targetString":"iMax"},{"text":"(parameter) index: any","docs":"","start":174,"length":5,"line":8,"character":15,"targetString":"index"},{"text":"const iLeft: number","docs":"","start":190,"length":5,"line":9,"character":10,"targetString":"iLeft"},{"text":"(parameter) index: any","docs":"","start":202,"length":5,"line":9,"character":22,"targetString":"index"},{"text":"const iRight: number","docs":"","start":222,"length":6,"line":10,"character":10,"targetString":"iRight"},{"text":"(parameter) index: any","docs":"","start":236,"length":5,"line":10,"character":24,"targetString":"index"},{"text":"const iLeft: number","docs":"","start":255,"length":5,"line":11,"character":8,"targetString":"iLeft"},{"text":"(parameter) heapSize: any","docs":"","start":263,"length":8,"line":11,"character":16,"targetString":"heapSize"},{"text":"(parameter) array: any","docs":"","start":275,"length":5,"line":11,"character":28,"targetString":"array"},{"text":"(parameter) index: any","docs":"","start":281,"length":5,"line":11,"character":34,"targetString":"index"},{"text":"(parameter) array: any","docs":"","start":290,"length":5,"line":11,"character":43,"targetString":"array"},{"text":"const iLeft: number","docs":"","start":296,"length":5,"line":11,"character":49,"targetString":"iLeft"},{"text":"let iMax: any","docs":"","start":312,"length":4,"line":12,"character":6,"targetString":"iMax"},{"text":"const iLeft: number","docs":"","start":319,"length":5,"line":12,"character":13,"targetString":"iLeft"},{"text":"const iRight: number","docs":"","start":339,"length":6,"line":14,"character":8,"targetString":"iRight"},{"text":"(parameter) heapSize: any","docs":"","start":348,"length":8,"line":14,"character":17,"targetString":"heapSize"},{"text":"(parameter) array: any","docs":"","start":360,"length":5,"line":14,"character":29,"targetString":"array"},{"text":"let iMax: any","docs":"","start":366,"length":4,"line":14,"character":35,"targetString":"iMax"},{"text":"(parameter) array: any","docs":"","start":374,"length":5,"line":14,"character":43,"targetString":"array"},{"text":"const iRight: number","docs":"","start":380,"length":6,"line":14,"character":49,"targetString":"iRight"},{"text":"let iMax: any","docs":"","start":397,"length":4,"line":15,"character":6,"targetString":"iMax"},{"text":"const iRight: number","docs":"","start":404,"length":6,"line":15,"character":13,"targetString":"iRight"},{"text":"let iMax: any","docs":"","start":425,"length":4,"line":17,"character":8,"targetString":"iMax"},{"text":"(parameter) index: any","docs":"","start":433,"length":5,"line":17,"character":16,"targetString":"index"},{"text":"function swap(array: any, i: any, j: any): void","docs":"","start":448,"length":4,"line":18,"character":6,"targetString":"swap"},{"text":"(parameter) array: any","docs":"","start":453,"length":5,"line":18,"character":11,"targetString":"array"},{"text":"let iMax: any","docs":"","start":460,"length":4,"line":18,"character":18,"targetString":"iMax"},{"text":"(parameter) index: any","docs":"","start":466,"length":5,"line":18,"character":24,"targetString":"index"},{"text":"(parameter) index: any","docs":"","start":479,"length":5,"line":19,"character":6,"targetString":"index"},{"text":"let iMax: any","docs":"","start":487,"length":4,"line":19,"character":14,"targetString":"iMax"},{"text":"function buildMaxHeap(array: any): void","docs":"","start":539,"length":12,"line":26,"character":9,"targetString":"buildMaxHeap"},{"text":"(parameter) array: any","docs":"","start":552,"length":5,"line":26,"character":22,"targetString":"array"},{"text":"let i: number","docs":"","start":572,"length":1,"line":27,"character":11,"targetString":"i"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":576,"length":4,"line":27,"character":15,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":581,"length":5,"line":27,"character":20,"targetString":"floor"},{"text":"(parameter) array: any","docs":"","start":587,"length":5,"line":27,"character":26,"targetString":"array"},{"text":"let i: number","docs":"","start":610,"length":1,"line":27,"character":49,"targetString":"i"},{"text":"let i: number","docs":"","start":618,"length":1,"line":27,"character":57,"targetString":"i"},{"text":"function maxHeapify(array: any, index: any, heapSize: any): void","docs":"","start":629,"length":10,"line":28,"character":4,"targetString":"maxHeapify"},{"text":"(parameter) array: any","docs":"","start":640,"length":5,"line":28,"character":15,"targetString":"array"},{"text":"let i: number","docs":"","start":647,"length":1,"line":28,"character":22,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":650,"length":5,"line":28,"character":25,"targetString":"array"},{"text":"function sortHeap(array: any): any","docs":"","start":680,"length":8,"line":32,"character":9,"targetString":"sortHeap"},{"text":"(parameter) array: any","docs":"","start":689,"length":5,"line":32,"character":18,"targetString":"array"},{"text":"function buildMaxHeap(array: any): void","docs":"","start":700,"length":12,"line":33,"character":2,"targetString":"buildMaxHeap"},{"text":"(parameter) array: any","docs":"","start":713,"length":5,"line":33,"character":15,"targetString":"array"},{"text":"let i: number","docs":"","start":731,"length":1,"line":34,"character":11,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":735,"length":5,"line":34,"character":15,"targetString":"array"},{"text":"let i: number","docs":"","start":753,"length":1,"line":34,"character":33,"targetString":"i"},{"text":"let i: number","docs":"","start":760,"length":1,"line":34,"character":40,"targetString":"i"},{"text":"function swap(array: any, i: any, j: any): void","docs":"","start":771,"length":4,"line":35,"character":4,"targetString":"swap"},{"text":"(parameter) array: any","docs":"","start":776,"length":5,"line":35,"character":9,"targetString":"array"},{"text":"let i: number","docs":"","start":786,"length":1,"line":35,"character":19,"targetString":"i"},{"text":"function maxHeapify(array: any, index: any, heapSize: any): void","docs":"","start":793,"length":10,"line":36,"character":4,"targetString":"maxHeapify"},{"text":"(parameter) array: any","docs":"","start":804,"length":5,"line":36,"character":15,"targetString":"array"},{"text":"let i: number","docs":"","start":814,"length":1,"line":36,"character":25,"targetString":"i"},{"text":"(parameter) array: any","docs":"","start":830,"length":5,"line":38,"character":9,"targetString":"array"}],[{"text":"function merge(left: any, right: any): any[]","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"merge"},{"text":"(parameter) left: any","docs":"","start":15,"length":4,"line":0,"character":15,"targetString":"left"},{"text":"(parameter) right: any","docs":"","start":21,"length":5,"line":0,"character":21,"targetString":"right"},{"text":"const result: any[]","docs":"","start":38,"length":6,"line":1,"character":8,"targetString":"result"},{"text":"(parameter) left: any","docs":"","start":59,"length":4,"line":2,"character":9,"targetString":"left"},{"text":"(parameter) right: any","docs":"","start":74,"length":5,"line":2,"character":24,"targetString":"right"},{"text":"(parameter) left: any","docs":"","start":98,"length":4,"line":3,"character":8,"targetString":"left"},{"text":"(parameter) right: any","docs":"","start":113,"length":5,"line":3,"character":23,"targetString":"right"},{"text":"(parameter) left: any","docs":"","start":139,"length":4,"line":4,"character":10,"targetString":"left"},{"text":"(parameter) right: any","docs":"","start":149,"length":5,"line":4,"character":20,"targetString":"right"},{"text":"const result: any[]","docs":"","start":169,"length":6,"line":5,"character":8,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":176,"length":4,"line":5,"character":15,"targetString":"push"},{"text":"(parameter) left: any","docs":"","start":181,"length":4,"line":5,"character":20,"targetString":"left"},{"text":"const result: any[]","docs":"","start":218,"length":6,"line":7,"character":8,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":225,"length":4,"line":7,"character":15,"targetString":"push"},{"text":"(parameter) right: any","docs":"","start":230,"length":5,"line":7,"character":20,"targetString":"right"},{"text":"(parameter) left: any","docs":"","start":268,"length":4,"line":9,"character":15,"targetString":"left"},{"text":"const result: any[]","docs":"","start":289,"length":6,"line":10,"character":6,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":296,"length":4,"line":10,"character":13,"targetString":"push"},{"text":"(parameter) left: any","docs":"","start":301,"length":4,"line":10,"character":18,"targetString":"left"},{"text":"const result: any[]","docs":"","start":334,"length":6,"line":12,"character":6,"targetString":"result"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":341,"length":4,"line":12,"character":13,"targetString":"push"},{"text":"(parameter) right: any","docs":"","start":346,"length":5,"line":12,"character":18,"targetString":"right"},{"text":"const result: any[]","docs":"","start":380,"length":6,"line":15,"character":9,"targetString":"result"},{"text":"function sortMerge(array: any): any","docs":"","start":399,"length":9,"line":18,"character":9,"targetString":"sortMerge"},{"text":"(parameter) array: any","docs":"","start":409,"length":5,"line":18,"character":19,"targetString":"array"},{"text":"const length: any","docs":"","start":426,"length":6,"line":19,"character":8,"targetString":"length"},{"text":"(parameter) array: any","docs":"","start":435,"length":5,"line":19,"character":17,"targetString":"array"},{"text":"const length: any","docs":"","start":454,"length":6,"line":20,"character":6,"targetString":"length"},{"text":"(parameter) array: any","docs":"","start":475,"length":5,"line":20,"character":27,"targetString":"array"},{"text":"const mid: number","docs":"","start":489,"length":3,"line":21,"character":8,"targetString":"mid"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":495,"length":4,"line":21,"character":14,"targetString":"Math"},{"text":"(method) Math.floor(x: number): number","docs":"Returns the greatest integer less than or equal to its numeric argument.","start":500,"length":5,"line":21,"character":19,"targetString":"floor"},{"text":"const length: any","docs":"","start":506,"length":6,"line":21,"character":25,"targetString":"length"},{"text":"const left: any","docs":"","start":528,"length":4,"line":22,"character":8,"targetString":"left"},{"text":"(parameter) array: any","docs":"","start":535,"length":5,"line":22,"character":15,"targetString":"array"},{"text":"const mid: number","docs":"","start":550,"length":3,"line":22,"character":30,"targetString":"mid"},{"text":"const right: any","docs":"","start":563,"length":5,"line":23,"character":8,"targetString":"right"},{"text":"(parameter) array: any","docs":"","start":571,"length":5,"line":23,"character":16,"targetString":"array"},{"text":"const mid: number","docs":"","start":583,"length":3,"line":23,"character":28,"targetString":"mid"},{"text":"const length: any","docs":"","start":588,"length":6,"line":23,"character":33,"targetString":"length"},{"text":"function merge(left: any, right: any): any[]","docs":"","start":605,"length":5,"line":24,"character":9,"targetString":"merge"},{"text":"function sortMerge(array: any): any","docs":"","start":611,"length":9,"line":24,"character":15,"targetString":"sortMerge"},{"text":"const left: any","docs":"","start":621,"length":4,"line":24,"character":25,"targetString":"left"},{"text":"function sortMerge(array: any): any","docs":"","start":628,"length":9,"line":24,"character":32,"targetString":"sortMerge"},{"text":"const right: any","docs":"","start":638,"length":5,"line":24,"character":42,"targetString":"right"}]],"/blog/数据结构算法/树遍历、删除节点":[[{"text":"const clearDoneNode: (treeNode: TreeNode[]) => any[]","docs":"","start":6,"length":13,"line":0,"character":6,"targetString":"clearDoneNode"},{"text":"(parameter) treeNode: any[]","docs":"","start":23,"length":8,"line":0,"character":23,"targetString":"treeNode"},{"text":"(parameter) treeNode: any[]","docs":"","start":58,"length":8,"line":1,"character":8,"targetString":"treeNode"},{"text":"(property) Array<any>.length: number","docs":"Gets or sets the length of the array. This is a number one higher than the highest index in the array.","start":68,"length":6,"line":1,"character":18,"targetString":"length"},{"text":"const nextTree: any[]","docs":"","start":99,"length":8,"line":2,"character":8,"targetString":"nextTree"},{"text":"const node: any","docs":"","start":138,"length":4,"line":3,"character":13,"targetString":"node"},{"text":"(parameter) treeNode: any[]","docs":"","start":146,"length":8,"line":3,"character":21,"targetString":"treeNode"},{"text":"const node: any","docs":"","start":178,"length":4,"line":5,"character":8,"targetString":"node"},{"text":"const nextTree: any[]","docs":"","start":234,"length":8,"line":9,"character":4,"targetString":"nextTree"},{"text":"(method) Array<any>.push(...items: any[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":243,"length":4,"line":9,"character":13,"targetString":"push"},{"text":"const node: any","docs":"","start":248,"length":4,"line":9,"character":18,"targetString":"node"},{"text":"const node: any","docs":"","start":270,"length":4,"line":11,"character":4,"targetString":"node"},{"text":"const clearDoneNode: (treeNode: TreeNode[]) => any[]","docs":"","start":286,"length":13,"line":11,"character":20,"targetString":"clearDoneNode"},{"text":"const node: any","docs":"","start":300,"length":4,"line":11,"character":34,"targetString":"node"},{"text":"const nextTree: any[]","docs":"","start":338,"length":8,"line":14,"character":9,"targetString":"nextTree"}]],"/blog/正则表达式/combineReplacers":[[{"text":"const compose: any","docs":"","start":13,"length":7,"line":0,"character":13,"targetString":"compose"}],[{"text":"const formatChangelog: any","docs":"","start":6,"length":15,"line":0,"character":6,"targetString":"formatChangelog"},{"text":"(parameter) _: any","docs":"","start":201,"length":1,"line":4,"character":56,"targetString":"_"},{"text":"(parameter) version: any","docs":"","start":204,"length":7,"line":4,"character":59,"targetString":"version"},{"text":"(parameter) date: any","docs":"","start":213,"length":4,"line":4,"character":68,"targetString":"date"},{"text":"(parameter) version: any","docs":"","start":229,"length":7,"line":4,"character":84,"targetString":"version"},{"text":"(parameter) date: any","docs":"","start":245,"length":4,"line":4,"character":100,"targetString":"date"},{"text":"(parameter) _: any","docs":"","start":312,"length":1,"line":6,"character":37,"targetString":"_"},{"text":"(parameter) version: any","docs":"","start":315,"length":7,"line":6,"character":40,"targetString":"version"},{"text":"(parameter) version: any","docs":"","start":336,"length":7,"line":6,"character":61,"targetString":"version"},{"text":"(parameter) _: any","docs":"","start":510,"length":1,"line":11,"character":60,"targetString":"_"},{"text":"(parameter) version: any","docs":"","start":513,"length":7,"line":11,"character":63,"targetString":"version"},{"text":"(parameter) date: any","docs":"","start":522,"length":4,"line":11,"character":72,"targetString":"date"},{"text":"(parameter) version: any","docs":"","start":538,"length":7,"line":11,"character":88,"targetString":"version"},{"text":"(parameter) date: any","docs":"","start":554,"length":4,"line":11,"character":104,"targetString":"date"},{"text":"const formatChangelog: any","docs":"","start":567,"length":15,"line":14,"character":0,"targetString":"formatChangelog"}]],"/blog/正则表达式/理解正则表达式及常用正则表达式整理":[[{"text":"const Patterns: {\n    consolelog: RegExp;\n    import: RegExp;\n    markdown_codeblock: RegExp;\n}","docs":"","start":13,"length":8,"line":0,"character":13,"targetString":"Patterns"},{"text":"(property) consolelog: RegExp","docs":"","start":28,"length":10,"line":1,"character":2,"targetString":"consolelog"},{"text":"(property) import: RegExp","docs":"","start":83,"length":6,"line":2,"character":2,"targetString":"import"},{"text":"(property) markdown_codeblock: RegExp","docs":"","start":150,"length":18,"line":3,"character":2,"targetString":"markdown_codeblock"},{"text":"const matchPattern: (pattern: RegExp, str: string) => RegExpExecArray[]","docs":"","start":226,"length":12,"line":6,"character":13,"targetString":"matchPattern"},{"text":"(parameter) pattern: RegExp","docs":"","start":242,"length":7,"line":6,"character":29,"targetString":"pattern"},{"text":"interface RegExp","docs":"","start":251,"length":6,"line":6,"character":38,"targetString":"RegExp"},{"text":"(parameter) str: string","docs":"","start":259,"length":3,"line":6,"character":46,"targetString":"str"},{"text":"const scan: RegExp","docs":"","start":285,"length":4,"line":7,"character":8,"targetString":"scan"},{"text":"var RegExp: RegExpConstructor\nnew (pattern: string | RegExp, flags?: string | undefined) => RegExp (+2 overloads)","docs":"","start":296,"length":6,"line":7,"character":19,"targetString":"RegExp"},{"text":"(parameter) pattern: RegExp","docs":"","start":303,"length":7,"line":7,"character":26,"targetString":"pattern"},{"text":"(property) RegExp.source: string","docs":"Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal.","start":311,"length":6,"line":7,"character":34,"targetString":"source"},{"text":"let next: RegExpExecArray | null","docs":"","start":330,"length":4,"line":8,"character":6,"targetString":"next"},{"text":"const scan: RegExp","docs":"","start":337,"length":4,"line":8,"character":13,"targetString":"scan"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":342,"length":4,"line":8,"character":18,"targetString":"exec"},{"text":"(parameter) str: string","docs":"","start":347,"length":3,"line":8,"character":23,"targetString":"str"},{"text":"const result: RegExpExecArray[]","docs":"","start":360,"length":6,"line":9,"character":8,"targetString":"result"},{"text":"interface RegExpExecArray","docs":"","start":368,"length":15,"line":9,"character":16,"targetString":"RegExpExecArray"},{"text":"let next: RegExpExecArray | null","docs":"","start":400,"length":4,"line":10,"character":9,"targetString":"next"},{"text":"const result: RegExpExecArray[]","docs":"","start":412,"length":6,"line":11,"character":4,"targetString":"result"},{"text":"(method) Array<RegExpExecArray>.push(...items: RegExpExecArray[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":419,"length":4,"line":11,"character":11,"targetString":"push"},{"text":"let next: RegExpExecArray","docs":"","start":424,"length":4,"line":11,"character":16,"targetString":"next"},{"text":"let next: RegExpExecArray | null","docs":"","start":434,"length":4,"line":12,"character":4,"targetString":"next"},{"text":"const scan: RegExp","docs":"","start":441,"length":4,"line":12,"character":11,"targetString":"scan"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":446,"length":4,"line":12,"character":16,"targetString":"exec"},{"text":"(parameter) str: string","docs":"","start":451,"length":3,"line":12,"character":21,"targetString":"str"},{"text":"const result: RegExpExecArray[]","docs":"","start":469,"length":6,"line":14,"character":9,"targetString":"result"},{"text":"const getImportNames: (str: string) => {\n    lib: string;\n    names: string[];\n}[]","docs":"","start":492,"length":14,"line":17,"character":13,"targetString":"getImportNames"},{"text":"(parameter) str: string","docs":"","start":510,"length":3,"line":17,"character":31,"targetString":"str"},{"text":"const result: RegExpExecArray[]","docs":"","start":536,"length":6,"line":18,"character":8,"targetString":"result"},{"text":"const matchPattern: (pattern: RegExp, str: string) => RegExpExecArray[]","docs":"","start":545,"length":12,"line":18,"character":17,"targetString":"matchPattern"},{"text":"const Patterns: {\n    consolelog: RegExp;\n    import: RegExp;\n    markdown_codeblock: RegExp;\n}","docs":"","start":558,"length":8,"line":18,"character":30,"targetString":"Patterns"},{"text":"(property) import: RegExp","docs":"","start":567,"length":6,"line":18,"character":39,"targetString":"import"},{"text":"(parameter) str: string","docs":"","start":575,"length":3,"line":18,"character":47,"targetString":"str"},{"text":"const importNames: {\n    lib: string;\n    names: string[];\n}[]","docs":"","start":588,"length":11,"line":19,"character":8,"targetString":"importNames"},{"text":"const result: RegExpExecArray[]","docs":"","start":602,"length":6,"line":19,"character":22,"targetString":"result"},{"text":"(method) Array<RegExpExecArray>.map<{\n    lib: string;\n    names: string[];\n}>(callbackfn: (value: RegExpExecArray, index: number, array: RegExpExecArray[]) => {\n    lib: string;\n    names: string[];\n}, thisArg?: any): {\n    lib: string;\n    names: string[];\n}[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":609,"length":3,"line":19,"character":29,"targetString":"map"},{"text":"(parameter) item: RegExpExecArray","docs":"","start":613,"length":4,"line":19,"character":33,"targetString":"item"},{"text":"const names: string[]","docs":"","start":633,"length":5,"line":20,"character":10,"targetString":"names"},{"text":"(parameter) item: RegExpExecArray","docs":"","start":641,"length":4,"line":20,"character":18,"targetString":"item"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":649,"length":5,"line":20,"character":26,"targetString":"split"},{"text":"const libName: string","docs":"","start":696,"length":7,"line":21,"character":10,"targetString":"libName"},{"text":"(parameter) item: RegExpExecArray","docs":"","start":706,"length":4,"line":21,"character":20,"targetString":"item"},{"text":"(property) lib: string","docs":"","start":773,"length":3,"line":23,"character":6,"targetString":"lib"},{"text":"const libName: string","docs":"","start":778,"length":7,"line":23,"character":11,"targetString":"libName"},{"text":"(property) names: string[]","docs":"","start":793,"length":5,"line":24,"character":6,"targetString":"names"},{"text":"const names: string[]","docs":"","start":800,"length":5,"line":24,"character":13,"targetString":"names"},{"text":"(method) Array<string>.map<string>(callbackfn: (value: string, index: number, array: string[]) => string, thisArg?: any): string[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":806,"length":3,"line":24,"character":19,"targetString":"map"},{"text":"(parameter) name: string","docs":"","start":810,"length":4,"line":24,"character":23,"targetString":"name"},{"text":"(parameter) name: string","docs":"","start":818,"length":4,"line":24,"character":31,"targetString":"name"},{"text":"(method) String.trim(): string","docs":"Removes the leading and trailing white space and line terminator characters from a string.","start":823,"length":4,"line":24,"character":36,"targetString":"trim"},{"text":"const importNames: {\n    lib: string;\n    names: string[];\n}[]","docs":"","start":851,"length":11,"line":27,"character":9,"targetString":"importNames"},{"text":"const getMarkdownCode: (str: string) => {\n    lang: string;\n    code: string;\n}[]","docs":"","start":879,"length":15,"line":30,"character":13,"targetString":"getMarkdownCode"},{"text":"(parameter) str: string","docs":"","start":898,"length":3,"line":30,"character":32,"targetString":"str"},{"text":"const result: RegExpExecArray[]","docs":"","start":924,"length":6,"line":31,"character":8,"targetString":"result"},{"text":"const matchPattern: (pattern: RegExp, str: string) => RegExpExecArray[]","docs":"","start":933,"length":12,"line":31,"character":17,"targetString":"matchPattern"},{"text":"const Patterns: {\n    consolelog: RegExp;\n    import: RegExp;\n    markdown_codeblock: RegExp;\n}","docs":"","start":946,"length":8,"line":31,"character":30,"targetString":"Patterns"},{"text":"(property) markdown_codeblock: RegExp","docs":"","start":955,"length":18,"line":31,"character":39,"targetString":"markdown_codeblock"},{"text":"(parameter) str: string","docs":"","start":975,"length":3,"line":31,"character":59,"targetString":"str"},{"text":"const result: RegExpExecArray[]","docs":"","start":989,"length":6,"line":32,"character":9,"targetString":"result"},{"text":"(method) Array<RegExpExecArray>.map<{\n    lang: string;\n    code: string;\n}>(callbackfn: (value: RegExpExecArray, index: number, array: RegExpExecArray[]) => {\n    lang: string;\n    code: string;\n}, thisArg?: any): {\n    lang: string;\n    code: string;\n}[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":996,"length":3,"line":32,"character":16,"targetString":"map"},{"text":"(parameter) item: RegExpExecArray","docs":"","start":1000,"length":4,"line":32,"character":20,"targetString":"item"},{"text":"const lang: string","docs":"","start":1020,"length":4,"line":33,"character":10,"targetString":"lang"},{"text":"(parameter) item: RegExpExecArray","docs":"","start":1027,"length":4,"line":33,"character":17,"targetString":"item"},{"text":"const code: string","docs":"","start":1045,"length":4,"line":34,"character":10,"targetString":"code"},{"text":"(parameter) item: RegExpExecArray","docs":"","start":1052,"length":4,"line":34,"character":17,"targetString":"item"},{"text":"(property) lang: string","docs":"","start":1079,"length":4,"line":36,"character":6,"targetString":"lang"},{"text":"(property) code: string","docs":"","start":1091,"length":4,"line":37,"character":6,"targetString":"code"}],[{"text":"const matchPattern: (pattern: RegExp, str: string) => RegExpExecArray[]","docs":"","start":13,"length":12,"line":0,"character":13,"targetString":"matchPattern"},{"text":"(parameter) pattern: RegExp","docs":"","start":29,"length":7,"line":0,"character":29,"targetString":"pattern"},{"text":"interface RegExp","docs":"","start":38,"length":6,"line":0,"character":38,"targetString":"RegExp"},{"text":"(parameter) str: string","docs":"","start":46,"length":3,"line":0,"character":46,"targetString":"str"},{"text":"const scan: RegExp","docs":"","start":114,"length":4,"line":2,"character":8,"targetString":"scan"},{"text":"var RegExp: RegExpConstructor\nnew (pattern: string | RegExp, flags?: string | undefined) => RegExp (+2 overloads)","docs":"","start":125,"length":6,"line":2,"character":19,"targetString":"RegExp"},{"text":"(parameter) pattern: RegExp","docs":"","start":132,"length":7,"line":2,"character":26,"targetString":"pattern"},{"text":"(property) RegExp.source: string","docs":"Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal.","start":140,"length":6,"line":2,"character":34,"targetString":"source"},{"text":"let next: RegExpExecArray | null","docs":"","start":168,"length":4,"line":3,"character":6,"targetString":"next"},{"text":"const scan: RegExp","docs":"","start":175,"length":4,"line":3,"character":13,"targetString":"scan"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":180,"length":4,"line":3,"character":18,"targetString":"exec"},{"text":"(parameter) str: string","docs":"","start":185,"length":3,"line":3,"character":23,"targetString":"str"},{"text":"const result: RegExpExecArray[]","docs":"","start":208,"length":6,"line":4,"character":8,"targetString":"result"},{"text":"interface RegExpExecArray","docs":"","start":216,"length":15,"line":4,"character":16,"targetString":"RegExpExecArray"},{"text":"let next: RegExpExecArray | null","docs":"","start":248,"length":4,"line":5,"character":9,"targetString":"next"},{"text":"const result: RegExpExecArray[]","docs":"","start":327,"length":6,"line":7,"character":4,"targetString":"result"},{"text":"(method) Array<RegExpExecArray>.push(...items: RegExpExecArray[]): number","docs":"Appends new elements to the end of an array, and returns the new length of the array.","start":334,"length":4,"line":7,"character":11,"targetString":"push"},{"text":"let next: RegExpExecArray","docs":"","start":339,"length":4,"line":7,"character":16,"targetString":"next"},{"text":"let next: RegExpExecArray | null","docs":"","start":349,"length":4,"line":8,"character":4,"targetString":"next"},{"text":"const scan: RegExp","docs":"","start":356,"length":4,"line":8,"character":11,"targetString":"scan"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":361,"length":4,"line":8,"character":16,"targetString":"exec"},{"text":"(parameter) str: string","docs":"","start":366,"length":3,"line":8,"character":21,"targetString":"str"},{"text":"const result: RegExpExecArray[]","docs":"","start":392,"length":6,"line":10,"character":9,"targetString":"result"}],[{"text":"const str: \"\\n    _handleBindData = () => {\\n      const { route, navigation, bindData } = this.props;\\n      const bindDataObj = parseRaw(bindData);\\n      const { params } = route;\\n      const { selectedObj } = this.state;\\n      console.log('绑定前', bindDataObj);\\n      bindDataObj[params?.mac] = selectedObj;\\n      console .log ('绑定后', bindDataObj);\\n      const newBindList = stringifyToRaw(bindDataObj);\\n      TYDevice.putDeviceData({\\n        [dpCodes.bindData]: newBindList,\\n      });\\n      navigation.navigate('analysis', { isRefresh: true });\\n    };\\n    \"","docs":"","start":70,"length":3,"line":2,"character":10,"targetString":"str"},{"text":"const result: any","docs":"","start":632,"length":6,"line":18,"character":10,"targetString":"result"},{"text":"const str: \"\\n    _handleBindData = () => {\\n      const { route, navigation, bindData } = this.props;\\n      const bindDataObj = parseRaw(bindData);\\n      const { params } = route;\\n      const { selectedObj } = this.state;\\n      console.log('绑定前', bindDataObj);\\n      bindDataObj[params?.mac] = selectedObj;\\n      console .log ('绑定后', bindDataObj);\\n      const newBindList = stringifyToRaw(bindDataObj);\\n      TYDevice.putDeviceData({\\n        [dpCodes.bindData]: newBindList,\\n      });\\n      navigation.navigate('analysis', { isRefresh: true });\\n    };\\n    \"","docs":"","start":675,"length":3,"line":18,"character":53,"targetString":"str"},{"text":"const result: any","docs":"","start":691,"length":6,"line":19,"character":11,"targetString":"result"},{"text":"(parameter) item: any","docs":"","start":702,"length":4,"line":19,"character":22,"targetString":"item"},{"text":"(parameter) item: any","docs":"","start":710,"length":4,"line":19,"character":30,"targetString":"item"},{"text":"const str: \"\\n    import { existsSync, readFile, readFileSync } from 'fs'\\n    import{ join } from 'path'\\n\\n    import { PrivateApiList }from './types';\\n\\n    export const installPrivateApi = async (version?: string) => {\\n      await downloadTarball(createPrivateTarballUrl(version), tempLocation)\\n    }\\n    \"","docs":"","start":860,"length":3,"line":26,"character":10,"targetString":"str"},{"text":"const result: any","docs":"","start":1171,"length":6,"line":36,"character":10,"targetString":"result"},{"text":"const str: \"\\n    import { existsSync, readFile, readFileSync } from 'fs'\\n    import{ join } from 'path'\\n\\n    import { PrivateApiList }from './types';\\n\\n    export const installPrivateApi = async (version?: string) => {\\n      await downloadTarball(createPrivateTarballUrl(version), tempLocation)\\n    }\\n    \"","docs":"","start":1210,"length":3,"line":36,"character":49,"targetString":"str"},{"text":"const result: any","docs":"","start":1226,"length":6,"line":37,"character":11,"targetString":"result"},{"text":"(parameter) item: any","docs":"","start":1237,"length":4,"line":37,"character":22,"targetString":"item"},{"text":"(parameter) item: any","docs":"","start":1245,"length":4,"line":37,"character":30,"targetString":"item"},{"text":"const str: \"\\n    /* eslint-disable react/jsx-props-no-spreading */\\n    /* eslint-disable @typescript-eslint/ban-ts-comment */\\n    /* eslint-disable max-len */\\n    import React from 'react';\\n    import { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\\n    import { Rect } from 'react-native-svg';\\n    import { connect } from 'react-redux';\\n    import { IconFont, LinearGradient, TopBar, TYSdk, TYSectionList, Utils } from 'tuya-panel-kit';\\n    \\n    import dpCodes from '../config/dpCodes';\\n    import Strings from '../i18n';\\n    import { DpState } from '../models/modules/common';\\n    import { handleError, hextoString, parseRaw, stringifyToRaw } from '../utils';\\n    \\n    const { parseJSON } = Utils.JsonUtils;\\n    const selectedPath =\\n      'M788.053333 276.053333a32 32 0 0 1 48.341334 41.642667l-3.114667 3.584-384 384a32 32 0 0 1-41.642667 3.114667l-3.584-3.114667-170.666666-170.666667a32 32 0 0 1 41.642666-48.341333l3.584 3.114667L426.666667 637.397333l361.386666-361.386666z';\\n    \\n    const { convertX: cx, isIphoneX, viewWidth } = Utils.RatioUtils;\\n    \"","docs":"","start":1468,"length":3,"line":45,"character":10,"targetString":"str"},{"text":"const result: any","docs":"","start":2554,"length":6,"line":66,"character":10,"targetString":"result"},{"text":"const str: \"\\n    /* eslint-disable react/jsx-props-no-spreading */\\n    /* eslint-disable @typescript-eslint/ban-ts-comment */\\n    /* eslint-disable max-len */\\n    import React from 'react';\\n    import { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\\n    import { Rect } from 'react-native-svg';\\n    import { connect } from 'react-redux';\\n    import { IconFont, LinearGradient, TopBar, TYSdk, TYSectionList, Utils } from 'tuya-panel-kit';\\n    \\n    import dpCodes from '../config/dpCodes';\\n    import Strings from '../i18n';\\n    import { DpState } from '../models/modules/common';\\n    import { handleError, hextoString, parseRaw, stringifyToRaw } from '../utils';\\n    \\n    const { parseJSON } = Utils.JsonUtils;\\n    const selectedPath =\\n      'M788.053333 276.053333a32 32 0 0 1 48.341334 41.642667l-3.114667 3.584-384 384a32 32 0 0 1-41.642667 3.114667l-3.584-3.114667-170.666666-170.666667a32 32 0 0 1 41.642666-48.341333l3.584 3.114667L426.666667 637.397333l361.386666-361.386666z';\\n    \\n    const { convertX: cx, isIphoneX, viewWidth } = Utils.RatioUtils;\\n    \"","docs":"","start":2578,"length":3,"line":66,"character":34,"targetString":"str"},{"text":"const result: any","docs":"","start":2594,"length":6,"line":67,"character":11,"targetString":"result"},{"text":"(property) lib: string","docs":"","start":2628,"length":3,"line":69,"character":8,"targetString":"lib"},{"text":"(property) names: string[]","docs":"","start":2657,"length":5,"line":70,"character":8,"targetString":"names"},{"text":"(property) lib: string","docs":"","start":2732,"length":3,"line":72,"character":8,"targetString":"lib"},{"text":"(property) names: string[]","docs":"","start":2757,"length":5,"line":72,"character":33,"targetString":"names"},{"text":"(property) lib: string","docs":"","start":2784,"length":3,"line":73,"character":8,"targetString":"lib"},{"text":"(property) names: string[]","docs":"","start":2804,"length":5,"line":73,"character":28,"targetString":"names"},{"text":"(property) lib: string","docs":"","start":2842,"length":3,"line":75,"character":8,"targetString":"lib"},{"text":"(property) names: string[]","docs":"","start":2873,"length":5,"line":76,"character":8,"targetString":"names"},{"text":"(property) lib: string","docs":"","start":3043,"length":3,"line":85,"character":8,"targetString":"lib"},{"text":"(property) names: string[]","docs":"","start":3076,"length":5,"line":85,"character":41,"targetString":"names"},{"text":"(property) lib: string","docs":"","start":3114,"length":3,"line":87,"character":8,"targetString":"lib"},{"text":"(property) names: string[]","docs":"","start":3139,"length":5,"line":88,"character":8,"targetString":"names"},{"text":"const str: \"\\n---\\ntitle: Battery 电池\\ndesc: '`Battery` 是电池组件，一般用于需要展示电池百分比的场景。'\\ndemo: /basic/battery\\n---\\n\\n## 代码演示\\n\\n### 基础使用\\n\\n```jsx\\n<Battery value={60} />\\n```\\n\\n### 本地主题\\n\\n```jsx\\n<Battery value={40} size={30} theme={{ batteryColor: 'rgba(167,98,43,.5)' }} />\\n```\\n\\n### 修改电量颜色分配规则\\n\\n```jsx\\nconst calcColor = (top, highColor, middleColor, lowColor) => {\\n  // 0-10%: 红色   10%-60%: 黑色    60%-100%: 绿色\\n  if (top <= 8.4 && top >= 3) {\\n    return highColor;\\n  } else if (top <= 15.6 && top > 8.4) {\\n    return middleColor;\\n  }\\n  return lowColor;\\n};\\n...\\n<Battery value={60} size={30} onCalcColor={calcColor} middleColor=\\\"#999\\\" />\\n```\\n\\n## API\\n\\n<API name=\\\"BatteryProps\\\"></API>\\n\"","docs":"","start":3267,"length":3,"line":94,"character":10,"targetString":"str"},{"text":"const result: any","docs":"","start":3954,"length":6,"line":135,"character":10,"targetString":"result"},{"text":"const str: \"\\n---\\ntitle: Battery 电池\\ndesc: '`Battery` 是电池组件，一般用于需要展示电池百分比的场景。'\\ndemo: /basic/battery\\n---\\n\\n## 代码演示\\n\\n### 基础使用\\n\\n```jsx\\n<Battery value={60} />\\n```\\n\\n### 本地主题\\n\\n```jsx\\n<Battery value={40} size={30} theme={{ batteryColor: 'rgba(167,98,43,.5)' }} />\\n```\\n\\n### 修改电量颜色分配规则\\n\\n```jsx\\nconst calcColor = (top, highColor, middleColor, lowColor) => {\\n  // 0-10%: 红色   10%-60%: 黑色    60%-100%: 绿色\\n  if (top <= 8.4 && top >= 3) {\\n    return highColor;\\n  } else if (top <= 15.6 && top > 8.4) {\\n    return middleColor;\\n  }\\n  return lowColor;\\n};\\n...\\n<Battery value={60} size={30} onCalcColor={calcColor} middleColor=\\\"#999\\\" />\\n```\\n\\n## API\\n\\n<API name=\\\"BatteryProps\\\"></API>\\n\"","docs":"","start":3979,"length":3,"line":135,"character":35,"targetString":"str"},{"text":"const result: any","docs":"","start":3995,"length":6,"line":136,"character":11,"targetString":"result"},{"text":"(property) lang: string","docs":"","start":4021,"length":4,"line":137,"character":8,"targetString":"lang"},{"text":"(property) code: string","docs":"","start":4034,"length":4,"line":137,"character":21,"targetString":"code"},{"text":"(property) lang: string","docs":"","start":4084,"length":4,"line":139,"character":8,"targetString":"lang"},{"text":"(property) code: string","docs":"","start":4105,"length":4,"line":140,"character":8,"targetString":"code"},{"text":"(property) lang: string","docs":"","start":4218,"length":4,"line":143,"character":8,"targetString":"lang"},{"text":"(property) code: string","docs":"","start":4239,"length":4,"line":144,"character":8,"targetString":"code"}]],"/blog/浏览器API/MutationObserver":[[{"text":"interface Microtask","docs":"","start":17,"length":9,"line":0,"character":17,"targetString":"Microtask"},{"text":"interface MutationCallback","docs":"","start":35,"length":16,"line":0,"character":35,"targetString":"MutationCallback"},{"text":"function microtask(task: Microtask): void","docs":"","start":72,"length":9,"line":2,"character":16,"targetString":"microtask"},{"text":"(parameter) task: Microtask","docs":"","start":82,"length":4,"line":2,"character":26,"targetString":"task"},{"text":"interface Microtask","docs":"","start":88,"length":9,"line":2,"character":32,"targetString":"Microtask"},{"text":"const observer: MutationObserver","docs":"","start":134,"length":8,"line":4,"character":8,"targetString":"observer"},{"text":"var MutationObserver: new (callback: MutationCallback) => MutationObserver","docs":"Provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature which was part of the DOM3 Events specification.","start":149,"length":16,"line":4,"character":23,"targetString":"MutationObserver"},{"text":"(parameter) task: Microtask","docs":"","start":166,"length":4,"line":4,"character":40,"targetString":"task"},{"text":"const element: Text","docs":"","start":198,"length":7,"line":7,"character":8,"targetString":"element"},{"text":"var document: Document","docs":"","start":208,"length":8,"line":7,"character":18,"targetString":"document"},{"text":"(method) Document.createTextNode(data: string): Text","docs":"Creates a text string from the specified value.","start":217,"length":14,"line":7,"character":27,"targetString":"createTextNode"},{"text":"const observer: MutationObserver","docs":"","start":253,"length":8,"line":10,"character":2,"targetString":"observer"},{"text":"(method) MutationObserver.observe(target: Node, options?: MutationObserverInit | undefined): void","docs":"Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).\n\nThe options argument allows for setting mutation observation options via object members.","start":262,"length":7,"line":10,"character":11,"targetString":"observe"},{"text":"const element: Text","docs":"","start":270,"length":7,"line":10,"character":19,"targetString":"element"},{"text":"(property) MutationObserverInit.characterData?: boolean | undefined","docs":"Set to true if mutations to target's data are to be observed. Can be omitted if characterDataOldValue is specified.","start":285,"length":13,"line":11,"character":4,"targetString":"characterData"},{"text":"const element: Text","docs":"","start":345,"length":7,"line":15,"character":2,"targetString":"element"},{"text":"(property) CharacterData.data: string","docs":"","start":353,"length":4,"line":15,"character":10,"targetString":"data"}]],"/blog/浏览器API/documentElement":[[{"text":"var document: Document","docs":"","start":0,"length":8,"line":0,"character":0,"targetString":"document"},{"text":"(property) Document.body: HTMLElement","docs":"Specifies the beginning and end of the document body.","start":9,"length":4,"line":0,"character":9,"targetString":"body"},{"text":"(property) Node.parentElement: HTMLElement | null","docs":"Returns the parent element.","start":14,"length":13,"line":0,"character":14,"targetString":"parentElement"},{"text":"var document: Document","docs":"","start":32,"length":8,"line":0,"character":32,"targetString":"document"},{"text":"(property) Document.documentElement: HTMLElement","docs":"Gets a reference to the root node of the document.","start":41,"length":15,"line":0,"character":41,"targetString":"documentElement"}]],"/blog/浏览器API/requestAnimationFrame":[[{"text":"let lastTime: number","docs":"","start":4,"length":8,"line":0,"character":4,"targetString":"lastTime"},{"text":"const requestAnimationFrame: (callback: any) => number","docs":"","start":26,"length":21,"line":2,"character":6,"targetString":"requestAnimationFrame"},{"text":"(parameter) callback: any","docs":"","start":50,"length":8,"line":2,"character":30,"targetString":"callback"},{"text":"const now: number","docs":"","start":72,"length":3,"line":3,"character":8,"targetString":"now"},{"text":"var Date: DateConstructor","docs":"Enables basic storage and retrieval of dates and times.","start":78,"length":4,"line":3,"character":14,"targetString":"Date"},{"text":"(method) DateConstructor.now(): number","docs":"","start":83,"length":3,"line":3,"character":19,"targetString":"now"},{"text":"const nextTime: number","docs":"","start":97,"length":8,"line":4,"character":8,"targetString":"nextTime"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":108,"length":4,"line":4,"character":19,"targetString":"Math"},{"text":"(method) Math.max(...values: number[]): number","docs":"Returns the larger of a set of supplied numeric expressions.","start":113,"length":3,"line":4,"character":24,"targetString":"max"},{"text":"let lastTime: number","docs":"","start":117,"length":8,"line":4,"character":28,"targetString":"lastTime"},{"text":"const now: number","docs":"","start":132,"length":3,"line":4,"character":43,"targetString":"now"},{"text":"function setTimeout(handler: TimerHandler, timeout?: number | undefined, ...arguments: any[]): number","docs":"","start":147,"length":10,"line":6,"character":9,"targetString":"setTimeout"},{"text":"(parameter) callback: any","docs":"","start":169,"length":8,"line":7,"character":4,"targetString":"callback"},{"text":"let lastTime: number","docs":"","start":178,"length":8,"line":7,"character":13,"targetString":"lastTime"},{"text":"const nextTime: number","docs":"","start":189,"length":8,"line":7,"character":24,"targetString":"nextTime"},{"text":"const nextTime: number","docs":"","start":205,"length":8,"line":8,"character":4,"targetString":"nextTime"},{"text":"const now: number","docs":"","start":216,"length":3,"line":8,"character":15,"targetString":"now"},{"text":"const cancelAnimationFrame: (handle?: number | undefined) => void","docs":"","start":230,"length":20,"line":11,"character":6,"targetString":"cancelAnimationFrame"},{"text":"function clearTimeout(handle?: number | undefined): void","docs":"","start":253,"length":12,"line":11,"character":29,"targetString":"clearTimeout"}]],"/blog/浏览器基础/PWA离线应用":[[],[{"text":"const cacheKey: \"pwa-test\"","docs":"","start":6,"length":8,"line":0,"character":6,"targetString":"cacheKey"},{"text":"var self: Window & typeof globalThis","docs":"","start":29,"length":4,"line":2,"character":0,"targetString":"self"},{"text":"(method) addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":34,"length":16,"line":2,"character":5,"targetString":"addEventListener"},{"text":"(parameter) event: Event","docs":"","start":62,"length":5,"line":2,"character":33,"targetString":"event"},{"text":"(parameter) event: Event","docs":"","start":73,"length":5,"line":3,"character":2,"targetString":"event"},{"text":"var caches: CacheStorage","docs":"","start":94,"length":6,"line":4,"character":4,"targetString":"caches"},{"text":"(method) CacheStorage.open(cacheName: string): Promise<Cache>","docs":"","start":108,"length":4,"line":5,"character":7,"targetString":"open"},{"text":"const cacheKey: \"pwa-test\"","docs":"","start":113,"length":8,"line":5,"character":12,"targetString":"cacheKey"},{"text":"(method) Promise<Cache>.then<void, never>(onfulfilled?: ((value: Cache) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":130,"length":4,"line":6,"character":7,"targetString":"then"},{"text":"(parameter) cache: Cache","docs":"","start":135,"length":5,"line":6,"character":12,"targetString":"cache"},{"text":"(parameter) cache: Cache","docs":"","start":152,"length":5,"line":7,"character":8,"targetString":"cache"},{"text":"(method) Cache.addAll(requests: Iterable<RequestInfo>): Promise<void> (+1 overload)","docs":"","start":158,"length":6,"line":7,"character":14,"targetString":"addAll"}],[{"text":"var self: Window & typeof globalThis","docs":"","start":13,"length":4,"line":1,"character":0,"targetString":"self"},{"text":"(method) addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":18,"length":16,"line":1,"character":5,"targetString":"addEventListener"},{"text":"(parameter) event: Event","docs":"","start":44,"length":5,"line":1,"character":31,"targetString":"event"},{"text":"(parameter) event: Event","docs":"","start":118,"length":5,"line":3,"character":2,"targetString":"event"},{"text":"var caches: CacheStorage","docs":"","start":166,"length":6,"line":5,"character":4,"targetString":"caches"},{"text":"(method) CacheStorage.match(request: RequestInfo, options?: MultiCacheQueryOptions | undefined): Promise<Response | undefined>","docs":"","start":173,"length":5,"line":5,"character":11,"targetString":"match"},{"text":"(parameter) event: Event","docs":"","start":179,"length":5,"line":5,"character":17,"targetString":"event"},{"text":"(method) Promise<Response | undefined>.then<Response, never>(onfulfilled?: ((value: Response | undefined) => Response | PromiseLike<Response>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<...>) | ... 1 more ... | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":194,"length":4,"line":5,"character":32,"targetString":"then"},{"text":"(parameter) resFromCache: Response | undefined","docs":"","start":199,"length":12,"line":5,"character":37,"targetString":"resFromCache"},{"text":"(parameter) resFromCache: Response | undefined","docs":"","start":256,"length":12,"line":7,"character":10,"targetString":"resFromCache"},{"text":"(parameter) resFromCache: Response","docs":"","start":277,"length":12,"line":7,"character":31,"targetString":"resFromCache"},{"text":"const reqToCache: any","docs":"","start":351,"length":10,"line":9,"character":12,"targetString":"reqToCache"},{"text":"(parameter) event: Event","docs":"","start":364,"length":5,"line":9,"character":25,"targetString":"event"},{"text":"function fetch(input: RequestInfo, init?: RequestInit | undefined): Promise<Response>","docs":"","start":422,"length":5,"line":12,"character":13,"targetString":"fetch"},{"text":"const reqToCache: any","docs":"","start":428,"length":10,"line":12,"character":19,"targetString":"reqToCache"},{"text":"(method) Promise<Response>.then<Response, never>(onfulfilled?: ((value: Response) => Response | PromiseLike<Response>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<...>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":440,"length":4,"line":12,"character":31,"targetString":"then"},{"text":"(parameter) resFromNet: Response","docs":"","start":445,"length":10,"line":12,"character":36,"targetString":"resFromNet"},{"text":"const resToCache: Response","docs":"","start":528,"length":10,"line":14,"character":14,"targetString":"resToCache"},{"text":"(parameter) resFromNet: Response","docs":"","start":541,"length":10,"line":14,"character":27,"targetString":"resFromNet"},{"text":"(method) Response.clone(): Response","docs":"","start":552,"length":5,"line":14,"character":38,"targetString":"clone"},{"text":"var caches: CacheStorage","docs":"","start":584,"length":6,"line":16,"character":8,"targetString":"caches"},{"text":"(method) CacheStorage.open(cacheName: string): Promise<Cache>","docs":"","start":602,"length":4,"line":17,"character":11,"targetString":"open"},{"text":"(method) Promise<Cache>.then<void, never>(onfulfilled?: ((value: Cache) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":628,"length":4,"line":18,"character":11,"targetString":"then"},{"text":"(parameter) cache: Cache","docs":"","start":633,"length":5,"line":18,"character":16,"targetString":"cache"},{"text":"(parameter) cache: Cache","docs":"","start":642,"length":5,"line":18,"character":25,"targetString":"cache"},{"text":"(method) Cache.put(request: RequestInfo, response: Response): Promise<void>","docs":"","start":648,"length":3,"line":18,"character":31,"targetString":"put"},{"text":"(parameter) event: Event","docs":"","start":652,"length":5,"line":18,"character":35,"targetString":"event"},{"text":"const resToCache: Response","docs":"","start":667,"length":10,"line":18,"character":50,"targetString":"resToCache"},{"text":"(parameter) resFromNet: Response","docs":"","start":695,"length":10,"line":19,"character":15,"targetString":"resFromNet"}],[{"text":"var window: Window & typeof globalThis","docs":"","start":0,"length":6,"line":0,"character":0,"targetString":"window"},{"text":"(method) addEventListener<\"load\">(type: \"load\", listener: (this: Window, ev: Event) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":7,"length":16,"line":0,"character":7,"targetString":"addEventListener"},{"text":"var navigator: Navigator","docs":"","start":65,"length":9,"line":1,"character":25,"targetString":"navigator"}],[{"text":"var self: Window & typeof globalThis","docs":"","start":0,"length":4,"line":0,"character":0,"targetString":"self"},{"text":"(method) addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":5,"length":16,"line":0,"character":5,"targetString":"addEventListener"},{"text":"(parameter) e: Event","docs":"","start":34,"length":1,"line":0,"character":34,"targetString":"e"},{"text":"(parameter) e: Event","docs":"","start":43,"length":1,"line":1,"character":2,"targetString":"e"},{"text":"var caches: CacheStorage","docs":"","start":60,"length":6,"line":2,"character":4,"targetString":"caches"},{"text":"(method) CacheStorage.keys(): Promise<string[]>","docs":"","start":67,"length":4,"line":2,"character":11,"targetString":"keys"},{"text":"(method) Promise<string[]>.then<(boolean | undefined)[], never>(onfulfilled?: ((value: string[]) => (boolean | undefined)[] | PromiseLike<(boolean | undefined)[]>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<...>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":74,"length":4,"line":2,"character":18,"targetString":"then"},{"text":"(parameter) keys: string[]","docs":"","start":79,"length":4,"line":2,"character":23,"targetString":"keys"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":93,"length":7,"line":3,"character":6,"targetString":"Promise"},{"text":"(method) PromiseConstructor.all<boolean | undefined>(values: readonly (boolean | PromiseLike<boolean | undefined> | undefined)[]): Promise<(boolean | undefined)[]> (+10 overloads)","docs":"Creates a Promise that is resolved with an array of results when all of the provided Promises\r\nresolve, or rejected when any Promise is rejected.","start":101,"length":3,"line":3,"character":14,"targetString":"all"},{"text":"(parameter) keys: string[]","docs":"","start":114,"length":4,"line":4,"character":8,"targetString":"keys"},{"text":"(method) Array<string>.map<Promise<boolean> | undefined>(callbackfn: (value: string, index: number, array: string[]) => Promise<boolean> | undefined, thisArg?: any): (Promise<boolean> | undefined)[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":119,"length":3,"line":4,"character":13,"targetString":"map"},{"text":"(parameter) key: string","docs":"","start":123,"length":3,"line":4,"character":17,"targetString":"key"},{"text":"(parameter) key: string","docs":"","start":179,"length":3,"line":6,"character":14,"targetString":"key"},{"text":"var caches: CacheStorage","docs":"","start":218,"length":6,"line":7,"character":19,"targetString":"caches"},{"text":"(method) CacheStorage.delete(cacheName: string): Promise<boolean>","docs":"","start":225,"length":6,"line":7,"character":26,"targetString":"delete"},{"text":"(parameter) key: string","docs":"","start":232,"length":3,"line":7,"character":33,"targetString":"key"},{"text":"var self: Window & typeof globalThis","docs":"","start":288,"length":4,"line":14,"character":9,"targetString":"self"}],[{"text":"const version: string","docs":"","start":14,"length":7,"line":0,"character":14,"targetString":"version"},{"text":"const PWAInstaller: () => Promise<void>","docs":"","start":44,"length":12,"line":2,"character":13,"targetString":"PWAInstaller"},{"text":"const registration: ServiceWorkerRegistration","docs":"","start":103,"length":12,"line":4,"character":8,"targetString":"registration"},{"text":"var navigator: Navigator","docs":"","start":124,"length":9,"line":4,"character":29,"targetString":"navigator"},{"text":"(property) Navigator.serviceWorker: ServiceWorkerContainer","docs":"","start":134,"length":13,"line":4,"character":39,"targetString":"serviceWorker"},{"text":"(method) ServiceWorkerContainer.register(scriptURL: string | URL, options?: RegistrationOptions | undefined): Promise<ServiceWorkerRegistration>","docs":"","start":148,"length":8,"line":4,"character":53,"targetString":"register"},{"text":"var localStorage: Storage","docs":"","start":210,"length":12,"line":9,"character":6,"targetString":"localStorage"},{"text":"(method) Storage.getItem(key: string): string | null","docs":"Returns the current value associated with the given key, or null if the given key does not exist.","start":223,"length":7,"line":9,"character":19,"targetString":"getItem"},{"text":"const version: string","docs":"","start":249,"length":7,"line":9,"character":45,"targetString":"version"},{"text":"var caches: CacheStorage","docs":"","start":293,"length":6,"line":12,"character":8,"targetString":"caches"},{"text":"(method) CacheStorage.delete(cacheName: string): Promise<boolean>","docs":"","start":300,"length":6,"line":12,"character":15,"targetString":"delete"},{"text":"const registration: ServiceWorkerRegistration","docs":"","start":347,"length":12,"line":14,"character":8,"targetString":"registration"},{"text":"(method) ServiceWorkerRegistration.update(): Promise<void>","docs":"","start":360,"length":6,"line":14,"character":21,"targetString":"update"},{"text":"var localStorage: Storage","docs":"","start":371,"length":12,"line":15,"character":2,"targetString":"localStorage"},{"text":"(method) Storage.setItem(key: string, value: string): void","docs":"Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n\nThrows a \"QuotaExceededError\" DOMException exception if the new value couldn't be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n\nDispatches a storage event on Window objects holding an equivalent Storage object.","start":384,"length":7,"line":15,"character":15,"targetString":"setItem"},{"text":"const version: string","docs":"","start":406,"length":7,"line":15,"character":37,"targetString":"version"},{"text":"var window: Window & typeof globalThis","docs":"","start":418,"length":6,"line":18,"character":0,"targetString":"window"},{"text":"(method) addEventListener<\"load\">(type: \"load\", listener: (this: Window, ev: Event) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":425,"length":16,"line":18,"character":7,"targetString":"addEventListener"},{"text":"var navigator: Navigator","docs":"","start":483,"length":9,"line":19,"character":25,"targetString":"navigator"},{"text":"const PWAInstaller: () => Promise<void>","docs":"","start":500,"length":12,"line":20,"character":4,"targetString":"PWAInstaller"}]],"/blog/编译原理/不确定下推自动机":[[],[]],"/blog/随便写点儿？/echarts之zrender的clone函数问题":[[{"text":"let key: string","docs":"","start":116,"length":3,"line":2,"character":13,"targetString":"key"},{"text":"let key: string","docs":"","start":167,"length":3,"line":3,"character":34,"targetString":"key"},{"text":"let key: string","docs":"","start":194,"length":3,"line":4,"character":19,"targetString":"key"},{"text":"let key: string","docs":"","start":214,"length":3,"line":4,"character":39,"targetString":"key"}]],"/blog/随便写点儿？/moment注意":[[{"text":"const end: any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"end"},{"text":"const start: any","docs":"","start":27,"length":5,"line":1,"character":6,"targetString":"start"},{"text":"const end: any","docs":"","start":35,"length":3,"line":1,"character":14,"targetString":"end"},{"text":"const start: any","docs":"","start":103,"length":5,"line":4,"character":6,"targetString":"start"},{"text":"const end: any","docs":"","start":111,"length":3,"line":4,"character":14,"targetString":"end"}]],"/blog/随便写点儿？/正则匹配结果伪数组解构报错":[[{"text":"let a: any","docs":"","start":15,"length":1,"line":1,"character":5,"targetString":"a"},{"text":"let b: any","docs":"","start":18,"length":1,"line":1,"character":8,"targetString":"b"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":39,"length":4,"line":1,"character":29,"targetString":"exec"},{"text":"let a: string","docs":"","start":67,"length":1,"line":3,"character":5,"targetString":"a"},{"text":"let b: string","docs":"","start":70,"length":1,"line":3,"character":8,"targetString":"b"},{"text":"var Array: ArrayConstructor","docs":"","start":75,"length":5,"line":3,"character":13,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<string>(iterable: Iterable<string> | ArrayLike<string>): string[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":81,"length":4,"line":3,"character":19,"targetString":"from"},{"text":"(method) RegExp.exec(string: string): RegExpExecArray | null","docs":"Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.","start":102,"length":4,"line":3,"character":40,"targetString":"exec"}]],"/blog/随便写点儿？/记录一次bug：js整数溢出":[[{"text":"const JSONbigString: any","docs":"","start":6,"length":13,"line":0,"character":6,"targetString":"JSONbigString"},{"text":"(property) storeAsString: boolean","docs":"","start":47,"length":13,"line":0,"character":47,"targetString":"storeAsString"}]],"/blog/随便写点儿？/记录一次bug：nextjs同构环境下的环境变量":[[{"text":"const config: {\n    env: {\n        API: any;\n    };\n}","docs":"","start":24,"length":6,"line":1,"character":6,"targetString":"config"},{"text":"(property) env: {\n    API: any;\n}","docs":"","start":37,"length":3,"line":2,"character":2,"targetString":"env"},{"text":"(property) API: any","docs":"","start":48,"length":3,"line":3,"character":4,"targetString":"API"}],[],[{"text":"const config: {\n    env: {\n        NEXT_PUBLIC_API: any;\n    };\n}","docs":"","start":24,"length":6,"line":1,"character":6,"targetString":"config"},{"text":"(property) env: {\n    NEXT_PUBLIC_API: any;\n}","docs":"","start":37,"length":3,"line":2,"character":2,"targetString":"env"},{"text":"(property) NEXT_PUBLIC_API: any","docs":"","start":48,"length":15,"line":3,"character":4,"targetString":"NEXT_PUBLIC_API"}],[{"text":"const config: {\n    publicRuntimeConfig: {\n        env: {\n            API: any;\n        };\n    };\n}","docs":"","start":24,"length":6,"line":1,"character":6,"targetString":"config"},{"text":"(property) publicRuntimeConfig: {\n    env: {\n        API: any;\n    };\n}","docs":"","start":37,"length":19,"line":2,"character":2,"targetString":"publicRuntimeConfig"},{"text":"(property) env: {\n    API: any;\n}","docs":"","start":64,"length":3,"line":3,"character":4,"targetString":"env"},{"text":"(property) API: any","docs":"","start":77,"length":3,"line":4,"character":6,"targetString":"API"}],[{"text":"import getConfig","docs":"","start":7,"length":9,"line":0,"character":7,"targetString":"getConfig"},{"text":"const publicRuntimeConfig: any","docs":"","start":45,"length":19,"line":2,"character":8,"targetString":"publicRuntimeConfig"},{"text":"import getConfig","docs":"","start":69,"length":9,"line":2,"character":32,"targetString":"getConfig"},{"text":"const publicRuntimeConfig: any","docs":"","start":82,"length":19,"line":4,"character":0,"targetString":"publicRuntimeConfig"}]],"/blog/Javascript基础/canvas/ImageData操作":[[{"text":"const ctx: any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"ctx"}],[{"text":"function get(imageData: ImageData, x: number, y: number): number[]","docs":"","start":16,"length":3,"line":0,"character":16,"targetString":"get"},{"text":"(parameter) imageData: ImageData","docs":"","start":20,"length":9,"line":0,"character":20,"targetString":"imageData"},{"text":"interface ImageData","docs":"The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData().","start":31,"length":9,"line":0,"character":31,"targetString":"ImageData"},{"text":"(parameter) x: number","docs":"","start":42,"length":1,"line":0,"character":42,"targetString":"x"},{"text":"(parameter) y: number","docs":"","start":53,"length":1,"line":0,"character":53,"targetString":"y"},{"text":"const color: any[]","docs":"","start":74,"length":5,"line":1,"character":8,"targetString":"color"},{"text":"const color: any[]","docs":"","start":87,"length":5,"line":2,"character":2,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":98,"length":9,"line":2,"character":13,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":108,"length":4,"line":2,"character":23,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":118,"length":9,"line":2,"character":33,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":128,"length":5,"line":2,"character":43,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":136,"length":1,"line":2,"character":51,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":140,"length":1,"line":2,"character":55,"targetString":"x"},{"text":"const color: any[]","docs":"","start":146,"length":5,"line":3,"character":2,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":157,"length":9,"line":3,"character":13,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":167,"length":4,"line":3,"character":23,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":177,"length":9,"line":3,"character":33,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":187,"length":5,"line":3,"character":43,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":195,"length":1,"line":3,"character":51,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":199,"length":1,"line":3,"character":55,"targetString":"x"},{"text":"const color: any[]","docs":"","start":209,"length":5,"line":4,"character":2,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":220,"length":9,"line":4,"character":13,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":230,"length":4,"line":4,"character":23,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":240,"length":9,"line":4,"character":33,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":250,"length":5,"line":4,"character":43,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":258,"length":1,"line":4,"character":51,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":262,"length":1,"line":4,"character":55,"targetString":"x"},{"text":"const color: any[]","docs":"","start":272,"length":5,"line":5,"character":2,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":283,"length":9,"line":5,"character":13,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":293,"length":4,"line":5,"character":23,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":303,"length":9,"line":5,"character":33,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":313,"length":5,"line":5,"character":43,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":321,"length":1,"line":5,"character":51,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":325,"length":1,"line":5,"character":55,"targetString":"x"},{"text":"const color: number[]","docs":"","start":342,"length":5,"line":6,"character":9,"targetString":"color"},{"text":"function set(imageData: ImageData, x: number, y: number, color: number[]): void","docs":"","start":367,"length":3,"line":9,"character":16,"targetString":"set"},{"text":"(parameter) imageData: ImageData","docs":"","start":374,"length":9,"line":10,"character":2,"targetString":"imageData"},{"text":"interface ImageData","docs":"The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData().","start":385,"length":9,"line":10,"character":13,"targetString":"ImageData"},{"text":"(parameter) x: number","docs":"","start":398,"length":1,"line":11,"character":2,"targetString":"x"},{"text":"(parameter) y: number","docs":"","start":411,"length":1,"line":12,"character":2,"targetString":"y"},{"text":"(parameter) color: number[]","docs":"","start":424,"length":5,"line":13,"character":2,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":446,"length":9,"line":15,"character":2,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":456,"length":4,"line":15,"character":12,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":466,"length":9,"line":15,"character":22,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":476,"length":5,"line":15,"character":32,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":484,"length":1,"line":15,"character":40,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":488,"length":1,"line":15,"character":44,"targetString":"x"},{"text":"(parameter) color: number[]","docs":"","start":494,"length":5,"line":15,"character":50,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":505,"length":9,"line":16,"character":2,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":515,"length":4,"line":16,"character":12,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":525,"length":9,"line":16,"character":22,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":535,"length":5,"line":16,"character":32,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":543,"length":1,"line":16,"character":40,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":547,"length":1,"line":16,"character":44,"targetString":"x"},{"text":"(parameter) color: number[]","docs":"","start":557,"length":5,"line":16,"character":54,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":568,"length":9,"line":17,"character":2,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":578,"length":4,"line":17,"character":12,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":588,"length":9,"line":17,"character":22,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":598,"length":5,"line":17,"character":32,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":606,"length":1,"line":17,"character":40,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":610,"length":1,"line":17,"character":44,"targetString":"x"},{"text":"(parameter) color: number[]","docs":"","start":620,"length":5,"line":17,"character":54,"targetString":"color"},{"text":"(parameter) imageData: ImageData","docs":"","start":631,"length":9,"line":18,"character":2,"targetString":"imageData"},{"text":"(property) ImageData.data: Uint8ClampedArray","docs":"Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.","start":641,"length":4,"line":18,"character":12,"targetString":"data"},{"text":"(parameter) imageData: ImageData","docs":"","start":651,"length":9,"line":18,"character":22,"targetString":"imageData"},{"text":"(property) ImageData.width: number","docs":"Returns the actual dimensions of the data in the ImageData object, in pixels.","start":661,"length":5,"line":18,"character":32,"targetString":"width"},{"text":"(parameter) y: number","docs":"","start":669,"length":1,"line":18,"character":40,"targetString":"y"},{"text":"(parameter) x: number","docs":"","start":673,"length":1,"line":18,"character":44,"targetString":"x"},{"text":"(parameter) color: number[]","docs":"","start":683,"length":5,"line":18,"character":54,"targetString":"color"}],[{"text":"const ctx: any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"ctx"},{"text":"const imageData: any","docs":"","start":43,"length":9,"line":2,"character":6,"targetString":"imageData"},{"text":"const ctx: any","docs":"","start":55,"length":3,"line":2,"character":18,"targetString":"ctx"},{"text":"const imageData: any","docs":"","start":112,"length":9,"line":4,"character":4,"targetString":"imageData"},{"text":"const ctx: any","docs":"","start":150,"length":3,"line":6,"character":0,"targetString":"ctx"},{"text":"const imageData: any","docs":"","start":167,"length":9,"line":6,"character":17,"targetString":"imageData"}]],"/blog/Javascript基础/canvas/canvas路径绘制":[[{"text":"const ctx: any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"ctx"},{"text":"let lock: boolean","docs":"","start":41,"length":4,"line":2,"character":4,"targetString":"lock"},{"text":"const canvasDown: () => void","docs":"","start":61,"length":10,"line":4,"character":6,"targetString":"canvasDown"},{"text":"let lock: boolean","docs":"","start":84,"length":4,"line":5,"character":2,"targetString":"lock"},{"text":"const ctx: any","docs":"","start":98,"length":3,"line":6,"character":2,"targetString":"ctx"},{"text":"const ctx: any","docs":"","start":116,"length":3,"line":7,"character":2,"targetString":"ctx"},{"text":"const ctx: any","docs":"","start":150,"length":3,"line":8,"character":2,"targetString":"ctx"},{"text":"const ctx: any","docs":"","start":183,"length":3,"line":9,"character":2,"targetString":"ctx"},{"text":"const canvasMove: ({ offsetX, offsetY }: {\n    offsetX: any;\n    offsetY: any;\n}) => void","docs":"","start":224,"length":10,"line":12,"character":6,"targetString":"canvasMove"},{"text":"var offsetX: any","docs":"","start":240,"length":7,"line":12,"character":22,"targetString":"offsetX"},{"text":"var offsetY: any","docs":"","start":249,"length":7,"line":12,"character":31,"targetString":"offsetY"},{"text":"let lock: boolean","docs":"","start":272,"length":4,"line":13,"character":7,"targetString":"lock"},{"text":"const ctx: any","docs":"","start":287,"length":3,"line":14,"character":2,"targetString":"ctx"},{"text":"var offsetX: any","docs":"","start":298,"length":7,"line":14,"character":13,"targetString":"offsetX"},{"text":"var offsetY: any","docs":"","start":307,"length":7,"line":14,"character":22,"targetString":"offsetY"},{"text":"const ctx: any","docs":"","start":318,"length":3,"line":15,"character":2,"targetString":"ctx"},{"text":"const canvasUp: () => void","docs":"","start":340,"length":8,"line":18,"character":6,"targetString":"canvasUp"},{"text":"let lock: boolean","docs":"","start":361,"length":4,"line":19,"character":2,"targetString":"lock"},{"text":"const canvasDown: () => void","docs":"","start":414,"length":10,"line":22,"character":37,"targetString":"canvasDown"},{"text":"const canvasMove: ({ offsetX, offsetY }: {\n    offsetX: any;\n    offsetY: any;\n}) => void","docs":"","start":463,"length":10,"line":23,"character":37,"targetString":"canvasMove"},{"text":"const canvasUp: () => void","docs":"","start":510,"length":8,"line":24,"character":35,"targetString":"canvasUp"}]],"/blog/Javascript基础/canvas/rgba与hex转换":[[{"text":"function rgba2Hex(color: string): string","docs":"","start":16,"length":8,"line":0,"character":16,"targetString":"rgba2Hex"},{"text":"(parameter) color: string","docs":"","start":25,"length":5,"line":0,"character":25,"targetString":"color"},{"text":"const rgb: string[]","docs":"","start":50,"length":3,"line":1,"character":8,"targetString":"rgb"},{"text":"(parameter) color: string","docs":"","start":56,"length":5,"line":1,"character":14,"targetString":"color"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":62,"length":5,"line":1,"character":20,"targetString":"split"},{"text":"const r: number","docs":"","start":81,"length":1,"line":2,"character":8,"targetString":"r"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":85,"length":8,"line":2,"character":12,"targetString":"parseInt"},{"text":"const rgb: string[]","docs":"","start":94,"length":3,"line":2,"character":21,"targetString":"rgb"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":101,"length":5,"line":2,"character":28,"targetString":"split"},{"text":"const g: number","docs":"","start":124,"length":1,"line":3,"character":8,"targetString":"g"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":128,"length":8,"line":3,"character":12,"targetString":"parseInt"},{"text":"const rgb: string[]","docs":"","start":137,"length":3,"line":3,"character":21,"targetString":"rgb"},{"text":"const b: number","docs":"","start":153,"length":1,"line":4,"character":8,"targetString":"b"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":157,"length":8,"line":4,"character":12,"targetString":"parseInt"},{"text":"const rgb: string[]","docs":"","start":166,"length":3,"line":4,"character":21,"targetString":"rgb"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":173,"length":5,"line":4,"character":28,"targetString":"split"},{"text":"const hex: string","docs":"","start":197,"length":3,"line":6,"character":8,"targetString":"hex"},{"text":"const r: number","docs":"","start":223,"length":1,"line":6,"character":34,"targetString":"r"},{"text":"const g: number","docs":"","start":235,"length":1,"line":6,"character":46,"targetString":"g"},{"text":"const b: number","docs":"","start":245,"length":1,"line":6,"character":56,"targetString":"b"},{"text":"(method) Number.toString(radix?: number | undefined): string","docs":"Returns a string representation of an object.","start":248,"length":8,"line":6,"character":59,"targetString":"toString"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":261,"length":5,"line":6,"character":72,"targetString":"slice"},{"text":"const hex: string","docs":"","start":279,"length":3,"line":7,"character":9,"targetString":"hex"}],[{"text":"function hex2Rgba(hex: string, opacity: number): {\n    red: number;\n    green: number;\n    blue: number;\n    rgba: string;\n}","docs":"","start":16,"length":8,"line":0,"character":16,"targetString":"hex2Rgba"},{"text":"(parameter) hex: string","docs":"","start":25,"length":3,"line":0,"character":25,"targetString":"hex"},{"text":"(parameter) opacity: number","docs":"","start":38,"length":7,"line":0,"character":38,"targetString":"opacity"},{"text":"const RGBA: string","docs":"","start":65,"length":4,"line":1,"character":8,"targetString":"RGBA"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":90,"length":8,"line":3,"character":4,"targetString":"parseInt"},{"text":"(parameter) hex: string","docs":"","start":106,"length":3,"line":3,"character":20,"targetString":"hex"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":110,"length":5,"line":3,"character":24,"targetString":"slice"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":139,"length":8,"line":5,"character":4,"targetString":"parseInt"},{"text":"(parameter) hex: string","docs":"","start":155,"length":3,"line":5,"character":20,"targetString":"hex"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":159,"length":5,"line":5,"character":24,"targetString":"slice"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":188,"length":8,"line":7,"character":4,"targetString":"parseInt"},{"text":"(parameter) hex: string","docs":"","start":204,"length":3,"line":7,"character":20,"targetString":"hex"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":208,"length":5,"line":7,"character":24,"targetString":"slice"},{"text":"(parameter) opacity: number","docs":"","start":237,"length":7,"line":9,"character":4,"targetString":"opacity"},{"text":"(property) red: number","docs":"","start":270,"length":3,"line":12,"character":4,"targetString":"red"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":275,"length":8,"line":12,"character":9,"targetString":"parseInt"},{"text":"(parameter) hex: string","docs":"","start":291,"length":3,"line":12,"character":25,"targetString":"hex"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":295,"length":5,"line":12,"character":29,"targetString":"slice"},{"text":"(property) green: number","docs":"","start":313,"length":5,"line":13,"character":4,"targetString":"green"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":320,"length":8,"line":13,"character":11,"targetString":"parseInt"},{"text":"(parameter) hex: string","docs":"","start":336,"length":3,"line":13,"character":27,"targetString":"hex"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":340,"length":5,"line":13,"character":31,"targetString":"slice"},{"text":"(property) blue: number","docs":"","start":358,"length":4,"line":14,"character":4,"targetString":"blue"},{"text":"function parseInt(string: string, radix?: number | undefined): number","docs":"Converts a string to an integer.","start":364,"length":8,"line":14,"character":10,"targetString":"parseInt"},{"text":"(parameter) hex: string","docs":"","start":380,"length":3,"line":14,"character":26,"targetString":"hex"},{"text":"(method) String.slice(start?: number | undefined, end?: number | undefined): string","docs":"Returns a section of a string.","start":384,"length":5,"line":14,"character":30,"targetString":"slice"},{"text":"(property) rgba: string","docs":"","start":402,"length":4,"line":15,"character":4,"targetString":"rgba"},{"text":"const RGBA: string","docs":"","start":408,"length":4,"line":15,"character":10,"targetString":"RGBA"}]],"/blog/Javascript基础/canvas/打印到图片":[[]],"/blog/Javascript基础/es6/promise原理":[[{"text":"interface Microtask","docs":"","start":17,"length":9,"line":0,"character":17,"targetString":"Microtask"},{"text":"interface MutationCallback","docs":"","start":35,"length":16,"line":0,"character":35,"targetString":"MutationCallback"},{"text":"function microtask(task: Microtask): void","docs":"","start":72,"length":9,"line":2,"character":16,"targetString":"microtask"},{"text":"(parameter) task: Microtask","docs":"","start":82,"length":4,"line":2,"character":26,"targetString":"task"},{"text":"interface Microtask","docs":"","start":88,"length":9,"line":2,"character":32,"targetString":"Microtask"},{"text":"(parameter) task: Microtask","docs":"","start":216,"length":4,"line":7,"character":21,"targetString":"task"},{"text":"const observer: MutationObserver","docs":"","start":243,"length":8,"line":9,"character":10,"targetString":"observer"},{"text":"var MutationObserver: new (callback: MutationCallback) => MutationObserver","docs":"Provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature which was part of the DOM3 Events specification.","start":258,"length":16,"line":9,"character":25,"targetString":"MutationObserver"},{"text":"(parameter) task: Microtask","docs":"","start":275,"length":4,"line":9,"character":42,"targetString":"task"},{"text":"const element: Text","docs":"","start":291,"length":7,"line":10,"character":10,"targetString":"element"},{"text":"var document: Document","docs":"","start":301,"length":8,"line":10,"character":20,"targetString":"document"},{"text":"(method) Document.createTextNode(data: string): Text","docs":"Creates a text string from the specified value.","start":310,"length":14,"line":10,"character":29,"targetString":"createTextNode"},{"text":"const observer: MutationObserver","docs":"","start":333,"length":8,"line":11,"character":4,"targetString":"observer"},{"text":"(method) MutationObserver.observe(target: Node, options?: MutationObserverInit | undefined): void","docs":"Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).\n\nThe options argument allows for setting mutation observation options via object members.","start":342,"length":7,"line":11,"character":13,"targetString":"observe"},{"text":"const element: Text","docs":"","start":350,"length":7,"line":11,"character":21,"targetString":"element"},{"text":"(property) MutationObserverInit.characterData?: boolean | undefined","docs":"Set to true if mutations to target's data are to be observed. Can be omitted if characterDataOldValue is specified.","start":367,"length":13,"line":12,"character":6,"targetString":"characterData"},{"text":"const element: Text","docs":"","start":398,"length":7,"line":14,"character":4,"targetString":"element"},{"text":"(property) CharacterData.data: string","docs":"","start":406,"length":4,"line":14,"character":12,"targetString":"data"}],[{"text":"type Resolve<T> = (value?: T | undefined) => any","docs":"","start":12,"length":7,"line":0,"character":12,"targetString":"Resolve"},{"text":"(type parameter) T in type Resolve<T>","docs":"","start":20,"length":1,"line":0,"character":20,"targetString":"T"},{"text":"(parameter) value: T | undefined","docs":"","start":26,"length":5,"line":0,"character":26,"targetString":"value"},{"text":"(type parameter) T in type Resolve<T>","docs":"","start":34,"length":1,"line":0,"character":34,"targetString":"T"},{"text":"type Reject<T> = (reason?: T | undefined) => any","docs":"","start":56,"length":6,"line":1,"character":12,"targetString":"Reject"},{"text":"(type parameter) T in type Reject<T>","docs":"","start":63,"length":1,"line":1,"character":19,"targetString":"T"},{"text":"(parameter) reason: T | undefined","docs":"","start":69,"length":6,"line":1,"character":25,"targetString":"reason"},{"text":"(type parameter) T in type Reject<T>","docs":"","start":78,"length":1,"line":1,"character":34,"targetString":"T"},{"text":"type Executor<T> = (resolve: Resolve<T>, reject: Reject<T>) => void","docs":"","start":101,"length":8,"line":3,"character":12,"targetString":"Executor"},{"text":"(type parameter) T in type Executor<T>","docs":"","start":110,"length":1,"line":3,"character":21,"targetString":"T"},{"text":"(parameter) resolve: Resolve<T>","docs":"","start":116,"length":7,"line":3,"character":27,"targetString":"resolve"},{"text":"type Resolve<T> = (value?: T | undefined) => any","docs":"","start":125,"length":7,"line":3,"character":36,"targetString":"Resolve"},{"text":"(type parameter) T in type Executor<T>","docs":"","start":133,"length":1,"line":3,"character":44,"targetString":"T"},{"text":"(parameter) reject: Reject<T>","docs":"","start":137,"length":6,"line":3,"character":48,"targetString":"reject"},{"text":"type Reject<T> = (reason?: T | undefined) => any","docs":"","start":145,"length":6,"line":3,"character":56,"targetString":"Reject"},{"text":"(type parameter) T in type Executor<T>","docs":"","start":152,"length":1,"line":3,"character":63,"targetString":"T"},{"text":"type Catch<T> = (onRejected: Reject<T>) => any","docs":"","start":176,"length":5,"line":4,"character":12,"targetString":"Catch"},{"text":"(type parameter) T in type Catch<T>","docs":"","start":182,"length":1,"line":4,"character":18,"targetString":"T"},{"text":"(parameter) onRejected: Reject<T>","docs":"","start":188,"length":10,"line":4,"character":24,"targetString":"onRejected"},{"text":"type Reject<T> = (reason?: T | undefined) => any","docs":"","start":200,"length":6,"line":4,"character":36,"targetString":"Reject"},{"text":"(type parameter) T in type Catch<T>","docs":"","start":207,"length":1,"line":4,"character":43,"targetString":"T"},{"text":"type Then<T> = (onfulfilled?: Resolve<T> | undefined, onrejected?: Reject<T> | undefined) => Promise<T>","docs":"","start":231,"length":4,"line":6,"character":12,"targetString":"Then"},{"text":"(type parameter) T in type Then<T>","docs":"","start":236,"length":1,"line":6,"character":17,"targetString":"T"},{"text":"(parameter) onfulfilled: Resolve<T> | undefined","docs":"","start":245,"length":11,"line":7,"character":2,"targetString":"onfulfilled"},{"text":"type Resolve<T> = (value?: T | undefined) => any","docs":"","start":259,"length":7,"line":7,"character":16,"targetString":"Resolve"},{"text":"(type parameter) T in type Then<T>","docs":"","start":267,"length":1,"line":7,"character":24,"targetString":"T"},{"text":"(parameter) onrejected: Reject<T> | undefined","docs":"","start":273,"length":10,"line":8,"character":2,"targetString":"onrejected"},{"text":"type Reject<T> = (reason?: T | undefined) => any","docs":"","start":286,"length":6,"line":8,"character":15,"targetString":"Reject"},{"text":"(type parameter) T in type Then<T>","docs":"","start":293,"length":1,"line":8,"character":22,"targetString":"T"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":301,"length":7,"line":9,"character":5,"targetString":"Promise"},{"text":"(type parameter) T in type Then<T>","docs":"","start":309,"length":1,"line":9,"character":13,"targetString":"T"},{"text":"type Status = \"pending\" | \"resolved\" | \"rejected\"","docs":"","start":325,"length":6,"line":11,"character":12,"targetString":"Status"}],[{"text":"class Promise<T>\nnamespace Promise","docs":"","start":13,"length":7,"line":0,"character":13,"targetString":"Promise"},{"text":"(type parameter) T in Promise<T>","docs":"","start":21,"length":1,"line":0,"character":21,"targetString":"T"},{"text":"(parameter) executor: any","docs":"","start":47,"length":8,"line":1,"character":21,"targetString":"executor"},{"text":"(type parameter) T in Promise<T>","docs":"","start":66,"length":1,"line":1,"character":40,"targetString":"T"},{"text":"(parameter) executor: any","docs":"","start":106,"length":8,"line":4,"character":6,"targetString":"executor"},{"text":"(property) Promise<T>.resolve: any","docs":"","start":120,"length":7,"line":4,"character":20,"targetString":"resolve"},{"text":"(property) Promise<T>.reject: any","docs":"","start":134,"length":6,"line":4,"character":34,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":155,"length":5,"line":5,"character":13,"targetString":"error"},{"text":"(property) Promise<T>.reject: any","docs":"","start":175,"length":6,"line":6,"character":11,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":182,"length":5,"line":6,"character":18,"targetString":"error"},{"text":"(property) Promise<T>.status: any","docs":"","start":209,"length":6,"line":9,"character":10,"targetString":"status"},{"text":"(property) Promise<T>.data: undefined","docs":"","start":246,"length":4,"line":10,"character":10,"targetString":"data"},{"text":"var undefined","docs":"","start":253,"length":9,"line":10,"character":17,"targetString":"undefined"},{"text":"(property) Promise<T>.onResolvedCallback: any[]","docs":"","start":273,"length":18,"line":11,"character":10,"targetString":"onResolvedCallback"},{"text":"interface Array<T>","docs":"","start":293,"length":5,"line":11,"character":30,"targetString":"Array"},{"text":"(type parameter) T in Promise<T>","docs":"","start":307,"length":1,"line":11,"character":44,"targetString":"T"},{"text":"(property) Promise<T>.onRejectedCallback: any[]","docs":"","start":326,"length":18,"line":12,"character":10,"targetString":"onRejectedCallback"},{"text":"interface Array<T>","docs":"","start":346,"length":5,"line":12,"character":30,"targetString":"Array"},{"text":"(type parameter) T in Promise<T>","docs":"","start":359,"length":1,"line":12,"character":43,"targetString":"T"},{"text":"(property) Promise<T>.resolve: any","docs":"","start":413,"length":7,"line":15,"character":10,"targetString":"resolve"},{"text":"(type parameter) T in Promise<T>","docs":"","start":430,"length":1,"line":15,"character":27,"targetString":"T"},{"text":"(parameter) value: any","docs":"","start":435,"length":5,"line":15,"character":32,"targetString":"value"},{"text":"(property) Promise<T>.status: any","docs":"","start":475,"length":6,"line":16,"character":13,"targetString":"status"},{"text":"(property) Promise<T>.status: any","docs":"","start":510,"length":6,"line":17,"character":11,"targetString":"status"},{"text":"(property) Promise<T>.data: undefined","docs":"","start":541,"length":4,"line":18,"character":11,"targetString":"data"},{"text":"(parameter) value: any","docs":"","start":548,"length":5,"line":18,"character":18,"targetString":"value"},{"text":"(property) Promise<T>.onResolvedCallback: any[]","docs":"","start":565,"length":18,"line":19,"character":11,"targetString":"onResolvedCallback"},{"text":"(method) Array<any>.forEach(callbackfn: (value: any, index: number, array: any[]) => void, thisArg?: any): void","docs":"Performs the specified action for each element in an array.","start":584,"length":7,"line":19,"character":30,"targetString":"forEach"},{"text":"(parameter) resolve: any","docs":"","start":592,"length":7,"line":19,"character":38,"targetString":"resolve"},{"text":"(parameter) resolve: any","docs":"","start":603,"length":7,"line":19,"character":49,"targetString":"resolve"},{"text":"(parameter) value: any","docs":"","start":611,"length":5,"line":19,"character":57,"targetString":"value"},{"text":"(property) Promise<T>.reject: any","docs":"","start":640,"length":6,"line":22,"character":10,"targetString":"reject"},{"text":"(type parameter) T in Promise<T>","docs":"","start":655,"length":1,"line":22,"character":25,"targetString":"T"},{"text":"(parameter) reason: any","docs":"","start":660,"length":6,"line":22,"character":30,"targetString":"reason"},{"text":"(property) Promise<T>.status: any","docs":"","start":701,"length":6,"line":23,"character":13,"targetString":"status"},{"text":"(property) Promise<T>.status: any","docs":"","start":736,"length":6,"line":24,"character":11,"targetString":"status"},{"text":"(property) Promise<T>.data: undefined","docs":"","start":767,"length":4,"line":25,"character":11,"targetString":"data"},{"text":"(parameter) reason: any","docs":"","start":774,"length":6,"line":25,"character":18,"targetString":"reason"},{"text":"(property) Promise<T>.onRejectedCallback: any[]","docs":"","start":792,"length":18,"line":26,"character":11,"targetString":"onRejectedCallback"},{"text":"(method) Array<any>.forEach(callbackfn: (value: any, index: number, array: any[]) => void, thisArg?: any): void","docs":"Performs the specified action for each element in an array.","start":811,"length":7,"line":26,"character":30,"targetString":"forEach"},{"text":"(parameter) reject: any","docs":"","start":819,"length":6,"line":26,"character":38,"targetString":"reject"},{"text":"(parameter) reject: any","docs":"","start":829,"length":6,"line":26,"character":48,"targetString":"reject"},{"text":"(parameter) reason: any","docs":"","start":836,"length":6,"line":26,"character":55,"targetString":"reason"},{"text":"class Promise<T>\nnamespace Promise","docs":"","start":891,"length":7,"line":33,"character":17,"targetString":"Promise"},{"text":"function Promise<T>.resolve<T>(value?: T | undefined): Promise<T>","docs":"","start":919,"length":7,"line":34,"character":18,"targetString":"resolve"},{"text":"(type parameter) T in Promise<T>.resolve<T>(value?: T | undefined): Promise<T>","docs":"","start":927,"length":1,"line":34,"character":26,"targetString":"T"},{"text":"(parameter) value: T | undefined","docs":"","start":930,"length":5,"line":34,"character":29,"targetString":"value"},{"text":"(type parameter) T in Promise<T>.resolve<T>(value?: T | undefined): Promise<T>","docs":"","start":938,"length":1,"line":34,"character":37,"targetString":"T"},{"text":"constructor Promise<T>(executor: any): Promise<T>\nnamespace Promise","docs":"","start":958,"length":7,"line":35,"character":15,"targetString":"Promise"},{"text":"(type parameter) T in Promise<T>.resolve<T>(value?: T | undefined): Promise<T>","docs":"","start":966,"length":1,"line":35,"character":23,"targetString":"T"},{"text":"(parameter) resolve: any","docs":"","start":969,"length":7,"line":35,"character":26,"targetString":"resolve"},{"text":"(parameter) resolve: any","docs":"","start":980,"length":7,"line":35,"character":37,"targetString":"resolve"},{"text":"(parameter) value: T | undefined","docs":"","start":988,"length":5,"line":35,"character":45,"targetString":"value"},{"text":"function Promise<T>.reject<T>(reason?: T | undefined): Promise<T>","docs":"","start":1019,"length":6,"line":38,"character":18,"targetString":"reject"},{"text":"(type parameter) T in Promise<T>.reject<T>(reason?: T | undefined): Promise<T>","docs":"","start":1026,"length":1,"line":38,"character":25,"targetString":"T"},{"text":"(parameter) reason: T | undefined","docs":"","start":1029,"length":6,"line":38,"character":28,"targetString":"reason"},{"text":"(type parameter) T in Promise<T>.reject<T>(reason?: T | undefined): Promise<T>","docs":"","start":1038,"length":1,"line":38,"character":37,"targetString":"T"},{"text":"constructor Promise<T>(executor: any): Promise<T>\nnamespace Promise","docs":"","start":1058,"length":7,"line":39,"character":15,"targetString":"Promise"},{"text":"(type parameter) T in Promise<T>.reject<T>(reason?: T | undefined): Promise<T>","docs":"","start":1066,"length":1,"line":39,"character":23,"targetString":"T"},{"text":"(parameter) _: any","docs":"","start":1070,"length":1,"line":39,"character":27,"targetString":"_"},{"text":"(parameter) reject: any","docs":"","start":1073,"length":6,"line":39,"character":30,"targetString":"reject"},{"text":"(parameter) reject: any","docs":"","start":1084,"length":6,"line":39,"character":41,"targetString":"reject"},{"text":"(parameter) reason: T | undefined","docs":"","start":1091,"length":6,"line":39,"character":48,"targetString":"reason"}],[{"text":"class Promise<T>","docs":"","start":13,"length":7,"line":0,"character":13,"targetString":"Promise"},{"text":"(type parameter) T in Promise<T>","docs":"","start":21,"length":1,"line":0,"character":21,"targetString":"T"},{"text":"(property) Promise<T>.then: any","docs":"","start":35,"length":4,"line":1,"character":9,"targetString":"then"},{"text":"(type parameter) T in Promise<T>","docs":"","start":46,"length":1,"line":1,"character":20,"targetString":"T"},{"text":"(parameter) onfulfilled: (value: any) => any","docs":"","start":57,"length":11,"line":2,"character":4,"targetString":"onfulfilled"},{"text":"(parameter) value: any","docs":"","start":71,"length":5,"line":2,"character":18,"targetString":"value"},{"text":"(parameter) value: any","docs":"","start":80,"length":5,"line":2,"character":27,"targetString":"value"},{"text":"(parameter) onrejected: (reason: any) => never","docs":"","start":91,"length":10,"line":3,"character":4,"targetString":"onrejected"},{"text":"(parameter) reason: any","docs":"","start":104,"length":6,"line":3,"character":17,"targetString":"reason"},{"text":"(parameter) reason: any","docs":"","start":128,"length":6,"line":4,"character":12,"targetString":"reason"},{"text":"constructor Promise<unknown>(): Promise<unknown>","docs":"","start":188,"length":7,"line":8,"character":15,"targetString":"Promise"},{"text":"(parameter) resolve: any","docs":"","start":197,"length":7,"line":8,"character":24,"targetString":"resolve"},{"text":"(parameter) reject: any","docs":"","start":206,"length":6,"line":8,"character":33,"targetString":"reject"},{"text":"const p: any","docs":"","start":357,"length":1,"line":13,"character":16,"targetString":"p"},{"text":"(parameter) onfulfilled: (value: any) => any","docs":"","start":361,"length":11,"line":13,"character":20,"targetString":"onfulfilled"},{"text":"const p: any","docs":"","start":398,"length":1,"line":14,"character":14,"targetString":"p"},{"text":"class Promise<T>","docs":"","start":411,"length":7,"line":14,"character":27,"targetString":"Promise"},{"text":"const p: Promise<any>","docs":"","start":434,"length":1,"line":15,"character":12,"targetString":"p"},{"text":"(property) Promise<T>.then: any","docs":"","start":436,"length":4,"line":15,"character":14,"targetString":"then"},{"text":"(parameter) resolve: any","docs":"","start":441,"length":7,"line":15,"character":19,"targetString":"resolve"},{"text":"(parameter) reject: any","docs":"","start":450,"length":6,"line":15,"character":28,"targetString":"reject"},{"text":"(parameter) resolve: any","docs":"","start":517,"length":7,"line":18,"character":12,"targetString":"resolve"},{"text":"const p: any","docs":"","start":525,"length":1,"line":18,"character":20,"targetString":"p"},{"text":"(local var) error: unknown","docs":"","start":557,"length":5,"line":20,"character":17,"targetString":"error"},{"text":"(parameter) reject: any","docs":"","start":576,"length":6,"line":21,"character":10,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":583,"length":5,"line":21,"character":17,"targetString":"error"},{"text":"const p: never","docs":"","start":679,"length":1,"line":27,"character":16,"targetString":"p"},{"text":"(parameter) onrejected: (reason: any) => never","docs":"","start":683,"length":10,"line":27,"character":20,"targetString":"onrejected"},{"text":"const p: never","docs":"","start":719,"length":1,"line":28,"character":14,"targetString":"p"},{"text":"class Promise<T>","docs":"","start":732,"length":7,"line":28,"character":27,"targetString":"Promise"},{"text":"const p: never","docs":"","start":755,"length":1,"line":29,"character":12,"targetString":"p"},{"text":"(parameter) resolve: any","docs":"","start":762,"length":7,"line":29,"character":19,"targetString":"resolve"},{"text":"(parameter) reject: any","docs":"","start":771,"length":6,"line":29,"character":28,"targetString":"reject"},{"text":"(parameter) reject: any","docs":"","start":810,"length":6,"line":31,"character":12,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":857,"length":5,"line":33,"character":17,"targetString":"error"},{"text":"(parameter) reject: any","docs":"","start":876,"length":6,"line":34,"character":10,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":883,"length":5,"line":34,"character":17,"targetString":"error"},{"text":"const p: any","docs":"","start":1027,"length":1,"line":41,"character":18,"targetString":"p"},{"text":"(parameter) onfulfilled: (value: any) => any","docs":"","start":1031,"length":11,"line":41,"character":22,"targetString":"onfulfilled"},{"text":"const p: any","docs":"","start":1070,"length":1,"line":42,"character":16,"targetString":"p"},{"text":"class Promise<T>","docs":"","start":1083,"length":7,"line":42,"character":29,"targetString":"Promise"},{"text":"const p: Promise<any>","docs":"","start":1108,"length":1,"line":43,"character":14,"targetString":"p"},{"text":"(property) Promise<T>.then: any","docs":"","start":1110,"length":4,"line":43,"character":16,"targetString":"then"},{"text":"(parameter) resolve: any","docs":"","start":1115,"length":7,"line":43,"character":21,"targetString":"resolve"},{"text":"(parameter) reject: any","docs":"","start":1124,"length":6,"line":43,"character":30,"targetString":"reject"},{"text":"(parameter) resolve: any","docs":"","start":1167,"length":7,"line":45,"character":14,"targetString":"resolve"},{"text":"const p: any","docs":"","start":1175,"length":1,"line":45,"character":22,"targetString":"p"},{"text":"(local var) error: unknown","docs":"","start":1211,"length":5,"line":47,"character":19,"targetString":"error"},{"text":"(parameter) reject: any","docs":"","start":1232,"length":6,"line":48,"character":12,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":1239,"length":5,"line":48,"character":19,"targetString":"error"},{"text":"const p: never","docs":"","start":1349,"length":1,"line":54,"character":18,"targetString":"p"},{"text":"(parameter) onrejected: (reason: any) => never","docs":"","start":1353,"length":10,"line":54,"character":22,"targetString":"onrejected"},{"text":"const p: never","docs":"","start":1391,"length":1,"line":55,"character":16,"targetString":"p"},{"text":"class Promise<T>","docs":"","start":1404,"length":7,"line":55,"character":29,"targetString":"Promise"},{"text":"const p: never","docs":"","start":1429,"length":1,"line":56,"character":14,"targetString":"p"},{"text":"(parameter) resolve: any","docs":"","start":1436,"length":7,"line":56,"character":21,"targetString":"resolve"},{"text":"(parameter) reject: any","docs":"","start":1445,"length":6,"line":56,"character":30,"targetString":"reject"},{"text":"(parameter) reject: any","docs":"","start":1488,"length":6,"line":58,"character":14,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":1539,"length":5,"line":60,"character":19,"targetString":"error"},{"text":"(parameter) reject: any","docs":"","start":1560,"length":6,"line":61,"character":12,"targetString":"reject"},{"text":"(local var) error: unknown","docs":"","start":1567,"length":5,"line":61,"character":19,"targetString":"error"},{"text":"(property) Promise<T>.catch: (onRejected: any) => any","docs":"","start":1656,"length":5,"line":69,"character":9,"targetString":"catch"},{"text":"(parameter) onRejected: any","docs":"","start":1665,"length":10,"line":69,"character":18,"targetString":"onRejected"},{"text":"(type parameter) T in Promise<T>","docs":"","start":1684,"length":1,"line":69,"character":37,"targetString":"T"},{"text":"(property) Promise<T>.then: any","docs":"","start":1709,"length":4,"line":70,"character":16,"targetString":"then"},{"text":"(parameter) onRejected: any","docs":"","start":1720,"length":10,"line":70,"character":27,"targetString":"onRejected"}]],"/blog/Javascript基础/es7/async-await原理":[[{"text":"function generator(): Generator<1 | 2 | 3, void, unknown>","docs":"","start":10,"length":9,"line":0,"character":10,"targetString":"generator"},{"text":"const next1: any","docs":"","start":32,"length":5,"line":1,"character":8,"targetString":"next1"},{"text":"var console: Console","docs":"","start":50,"length":7,"line":2,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":58,"length":3,"line":2,"character":10,"targetString":"log"},{"text":"const next1: any","docs":"","start":62,"length":5,"line":2,"character":14,"targetString":"next1"},{"text":"const next2: any","docs":"","start":78,"length":5,"line":4,"character":8,"targetString":"next2"},{"text":"var console: Console","docs":"","start":96,"length":7,"line":5,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":104,"length":3,"line":5,"character":10,"targetString":"log"},{"text":"const next2: any","docs":"","start":108,"length":5,"line":5,"character":14,"targetString":"next2"},{"text":"const next3: any","docs":"","start":124,"length":5,"line":7,"character":8,"targetString":"next3"},{"text":"var console: Console","docs":"","start":142,"length":7,"line":8,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":150,"length":3,"line":8,"character":10,"targetString":"log"},{"text":"const next3: any","docs":"","start":154,"length":5,"line":8,"character":14,"targetString":"next3"},{"text":"const iterator: Generator<1 | 2 | 3, void, unknown>","docs":"","start":169,"length":8,"line":10,"character":6,"targetString":"iterator"},{"text":"function generator(): Generator<1 | 2 | 3, void, unknown>","docs":"","start":180,"length":9,"line":10,"character":17,"targetString":"generator"},{"text":"var console: Console","docs":"","start":192,"length":7,"line":11,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":200,"length":3,"line":11,"character":8,"targetString":"log"},{"text":"const iterator: Generator<1 | 2 | 3, void, unknown>","docs":"","start":204,"length":8,"line":11,"character":12,"targetString":"iterator"},{"text":"(method) Generator<1 | 2 | 3, void, unknown>.next(...args: [] | [unknown]): IteratorResult<1 | 2 | 3, void>","docs":"","start":213,"length":4,"line":11,"character":21,"targetString":"next"},{"text":"var console: Console","docs":"","start":256,"length":7,"line":12,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":264,"length":3,"line":12,"character":8,"targetString":"log"},{"text":"const iterator: Generator<1 | 2 | 3, void, unknown>","docs":"","start":268,"length":8,"line":12,"character":12,"targetString":"iterator"},{"text":"(method) Generator<1 | 2 | 3, void, unknown>.next(...args: [] | [unknown]): IteratorResult<1 | 2 | 3, void>","docs":"","start":277,"length":4,"line":12,"character":21,"targetString":"next"},{"text":"var console: Console","docs":"","start":285,"length":7,"line":13,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":293,"length":3,"line":13,"character":8,"targetString":"log"},{"text":"const iterator: Generator<1 | 2 | 3, void, unknown>","docs":"","start":297,"length":8,"line":13,"character":12,"targetString":"iterator"},{"text":"(method) Generator<1 | 2 | 3, void, unknown>.next(...args: [] | [unknown]): IteratorResult<1 | 2 | 3, void>","docs":"","start":306,"length":4,"line":13,"character":21,"targetString":"next"},{"text":"var console: Console","docs":"","start":314,"length":7,"line":14,"character":0,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":322,"length":3,"line":14,"character":8,"targetString":"log"},{"text":"const iterator: Generator<1 | 2 | 3, void, unknown>","docs":"","start":326,"length":8,"line":14,"character":12,"targetString":"iterator"},{"text":"(method) Generator<1 | 2 | 3, void, unknown>.next(...args: [] | [unknown]): IteratorResult<1 | 2 | 3, void>","docs":"","start":335,"length":4,"line":14,"character":21,"targetString":"next"}],[{"text":"function async(generator: any): (onfulfilled: any) => void","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"async"},{"text":"(parameter) generator: any","docs":"","start":15,"length":9,"line":0,"character":15,"targetString":"generator"},{"text":"const iterator: any","docs":"","start":52,"length":8,"line":2,"character":8,"targetString":"iterator"},{"text":"(parameter) generator: any","docs":"","start":63,"length":9,"line":2,"character":19,"targetString":"generator"},{"text":"(local function) next(onfulfilled: any): void","docs":"","start":94,"length":4,"line":4,"character":18,"targetString":"next"},{"text":"(parameter) onfulfilled: any","docs":"","start":99,"length":11,"line":4,"character":23,"targetString":"onfulfilled"},{"text":"const result: any","docs":"","start":136,"length":6,"line":6,"character":10,"targetString":"result"},{"text":"const iterator: any","docs":"","start":145,"length":8,"line":6,"character":19,"targetString":"iterator"},{"text":"(parameter) onfulfilled: any","docs":"","start":159,"length":11,"line":6,"character":33,"targetString":"onfulfilled"},{"text":"const result: any","docs":"","start":201,"length":6,"line":8,"character":8,"targetString":"result"},{"text":"const result: any","docs":"","start":297,"length":6,"line":11,"character":4,"targetString":"result"},{"text":"const result: any","docs":"","start":323,"length":6,"line":12,"character":8,"targetString":"result"},{"text":"(parameter) onfulfilled: any","docs":"","start":341,"length":11,"line":12,"character":26,"targetString":"onfulfilled"},{"text":"(local function) next(onfulfilled: any): void","docs":"","start":356,"length":4,"line":12,"character":41,"targetString":"next"},{"text":"(parameter) onfulfilled: any","docs":"","start":361,"length":11,"line":12,"character":46,"targetString":"onfulfilled"},{"text":"var Promise: PromiseConstructor","docs":"Represents the completion of an asynchronous operation","start":383,"length":7,"line":13,"character":8,"targetString":"Promise"},{"text":"(method) PromiseConstructor.resolve<any>(value: any): Promise<any> (+1 overload)","docs":"Creates a new resolved promise for the provided value.","start":391,"length":7,"line":13,"character":16,"targetString":"resolve"},{"text":"const result: any","docs":"","start":399,"length":6,"line":13,"character":24,"targetString":"result"},{"text":"(method) Promise<any>.then<void, never>(onfulfilled?: ((value: any) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":413,"length":4,"line":13,"character":38,"targetString":"then"},{"text":"(parameter) onfulfilled: any","docs":"","start":418,"length":11,"line":13,"character":43,"targetString":"onfulfilled"},{"text":"(local function) next(onfulfilled: any): void","docs":"","start":433,"length":4,"line":13,"character":58,"targetString":"next"},{"text":"(parameter) onfulfilled: any","docs":"","start":438,"length":11,"line":13,"character":63,"targetString":"onfulfilled"},{"text":"const delay: (time: any, value: any) => Promise<unknown>","docs":"","start":465,"length":5,"line":17,"character":6,"targetString":"delay"},{"text":"(parameter) time: any","docs":"","start":474,"length":4,"line":17,"character":15,"targetString":"time"},{"text":"(parameter) value: any","docs":"","start":480,"length":5,"line":17,"character":21,"targetString":"value"},{"text":"var Promise: PromiseConstructor\nnew <unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise<unknown>","docs":"Creates a new Promise.","start":496,"length":7,"line":18,"character":6,"targetString":"Promise"},{"text":"(parameter) res: (value: unknown) => void","docs":"","start":504,"length":3,"line":18,"character":14,"targetString":"res"},{"text":"function setTimeout(handler: TimerHandler, timeout?: number | undefined, ...arguments: any[]): number","docs":"","start":511,"length":10,"line":18,"character":21,"targetString":"setTimeout"},{"text":"(parameter) res: (value: unknown) => void","docs":"","start":528,"length":3,"line":18,"character":38,"targetString":"res"},{"text":"(parameter) value: any","docs":"","start":532,"length":5,"line":18,"character":42,"targetString":"value"},{"text":"(parameter) time: any","docs":"","start":540,"length":4,"line":18,"character":50,"targetString":"time"},{"text":"function async(generator: any): (onfulfilled: any) => void","docs":"","start":548,"length":5,"line":20,"character":0,"targetString":"async"},{"text":"const first: any","docs":"","start":576,"length":5,"line":21,"character":8,"targetString":"first"},{"text":"var console: Console","docs":"","start":594,"length":7,"line":22,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":602,"length":3,"line":22,"character":10,"targetString":"log"},{"text":"const first: any","docs":"","start":606,"length":5,"line":22,"character":14,"targetString":"first"},{"text":"const second: any","docs":"","start":622,"length":6,"line":24,"character":8,"targetString":"second"},{"text":"const delay: (time: any, value: any) => Promise<unknown>","docs":"","start":637,"length":5,"line":24,"character":23,"targetString":"delay"},{"text":"var console: Console","docs":"","start":662,"length":7,"line":25,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":670,"length":3,"line":25,"character":10,"targetString":"log"},{"text":"const second: any","docs":"","start":674,"length":6,"line":25,"character":14,"targetString":"second"},{"text":"const third: any","docs":"","start":691,"length":5,"line":27,"character":8,"targetString":"third"},{"text":"var console: Console","docs":"","start":709,"length":7,"line":28,"character":2,"targetString":"console"},{"text":"(method) Console.log(...data: any[]): void","docs":"","start":717,"length":3,"line":28,"character":10,"targetString":"log"},{"text":"const third: any","docs":"","start":721,"length":5,"line":28,"character":14,"targetString":"third"}]],"/blog/React原理/reconciler实现/createElement":[[{"text":"(method) Array<string>.map<any>(callbackfn: (value: string, index: number, array: string[]) => any, thisArg?: any): any[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":19,"length":3,"line":1,"character":14,"targetString":"map"},{"text":"(parameter) ch: string","docs":"","start":23,"length":2,"line":1,"character":18,"targetString":"ch"},{"text":"(JSX attribute) key: string","docs":"","start":39,"length":3,"line":2,"character":8,"targetString":"key"},{"text":"(parameter) ch: string","docs":"","start":44,"length":2,"line":2,"character":13,"targetString":"ch"},{"text":"(parameter) ch: string","docs":"","start":49,"length":2,"line":2,"character":18,"targetString":"ch"}]],"/blog/VSCode插件开发/Iceworks篇/iceworks-app实现原理简介":[[]],"/blog/VSCode插件开发/Iceworks篇/iceworks-i18n多语言原理":[[{"text":"import template","docs":"","start":12,"length":8,"line":0,"character":12,"targetString":"template"},{"text":"interface ITextMap","docs":"","start":62,"length":8,"line":2,"character":17,"targetString":"ITextMap"},{"text":"(parameter) key: string","docs":"","start":168,"length":3,"line":5,"character":3,"targetString":"key"},{"text":"class I18n","docs":"","start":213,"length":4,"line":8,"character":21,"targetString":"I18n"},{"text":"(property) I18n.localesTextMap: {\n    [locale: string]: ITextMap;\n}","docs":"","start":233,"length":14,"line":10,"character":2,"targetString":"localesTextMap"},{"text":"(parameter) locale: string","docs":"","start":252,"length":6,"line":10,"character":21,"targetString":"locale"},{"text":"interface ITextMap","docs":"","start":269,"length":8,"line":10,"character":38,"targetString":"ITextMap"},{"text":"(property) I18n.currentTextMap: ITextMap","docs":"","start":299,"length":14,"line":13,"character":2,"targetString":"currentTextMap"},{"text":"interface ITextMap","docs":"","start":315,"length":8,"line":13,"character":18,"targetString":"ITextMap"},{"text":"(method) I18n.registry(locale: string, text: ITextMap): void","docs":"","start":360,"length":8,"line":17,"character":2,"targetString":"registry"},{"text":"(parameter) locale: string","docs":"","start":369,"length":6,"line":17,"character":11,"targetString":"locale"},{"text":"(parameter) text: ITextMap","docs":"","start":385,"length":4,"line":17,"character":27,"targetString":"text"},{"text":"interface ITextMap","docs":"","start":391,"length":8,"line":17,"character":33,"targetString":"ITextMap"},{"text":"(property) I18n.localesTextMap: {\n    [locale: string]: ITextMap;\n}","docs":"","start":412,"length":14,"line":18,"character":9,"targetString":"localesTextMap"},{"text":"(parameter) locale: string","docs":"","start":427,"length":6,"line":18,"character":24,"targetString":"locale"},{"text":"(parameter) text: ITextMap","docs":"","start":437,"length":4,"line":18,"character":34,"targetString":"text"},{"text":"(method) I18n.setLocal(locale: string): void","docs":"","start":463,"length":8,"line":22,"character":2,"targetString":"setLocal"},{"text":"(parameter) locale: string","docs":"","start":472,"length":6,"line":22,"character":11,"targetString":"locale"},{"text":"(property) I18n.currentTextMap: ITextMap","docs":"","start":499,"length":14,"line":23,"character":9,"targetString":"currentTextMap"},{"text":"(property) I18n.localesTextMap: {\n    [locale: string]: ITextMap;\n}","docs":"","start":527,"length":14,"line":24,"character":11,"targetString":"localesTextMap"},{"text":"(parameter) locale: string","docs":"","start":542,"length":6,"line":24,"character":26,"targetString":"locale"},{"text":"(property) I18n.localesTextMap: {\n    [locale: string]: ITextMap;\n}","docs":"","start":564,"length":14,"line":25,"character":11,"targetString":"localesTextMap"},{"text":"var Object: ObjectConstructor","docs":"Provides functionality common to all JavaScript objects.","start":579,"length":6,"line":25,"character":26,"targetString":"Object"},{"text":"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)","docs":"Returns the names of the enumerable string properties and methods of an object.","start":586,"length":4,"line":25,"character":33,"targetString":"keys"},{"text":"(property) I18n.localesTextMap: {\n    [locale: string]: ITextMap;\n}","docs":"","start":596,"length":14,"line":25,"character":43,"targetString":"localesTextMap"},{"text":"(method) I18n.format(contentKey: string, args?: Record<string, unknown> | undefined): any","docs":"","start":638,"length":6,"line":29,"character":2,"targetString":"format"},{"text":"(parameter) contentKey: string","docs":"","start":645,"length":10,"line":29,"character":9,"targetString":"contentKey"},{"text":"(parameter) args: Record<string, unknown> | undefined","docs":"","start":665,"length":4,"line":29,"character":29,"targetString":"args"},{"text":"type Record<K extends string | number | symbol, T> = { [P in K]: T; }","docs":"Construct a type with a set of properties K of type T","start":672,"length":6,"line":29,"character":36,"targetString":"Record"},{"text":"const i18nformatString: string","docs":"","start":709,"length":16,"line":30,"character":10,"targetString":"i18nformatString"},{"text":"(property) I18n.currentTextMap: ITextMap","docs":"","start":733,"length":14,"line":30,"character":34,"targetString":"currentTextMap"},{"text":"(parameter) contentKey: string","docs":"","start":748,"length":10,"line":30,"character":49,"targetString":"contentKey"},{"text":"const i18nformatString: string","docs":"","start":769,"length":16,"line":31,"character":9,"targetString":"i18nformatString"},{"text":"(parameter) args: Record<string, unknown> | undefined","docs":"","start":823,"length":4,"line":35,"character":11,"targetString":"args"},{"text":"import template","docs":"","start":830,"length":8,"line":35,"character":18,"targetString":"template"},{"text":"const i18nformatString: string","docs":"","start":839,"length":16,"line":35,"character":27,"targetString":"i18nformatString"},{"text":"(parameter) args: Record<string, unknown>","docs":"","start":857,"length":4,"line":35,"character":45,"targetString":"args"},{"text":"const i18nformatString: string","docs":"","start":865,"length":16,"line":35,"character":53,"targetString":"i18nformatString"}],[{"text":"import zhCNTextMap","docs":"","start":12,"length":11,"line":0,"character":12,"targetString":"zhCNTextMap"},{"text":"import enUSTextMap","docs":"","start":64,"length":11,"line":1,"character":12,"targetString":"enUSTextMap"},{"text":"const i18n: any","docs":"","start":111,"length":4,"line":3,"character":6,"targetString":"i18n"},{"text":"const i18n: any","docs":"","start":145,"length":4,"line":5,"character":0,"targetString":"i18n"},{"text":"import zhCNTextMap","docs":"","start":168,"length":11,"line":5,"character":23,"targetString":"zhCNTextMap"},{"text":"const i18n: any","docs":"","start":181,"length":4,"line":6,"character":0,"targetString":"i18n"},{"text":"import enUSTextMap","docs":"","start":201,"length":11,"line":6,"character":20,"targetString":"enUSTextMap"},{"text":"const i18n: any","docs":"","start":227,"length":4,"line":9,"character":0,"targetString":"i18n"}]],"/blog/VSCode插件开发/Iceworks篇/iceworks-project-creator实现原理简介":[[{"text":"import vscode","docs":"","start":12,"length":6,"line":0,"character":12,"targetString":"vscode"},{"text":"function activate(context: any): void","docs":"","start":50,"length":8,"line":2,"character":16,"targetString":"activate"},{"text":"(parameter) context: any","docs":"","start":59,"length":7,"line":2,"character":25,"targetString":"context"},{"text":"import vscode","docs":"","start":68,"length":6,"line":2,"character":34,"targetString":"vscode"},{"text":"const extensionPath: any","docs":"","start":105,"length":13,"line":3,"character":10,"targetString":"extensionPath"},{"text":"const subscriptions: any","docs":"","start":120,"length":13,"line":3,"character":25,"targetString":"subscriptions"},{"text":"const globalState: any","docs":"","start":135,"length":11,"line":3,"character":40,"targetString":"globalState"},{"text":"(parameter) context: any","docs":"","start":151,"length":7,"line":3,"character":56,"targetString":"context"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":165,"length":26,"line":4,"character":6,"targetString":"projectCreatorwebviewPanel"},{"text":"import vscode","docs":"","start":193,"length":6,"line":4,"character":34,"targetString":"vscode"},{"text":"(local function) activeProjectCreatorWebview(): void","docs":"","start":278,"length":27,"line":7,"character":11,"targetString":"activeProjectCreatorWebview"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":318,"length":26,"line":8,"character":8,"targetString":"projectCreatorwebviewPanel"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":354,"length":26,"line":9,"character":6,"targetString":"projectCreatorwebviewPanel"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":409,"length":26,"line":11,"character":6,"targetString":"projectCreatorwebviewPanel"},{"text":"var window: Window & typeof globalThis","docs":"","start":438,"length":6,"line":11,"character":35,"targetString":"window"},{"text":"(property) enableScripts: boolean","docs":"","start":750,"length":13,"line":18,"character":10,"targetString":"enableScripts"},{"text":"(property) retainContextWhenHidden: boolean","docs":"","start":817,"length":23,"line":19,"character":10,"targetString":"retainContextWhenHidden"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":973,"length":26,"line":23,"character":6,"targetString":"projectCreatorwebviewPanel"},{"text":"const extensionPath: any","docs":"","start":1042,"length":13,"line":24,"character":8,"targetString":"extensionPath"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":1137,"length":26,"line":29,"character":6,"targetString":"projectCreatorwebviewPanel"},{"text":"import vscode","docs":"","start":1175,"length":6,"line":29,"character":44,"targetString":"vscode"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":1250,"length":26,"line":31,"character":6,"targetString":"projectCreatorwebviewPanel"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":1317,"length":26,"line":33,"character":10,"targetString":"projectCreatorwebviewPanel"},{"text":"var undefined","docs":"","start":1346,"length":9,"line":33,"character":39,"targetString":"undefined"},{"text":"(parameter) context: any","docs":"","start":1389,"length":7,"line":36,"character":8,"targetString":"context"},{"text":"let projectCreatorwebviewPanel: any","docs":"","start":1469,"length":26,"line":39,"character":21,"targetString":"projectCreatorwebviewPanel"},{"text":"(parameter) context: any","docs":"","start":1497,"length":7,"line":39,"character":49,"targetString":"context"},{"text":"(property) services: any","docs":"","start":1516,"length":8,"line":40,"character":8,"targetString":"services"},{"text":"(property) recorder: any","docs":"","start":1534,"length":8,"line":41,"character":8,"targetString":"recorder"},{"text":"const subscriptions: any","docs":"","start":1585,"length":13,"line":47,"character":2,"targetString":"subscriptions"},{"text":"(local function) activeProjectCreatorWebview(): void","docs":"","start":1688,"length":27,"line":49,"character":6,"targetString":"activeProjectCreatorWebview"}],[{"text":"function connectService(webviewPanel: any, context: any, options: any): void","docs":"","start":24,"length":14,"line":1,"character":16,"targetString":"connectService"},{"text":"(parameter) webviewPanel: any","docs":"","start":42,"length":12,"line":2,"character":2,"targetString":"webviewPanel"},{"text":"(parameter) context: any","docs":"","start":79,"length":7,"line":3,"character":2,"targetString":"context"},{"text":"(parameter) options: any","docs":"","start":115,"length":7,"line":4,"character":2,"targetString":"options"},{"text":"(parameter) message: any","docs":"","start":213,"length":7,"line":8,"character":11,"targetString":"message"},{"text":"var undefined","docs":"","start":300,"length":9,"line":11,"character":4,"targetString":"undefined"}],[{"text":"function getHtmlForWebview(extensionPath: string, entryName?: string | undefined, needVendor?: boolean | undefined, cdnBasePath?: string | undefined, extraHtml?: string | undefined, resourceProcess?: ((url: string) => any) | undefined): string","docs":"","start":16,"length":17,"line":0,"character":16,"targetString":"getHtmlForWebview"},{"text":"(parameter) extensionPath: string","docs":"","start":37,"length":13,"line":1,"character":2,"targetString":"extensionPath"},{"text":"(parameter) entryName: string | undefined","docs":"","start":62,"length":9,"line":2,"character":2,"targetString":"entryName"},{"text":"(parameter) needVendor: boolean | undefined","docs":"","start":84,"length":10,"line":3,"character":2,"targetString":"needVendor"},{"text":"(parameter) cdnBasePath: string | undefined","docs":"","start":108,"length":11,"line":4,"character":2,"targetString":"cdnBasePath"},{"text":"(parameter) extraHtml: string | undefined","docs":"","start":132,"length":9,"line":5,"character":2,"targetString":"extraHtml"},{"text":"(parameter) resourceProcess: ((url: string) => any) | undefined","docs":"","start":154,"length":15,"line":6,"character":2,"targetString":"resourceProcess"},{"text":"(parameter) url: string","docs":"","start":173,"length":3,"line":6,"character":21,"targetString":"url"}],[{"text":"const vscode: any","docs":"","start":50,"length":6,"line":1,"character":13,"targetString":"vscode"},{"text":"const callService: (service: string, method: string, ...args: any[]) => Promise<unknown>","docs":"","start":142,"length":11,"line":4,"character":13,"targetString":"callService"},{"text":"(parameter) service: string","docs":"","start":166,"length":7,"line":4,"character":37,"targetString":"service"},{"text":"(parameter) method: string","docs":"","start":183,"length":6,"line":4,"character":54,"targetString":"method"},{"text":"(parameter) args: any[]","docs":"","start":202,"length":4,"line":4,"character":73,"targetString":"args"},{"text":"var Promise: PromiseConstructor\nnew <unknown>(executor: (resolve: (value: unknown) => void, reject: (reason?: any) => void) => void) => Promise<unknown>","docs":"Creates a new Promise.","start":223,"length":7,"line":5,"character":13,"targetString":"Promise"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":232,"length":7,"line":5,"character":22,"targetString":"resolve"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":241,"length":6,"line":5,"character":31,"targetString":"reject"},{"text":"const eventId: number","docs":"","start":264,"length":7,"line":6,"character":10,"targetString":"eventId"},{"text":"function setTimeout(handler: TimerHandler, timeout?: number | undefined, ...arguments: any[]): number","docs":"","start":274,"length":10,"line":6,"character":20,"targetString":"setTimeout"},{"text":"const handler: (event: any) => void","docs":"","start":305,"length":7,"line":7,"character":10,"targetString":"handler"},{"text":"(parameter) event: any","docs":"","start":315,"length":5,"line":7,"character":20,"targetString":"event"},{"text":"const message: any","docs":"","start":338,"length":7,"line":8,"character":12,"targetString":"message"},{"text":"(parameter) event: any","docs":"","start":348,"length":5,"line":8,"character":22,"targetString":"event"},{"text":"const message: any","docs":"","start":369,"length":7,"line":9,"character":10,"targetString":"message"},{"text":"const eventId: number","docs":"","start":389,"length":7,"line":9,"character":30,"targetString":"eventId"},{"text":"var window: Window & typeof globalThis","docs":"","start":408,"length":6,"line":10,"character":8,"targetString":"window"},{"text":"(method) removeEventListener<\"message\">(type: \"message\", listener: (this: Window, ev: MessageEvent<any>) => any, options?: boolean | EventListenerOptions | undefined): void (+1 overload)","docs":"Removes the event listener in target's event listener list with the same type, callback, and options.","start":415,"length":19,"line":10,"character":15,"targetString":"removeEventListener"},{"text":"const handler: (event: any) => void","docs":"","start":446,"length":7,"line":10,"character":46,"targetString":"handler"},{"text":"const message: any","docs":"","start":463,"length":7,"line":11,"character":8,"targetString":"message"},{"text":"(parameter) reject: (reason?: any) => void","docs":"","start":496,"length":6,"line":12,"character":12,"targetString":"reject"},{"text":"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error","docs":"","start":507,"length":5,"line":12,"character":23,"targetString":"Error"},{"text":"const message: any","docs":"","start":513,"length":7,"line":12,"character":29,"targetString":"message"},{"text":"(parameter) resolve: (value: unknown) => void","docs":"","start":548,"length":7,"line":13,"character":12,"targetString":"resolve"},{"text":"const message: any","docs":"","start":556,"length":7,"line":13,"character":20,"targetString":"message"},{"text":"var window: Window & typeof globalThis","docs":"","start":611,"length":6,"line":17,"character":4,"targetString":"window"},{"text":"(method) addEventListener<\"message\">(type: \"message\", listener: (this: Window, ev: MessageEvent<any>) => any, options?: boolean | AddEventListenerOptions | undefined): void (+1 overload)","docs":"Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.","start":618,"length":16,"line":17,"character":11,"targetString":"addEventListener"},{"text":"const handler: (event: any) => void","docs":"","start":646,"length":7,"line":17,"character":39,"targetString":"handler"},{"text":"const vscode: any","docs":"","start":678,"length":6,"line":19,"character":4,"targetString":"vscode"},{"text":"(property) service: string","docs":"","start":705,"length":7,"line":20,"character":6,"targetString":"service"},{"text":"(property) method: string","docs":"","start":720,"length":6,"line":21,"character":6,"targetString":"method"},{"text":"(property) eventId: number","docs":"","start":734,"length":7,"line":22,"character":6,"targetString":"eventId"},{"text":"(property) args: any[]","docs":"","start":749,"length":4,"line":23,"character":6,"targetString":"args"}],[{"text":"import vscode","docs":"","start":12,"length":6,"line":0,"character":12,"targetString":"vscode"},{"text":"function activate(context: any): void","docs":"","start":50,"length":8,"line":2,"character":16,"targetString":"activate"},{"text":"(parameter) context: any","docs":"","start":59,"length":7,"line":2,"character":25,"targetString":"context"},{"text":"import vscode","docs":"","start":68,"length":6,"line":2,"character":34,"targetString":"vscode"},{"text":"let webviewPanel: any","docs":"","start":101,"length":12,"line":3,"character":6,"targetString":"webviewPanel"},{"text":"import vscode","docs":"","start":115,"length":6,"line":3,"character":20,"targetString":"vscode"},{"text":"(local function) activeProjectCreatorWebview(): void","docs":"","start":159,"length":27,"line":5,"character":11,"targetString":"activeProjectCreatorWebview"},{"text":"let webviewPanel: any","docs":"","start":199,"length":12,"line":6,"character":8,"targetString":"webviewPanel"},{"text":"let webviewPanel: any","docs":"","start":221,"length":12,"line":7,"character":6,"targetString":"webviewPanel"},{"text":"let webviewPanel: any","docs":"","start":262,"length":12,"line":9,"character":6,"targetString":"webviewPanel"},{"text":"import vscode","docs":"","start":277,"length":6,"line":9,"character":21,"targetString":"vscode"},{"text":"import vscode","docs":"","start":356,"length":6,"line":12,"character":8,"targetString":"vscode"},{"text":"(property) enableScripts: boolean","docs":"","start":399,"length":13,"line":14,"character":10,"targetString":"enableScripts"},{"text":"(property) retainContextWhenHidden: boolean","docs":"","start":430,"length":23,"line":15,"character":10,"targetString":"retainContextWhenHidden"},{"text":"let webviewPanel: any","docs":"","start":486,"length":12,"line":19,"character":6,"targetString":"webviewPanel"},{"text":"let webviewPanel: any","docs":"","start":1059,"length":12,"line":39,"character":6,"targetString":"webviewPanel"},{"text":"(parameter) message: any","docs":"","start":1109,"length":7,"line":40,"character":8,"targetString":"message"},{"text":"import vscode","docs":"","start":1169,"length":6,"line":42,"character":10,"targetString":"vscode"},{"text":"(parameter) message: any","docs":"","start":1206,"length":7,"line":42,"character":47,"targetString":"message"},{"text":"let webviewPanel: any","docs":"","start":1268,"length":12,"line":44,"character":10,"targetString":"webviewPanel"},{"text":"(property) text: string","docs":"","start":1315,"length":4,"line":45,"character":12,"targetString":"text"},{"text":"(parameter) message: any","docs":"","start":1337,"length":7,"line":45,"character":34,"targetString":"message"},{"text":"(parameter) context: any","docs":"","start":1402,"length":7,"line":49,"character":8,"targetString":"context"},{"text":"let webviewPanel: any","docs":"","start":1439,"length":12,"line":52,"character":6,"targetString":"webviewPanel"},{"text":"import vscode","docs":"","start":1463,"length":6,"line":52,"character":30,"targetString":"vscode"},{"text":"let webviewPanel: any","docs":"","start":1559,"length":12,"line":56,"character":6,"targetString":"webviewPanel"},{"text":"let webviewPanel: any","docs":"","start":1612,"length":12,"line":58,"character":10,"targetString":"webviewPanel"},{"text":"var undefined","docs":"","start":1627,"length":9,"line":58,"character":25,"targetString":"undefined"},{"text":"(parameter) context: any","docs":"","start":1670,"length":7,"line":61,"character":8,"targetString":"context"},{"text":"(parameter) context: any","docs":"","start":1713,"length":7,"line":66,"character":2,"targetString":"context"},{"text":"import vscode","docs":"","start":1745,"length":6,"line":67,"character":4,"targetString":"vscode"},{"text":"(local function) activeProjectCreatorWebview(): void","docs":"","start":1822,"length":27,"line":68,"character":6,"targetString":"activeProjectCreatorWebview"},{"text":"function deactivate(): void","docs":"","start":1882,"length":10,"line":73,"character":16,"targetString":"deactivate"}]],"/blog/前端构建工具/webpack/webpack缓存原理":[[{"text":"(property) cache: boolean","docs":"","start":21,"length":5,"line":1,"character":2,"targetString":"cache"}],[{"text":"(property) cache: {\n    type: string;\n}","docs":"","start":21,"length":5,"line":1,"character":2,"targetString":"cache"},{"text":"(property) type: string","docs":"","start":34,"length":4,"line":2,"character":4,"targetString":"type"}],[{"text":"const webpack: (options: any) => any","docs":"","start":29,"length":7,"line":1,"character":6,"targetString":"webpack"},{"text":"(parameter) options: any","docs":"","start":39,"length":7,"line":1,"character":16,"targetString":"options"},{"text":"let compiler: any","docs":"","start":58,"length":8,"line":2,"character":6,"targetString":"compiler"},{"text":"const createCompiler: (rawOptions: any) => any","docs":"","start":69,"length":14,"line":2,"character":17,"targetString":"createCompiler"},{"text":"(parameter) options: any","docs":"","start":84,"length":7,"line":2,"character":32,"targetString":"options"},{"text":"let compiler: any","docs":"","start":102,"length":8,"line":3,"character":9,"targetString":"compiler"},{"text":"const createCompiler: (rawOptions: any) => any","docs":"","start":120,"length":14,"line":6,"character":6,"targetString":"createCompiler"},{"text":"(parameter) rawOptions: any","docs":"","start":137,"length":10,"line":6,"character":23,"targetString":"rawOptions"},{"text":"const options: any","docs":"","start":161,"length":7,"line":7,"character":8,"targetString":"options"},{"text":"(parameter) rawOptions: any","docs":"","start":199,"length":10,"line":7,"character":46,"targetString":"rawOptions"},{"text":"const options: any","docs":"","start":270,"length":7,"line":9,"character":34,"targetString":"options"},{"text":"const compiler: any","docs":"","start":305,"length":8,"line":11,"character":8,"targetString":"compiler"},{"text":"const options: any","docs":"","start":329,"length":7,"line":11,"character":32,"targetString":"options"},{"text":"const compiler: any","docs":"","start":348,"length":8,"line":12,"character":2,"targetString":"compiler"},{"text":"const options: any","docs":"","start":367,"length":7,"line":12,"character":21,"targetString":"options"},{"text":"(property) infrastructureLogging: any","docs":"","start":461,"length":21,"line":16,"character":4,"targetString":"infrastructureLogging"},{"text":"const options: any","docs":"","start":484,"length":7,"line":16,"character":27,"targetString":"options"},{"text":"const compiler: any","docs":"","start":526,"length":8,"line":17,"character":11,"targetString":"compiler"},{"text":"var Array: ArrayConstructor","docs":"","start":566,"length":5,"line":19,"character":6,"targetString":"Array"},{"text":"(method) ArrayConstructor.isArray(arg: any): arg is any[]","docs":"","start":572,"length":7,"line":19,"character":12,"targetString":"isArray"},{"text":"const options: any","docs":"","start":580,"length":7,"line":19,"character":20,"targetString":"options"},{"text":"const plugin: any","docs":"","start":615,"length":6,"line":20,"character":15,"targetString":"plugin"},{"text":"const options: any","docs":"","start":625,"length":7,"line":20,"character":25,"targetString":"options"},{"text":"const plugin: any","docs":"","start":661,"length":6,"line":21,"character":17,"targetString":"plugin"},{"text":"const plugin: any","docs":"","start":694,"length":6,"line":22,"character":8,"targetString":"plugin"},{"text":"const compiler: any","docs":"","start":706,"length":8,"line":22,"character":20,"targetString":"compiler"},{"text":"const compiler: any","docs":"","start":716,"length":8,"line":22,"character":30,"targetString":"compiler"},{"text":"const plugin: any","docs":"","start":749,"length":6,"line":24,"character":8,"targetString":"plugin"},{"text":"const compiler: any","docs":"","start":762,"length":8,"line":24,"character":21,"targetString":"compiler"},{"text":"const options: any","docs":"","start":842,"length":7,"line":30,"character":30,"targetString":"options"},{"text":"const compiler: any","docs":"","start":880,"length":8,"line":32,"character":2,"targetString":"compiler"},{"text":"const compiler: any","docs":"","start":948,"length":8,"line":34,"character":2,"targetString":"compiler"},{"text":"const options: any","docs":"","start":1054,"length":7,"line":36,"character":36,"targetString":"options"},{"text":"const compiler: any","docs":"","start":1063,"length":8,"line":36,"character":45,"targetString":"compiler"},{"text":"const compiler: any","docs":"","start":1075,"length":8,"line":37,"character":2,"targetString":"compiler"},{"text":"const compiler: any","docs":"","start":1117,"length":8,"line":38,"character":9,"targetString":"compiler"}],[{"text":"class WebpackOptionsApply","docs":"","start":42,"length":19,"line":2,"character":6,"targetString":"WebpackOptionsApply"},{"text":"(method) WebpackOptionsApply.process(options: any, compiler: any): void","docs":"","start":121,"length":7,"line":6,"character":2,"targetString":"process"},{"text":"(parameter) options: any","docs":"","start":129,"length":7,"line":6,"character":10,"targetString":"options"},{"text":"(parameter) compiler: any","docs":"","start":138,"length":8,"line":6,"character":19,"targetString":"compiler"},{"text":"(parameter) options: any","docs":"","start":399,"length":7,"line":14,"character":8,"targetString":"options"},{"text":"(parameter) options: any","docs":"","start":423,"length":7,"line":14,"character":32,"targetString":"options"},{"text":"const cacheOptions: any","docs":"","start":465,"length":12,"line":15,"character":12,"targetString":"cacheOptions"},{"text":"(parameter) options: any","docs":"","start":480,"length":7,"line":15,"character":27,"targetString":"options"},{"text":"const cacheOptions: any","docs":"","start":538,"length":12,"line":17,"character":14,"targetString":"cacheOptions"},{"text":"function isFinite(number: number): boolean","docs":"Determines whether a supplied number is finite.","start":727,"length":8,"line":23,"character":14,"targetString":"isFinite"},{"text":"const cacheOptions: any","docs":"","start":736,"length":12,"line":23,"character":23,"targetString":"cacheOptions"},{"text":"(property) maxGenerations: any","docs":"","start":850,"length":14,"line":26,"character":14,"targetString":"maxGenerations"},{"text":"const cacheOptions: any","docs":"","start":866,"length":12,"line":26,"character":30,"targetString":"cacheOptions"},{"text":"(parameter) compiler: any","docs":"","start":916,"length":8,"line":27,"character":21,"targetString":"compiler"},{"text":"(parameter) compiler: any","docs":"","start":987,"length":8,"line":29,"character":42,"targetString":"compiler"},{"text":"const key: string","docs":"","start":1254,"length":3,"line":38,"character":21,"targetString":"key"},{"text":"const cacheOptions: any","docs":"","start":1261,"length":12,"line":38,"character":28,"targetString":"cacheOptions"},{"text":"const list: any","docs":"","start":1313,"length":4,"line":39,"character":18,"targetString":"list"},{"text":"const cacheOptions: any","docs":"","start":1320,"length":12,"line":39,"character":25,"targetString":"cacheOptions"},{"text":"const key: string","docs":"","start":1351,"length":3,"line":39,"character":56,"targetString":"key"},{"text":"const list: any","docs":"","start":1399,"length":4,"line":40,"character":43,"targetString":"list"},{"text":"(parameter) compiler: any","docs":"","start":1411,"length":8,"line":40,"character":55,"targetString":"compiler"},{"text":"function isFinite(number: number): boolean","docs":"Determines whether a supplied number is finite.","start":1575,"length":8,"line":45,"character":15,"targetString":"isFinite"},{"text":"const cacheOptions: any","docs":"","start":1584,"length":12,"line":45,"character":24,"targetString":"cacheOptions"},{"text":"(parameter) compiler: any","docs":"","start":1697,"length":8,"line":47,"character":42,"targetString":"compiler"},{"text":"const cacheOptions: any","docs":"","start":1728,"length":12,"line":48,"character":21,"targetString":"cacheOptions"},{"text":"(property) maxGenerations: any","docs":"","start":1874,"length":14,"line":51,"character":14,"targetString":"maxGenerations"},{"text":"const cacheOptions: any","docs":"","start":1890,"length":12,"line":51,"character":30,"targetString":"cacheOptions"},{"text":"(parameter) compiler: any","docs":"","start":1946,"length":8,"line":52,"character":21,"targetString":"compiler"},{"text":"const cacheOptions: any","docs":"","start":2034,"length":12,"line":57,"character":18,"targetString":"cacheOptions"},{"text":"(property) compiler: any","docs":"","start":2208,"length":8,"line":62,"character":18,"targetString":"compiler"},{"text":"(property) fs: any","docs":"","start":2236,"length":2,"line":63,"character":18,"targetString":"fs"},{"text":"(parameter) compiler: any","docs":"","start":2240,"length":8,"line":63,"character":22,"targetString":"compiler"},{"text":"(property) context: any","docs":"","start":2291,"length":7,"line":64,"character":18,"targetString":"context"},{"text":"(parameter) options: any","docs":"","start":2300,"length":7,"line":64,"character":27,"targetString":"options"},{"text":"(property) cacheLocation: any","docs":"","start":2396,"length":13,"line":66,"character":18,"targetString":"cacheLocation"},{"text":"const cacheOptions: any","docs":"","start":2411,"length":12,"line":66,"character":33,"targetString":"cacheOptions"},{"text":"(property) version: any","docs":"","start":2484,"length":7,"line":68,"character":18,"targetString":"version"},{"text":"const cacheOptions: any","docs":"","start":2493,"length":12,"line":68,"character":27,"targetString":"cacheOptions"},{"text":"(property) logger: any","docs":"","start":2533,"length":6,"line":69,"character":18,"targetString":"logger"},{"text":"(parameter) compiler: any","docs":"","start":2541,"length":8,"line":69,"character":26,"targetString":"compiler"},{"text":"(property) snapshot: any","docs":"","start":2705,"length":8,"line":73,"character":18,"targetString":"snapshot"},{"text":"(parameter) options: any","docs":"","start":2715,"length":7,"line":73,"character":28,"targetString":"options"},{"text":"(property) maxAge: any","docs":"","start":2781,"length":6,"line":75,"character":18,"targetString":"maxAge"},{"text":"const cacheOptions: any","docs":"","start":2789,"length":12,"line":75,"character":26,"targetString":"cacheOptions"},{"text":"(property) profile: any","docs":"","start":2854,"length":7,"line":77,"character":18,"targetString":"profile"},{"text":"const cacheOptions: any","docs":"","start":2863,"length":12,"line":77,"character":27,"targetString":"cacheOptions"},{"text":"(property) allowCollectingMemory: any","docs":"","start":2981,"length":21,"line":79,"character":18,"targetString":"allowCollectingMemory"},{"text":"const cacheOptions: any","docs":"","start":3004,"length":12,"line":79,"character":41,"targetString":"cacheOptions"},{"text":"const cacheOptions: any","docs":"","start":3192,"length":12,"line":83,"character":16,"targetString":"cacheOptions"},{"text":"const cacheOptions: any","docs":"","start":3272,"length":12,"line":85,"character":16,"targetString":"cacheOptions"},{"text":"(parameter) compiler: any","docs":"","start":3334,"length":8,"line":86,"character":22,"targetString":"compiler"},{"text":"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error","docs":"","start":3423,"length":5,"line":90,"character":24,"targetString":"Error"},{"text":"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error","docs":"","start":3539,"length":5,"line":95,"character":20,"targetString":"Error"},{"text":"const cacheOptions: any","docs":"","start":3567,"length":12,"line":95,"character":48,"targetString":"cacheOptions"},{"text":"(parameter) compiler: any","docs":"","start":3673,"length":8,"line":99,"character":36,"targetString":"compiler"}],[{"text":"class MemoryWithGcCachePlugin","docs":"","start":6,"length":23,"line":0,"character":6,"targetString":"MemoryWithGcCachePlugin"},{"text":"var maxGenerations: any","docs":"","start":48,"length":14,"line":1,"character":16,"targetString":"maxGenerations"},{"text":"var maxGenerations: any","docs":"","start":95,"length":14,"line":2,"character":27,"targetString":"maxGenerations"},{"text":"(method) MemoryWithGcCachePlugin.apply(compiler: any): void","docs":"","start":116,"length":5,"line":4,"character":2,"targetString":"apply"},{"text":"(parameter) compiler: any","docs":"","start":122,"length":8,"line":4,"character":8,"targetString":"compiler"},{"text":"const maxGenerations: any","docs":"","start":144,"length":14,"line":5,"character":10,"targetString":"maxGenerations"},{"text":"const cache: Map<any, any>","docs":"","start":207,"length":5,"line":7,"character":10,"targetString":"cache"},{"text":"var Map: MapConstructor\nnew () => Map<any, any> (+2 overloads)","docs":"","start":219,"length":3,"line":7,"character":22,"targetString":"Map"},{"text":"const oldCache: Map<any, any>","docs":"","start":243,"length":8,"line":8,"character":10,"targetString":"oldCache"},{"text":"var Map: MapConstructor\nnew () => Map<any, any> (+2 overloads)","docs":"","start":258,"length":3,"line":8,"character":25,"targetString":"Map"},{"text":"let generation: number","docs":"","start":321,"length":10,"line":10,"character":8,"targetString":"generation"},{"text":"let cachePosition: number","docs":"","start":344,"length":13,"line":11,"character":8,"targetString":"cachePosition"},{"text":"(parameter) compiler: any","docs":"","start":381,"length":8,"line":13,"character":4,"targetString":"compiler"},{"text":"let generation: number","docs":"","start":451,"length":10,"line":14,"character":6,"targetString":"generation"},{"text":"const identifier: any","docs":"","start":505,"length":10,"line":16,"character":18,"targetString":"identifier"},{"text":"const entry: any","docs":"","start":517,"length":5,"line":16,"character":30,"targetString":"entry"},{"text":"const oldCache: Map<any, any>","docs":"","start":527,"length":8,"line":16,"character":40,"targetString":"oldCache"},{"text":"const entry: any","docs":"","start":551,"length":5,"line":17,"character":12,"targetString":"entry"},{"text":"let generation: number","docs":"","start":565,"length":10,"line":17,"character":26,"targetString":"generation"},{"text":"const oldCache: Map<any, any>","docs":"","start":629,"length":8,"line":19,"character":8,"targetString":"oldCache"},{"text":"(method) Map<any, any>.delete(key: any): boolean","docs":"","start":638,"length":6,"line":19,"character":17,"targetString":"delete"},{"text":"const identifier: any","docs":"","start":645,"length":10,"line":19,"character":24,"targetString":"identifier"},{"text":"const cache: Map<any, any>","docs":"","start":669,"length":5,"line":20,"character":12,"targetString":"cache"},{"text":"(method) Map<any, any>.get(key: any): any","docs":"","start":675,"length":3,"line":20,"character":18,"targetString":"get"},{"text":"const identifier: any","docs":"","start":679,"length":10,"line":20,"character":22,"targetString":"identifier"},{"text":"var undefined","docs":"","start":695,"length":9,"line":20,"character":38,"targetString":"undefined"},{"text":"const cache: Map<any, any>","docs":"","start":718,"length":5,"line":21,"character":10,"targetString":"cache"},{"text":"(method) Map<any, any>.delete(key: any): boolean","docs":"","start":724,"length":6,"line":21,"character":16,"targetString":"delete"},{"text":"const identifier: any","docs":"","start":731,"length":10,"line":21,"character":23,"targetString":"identifier"},{"text":"let i: number","docs":"","start":772,"length":1,"line":25,"character":10,"targetString":"i"},{"text":"const cache: Map<any, any>","docs":"","start":777,"length":5,"line":25,"character":15,"targetString":"cache"},{"text":"(property) Map<any, any>.size: number","docs":"","start":783,"length":4,"line":25,"character":21,"targetString":"size"},{"text":"const maxGenerations: any","docs":"","start":790,"length":14,"line":25,"character":28,"targetString":"maxGenerations"},{"text":"let j: number","docs":"","start":835,"length":1,"line":26,"character":10,"targetString":"j"},{"text":"let cachePosition: number","docs":"","start":839,"length":13,"line":26,"character":14,"targetString":"cachePosition"},{"text":"const cache: Map<any, any>","docs":"","start":856,"length":5,"line":26,"character":31,"targetString":"cache"},{"text":"(property) Map<any, any>.size: number","docs":"","start":862,"length":4,"line":26,"character":37,"targetString":"size"},{"text":"let cachePosition: number","docs":"","start":873,"length":13,"line":26,"character":48,"targetString":"cachePosition"},{"text":"let cachePosition: number","docs":"","start":893,"length":13,"line":27,"character":6,"targetString":"cachePosition"},{"text":"let j: number","docs":"","start":909,"length":1,"line":27,"character":22,"targetString":"j"},{"text":"let i: number","docs":"","start":913,"length":1,"line":27,"character":26,"targetString":"i"},{"text":"const identifier: any","docs":"","start":972,"length":10,"line":29,"character":18,"targetString":"identifier"},{"text":"const entry: any","docs":"","start":984,"length":5,"line":29,"character":30,"targetString":"entry"},{"text":"const cache: Map<any, any>","docs":"","start":994,"length":5,"line":29,"character":40,"targetString":"cache"},{"text":"let j: number","docs":"","start":1015,"length":1,"line":30,"character":12,"targetString":"j"},{"text":"let j: number","docs":"","start":1036,"length":1,"line":31,"character":10,"targetString":"j"},{"text":"const entry: any","docs":"","start":1081,"length":5,"line":34,"character":12,"targetString":"entry"},{"text":"var undefined","docs":"","start":1091,"length":9,"line":34,"character":22,"targetString":"undefined"},{"text":"const cache: Map<any, any>","docs":"","start":1114,"length":5,"line":35,"character":10,"targetString":"cache"},{"text":"(method) Map<any, any>.set(key: any, value: any): Map<any, any>","docs":"","start":1120,"length":3,"line":35,"character":16,"targetString":"set"},{"text":"const identifier: any","docs":"","start":1124,"length":10,"line":35,"character":20,"targetString":"identifier"},{"text":"var undefined","docs":"","start":1136,"length":9,"line":35,"character":32,"targetString":"undefined"},{"text":"const oldCache: Map<any, any>","docs":"","start":1157,"length":8,"line":36,"character":10,"targetString":"oldCache"},{"text":"(method) Map<any, any>.delete(key: any): boolean","docs":"","start":1166,"length":6,"line":36,"character":19,"targetString":"delete"},{"text":"const identifier: any","docs":"","start":1173,"length":10,"line":36,"character":26,"targetString":"identifier"},{"text":"const oldCache: Map<any, any>","docs":"","start":1195,"length":8,"line":37,"character":10,"targetString":"oldCache"},{"text":"(method) Map<any, any>.set(key: any, value: any): Map<any, any>","docs":"","start":1204,"length":3,"line":37,"character":19,"targetString":"set"},{"text":"const identifier: any","docs":"","start":1208,"length":10,"line":37,"character":23,"targetString":"identifier"},{"text":"(property) entry: any","docs":"","start":1234,"length":5,"line":38,"character":12,"targetString":"entry"},{"text":"(property) until: any","docs":"","start":1316,"length":5,"line":40,"character":12,"targetString":"until"},{"text":"let generation: number","docs":"","start":1323,"length":10,"line":40,"character":19,"targetString":"generation"},{"text":"const maxGenerations: any","docs":"","start":1336,"length":14,"line":40,"character":32,"targetString":"maxGenerations"},{"text":"let i: number","docs":"","start":1379,"length":1,"line":42,"character":14,"targetString":"i"},{"text":"(parameter) compiler: any","docs":"","start":1440,"length":8,"line":47,"character":4,"targetString":"compiler"},{"text":"(property) name: string","docs":"","start":1480,"length":4,"line":48,"character":8,"targetString":"name"},{"text":"(property) stage: any","docs":"","start":1513,"length":5,"line":48,"character":41,"targetString":"stage"},{"text":"var Cache: {\n    new (): Cache;\n    prototype: Cache;\n}","docs":"Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec.","start":1520,"length":5,"line":48,"character":48,"targetString":"Cache"},{"text":"(parameter) identifier: any","docs":"","start":1549,"length":10,"line":49,"character":7,"targetString":"identifier"},{"text":"(parameter) etag: any","docs":"","start":1561,"length":4,"line":49,"character":19,"targetString":"etag"},{"text":"(parameter) data: any","docs":"","start":1567,"length":4,"line":49,"character":25,"targetString":"data"},{"text":"const cache: Map<any, any>","docs":"","start":1586,"length":5,"line":50,"character":8,"targetString":"cache"},{"text":"(method) Map<any, any>.set(key: any, value: any): Map<any, any>","docs":"","start":1592,"length":3,"line":50,"character":14,"targetString":"set"},{"text":"(parameter) identifier: any","docs":"","start":1596,"length":10,"line":50,"character":18,"targetString":"identifier"},{"text":"(property) etag: any","docs":"","start":1610,"length":4,"line":50,"character":32,"targetString":"etag"},{"text":"(property) data: any","docs":"","start":1616,"length":4,"line":50,"character":38,"targetString":"data"},{"text":"(parameter) compiler: any","docs":"","start":1663,"length":8,"line":54,"character":4,"targetString":"compiler"},{"text":"(property) name: string","docs":"","start":1701,"length":4,"line":55,"character":8,"targetString":"name"},{"text":"(property) stage: any","docs":"","start":1734,"length":5,"line":55,"character":41,"targetString":"stage"},{"text":"var Cache: {\n    new (): Cache;\n    prototype: Cache;\n}","docs":"Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec.","start":1741,"length":5,"line":55,"character":48,"targetString":"Cache"},{"text":"(parameter) identifier: any","docs":"","start":1770,"length":10,"line":56,"character":7,"targetString":"identifier"},{"text":"(parameter) etag: any","docs":"","start":1782,"length":4,"line":56,"character":19,"targetString":"etag"},{"text":"(parameter) gotHandlers: any","docs":"","start":1788,"length":11,"line":56,"character":25,"targetString":"gotHandlers"},{"text":"const cacheEntry: any","docs":"","start":1841,"length":10,"line":58,"character":14,"targetString":"cacheEntry"},{"text":"const cache: Map<any, any>","docs":"","start":1854,"length":5,"line":58,"character":27,"targetString":"cache"},{"text":"(method) Map<any, any>.get(key: any): any","docs":"","start":1860,"length":3,"line":58,"character":33,"targetString":"get"},{"text":"(parameter) identifier: any","docs":"","start":1864,"length":10,"line":58,"character":37,"targetString":"identifier"},{"text":"const cacheEntry: any","docs":"","start":1888,"length":10,"line":59,"character":12,"targetString":"cacheEntry"},{"text":"const cacheEntry: any","docs":"","start":1952,"length":10,"line":61,"character":19,"targetString":"cacheEntry"},{"text":"var undefined","docs":"","start":1967,"length":9,"line":61,"character":34,"targetString":"undefined"},{"text":"const cacheEntry: any","docs":"","start":1997,"length":10,"line":62,"character":17,"targetString":"cacheEntry"},{"text":"(parameter) etag: any","docs":"","start":2017,"length":4,"line":62,"character":37,"targetString":"etag"},{"text":"const cacheEntry: any","docs":"","start":2024,"length":10,"line":62,"character":44,"targetString":"cacheEntry"},{"text":"const oldCacheEntry: any","docs":"","start":2157,"length":13,"line":66,"character":14,"targetString":"oldCacheEntry"},{"text":"const oldCache: Map<any, any>","docs":"","start":2173,"length":8,"line":66,"character":30,"targetString":"oldCache"},{"text":"(method) Map<any, any>.get(key: any): any","docs":"","start":2182,"length":3,"line":66,"character":39,"targetString":"get"},{"text":"(parameter) identifier: any","docs":"","start":2186,"length":10,"line":66,"character":43,"targetString":"identifier"},{"text":"const oldCacheEntry: any","docs":"","start":2210,"length":13,"line":67,"character":12,"targetString":"oldCacheEntry"},{"text":"var undefined","docs":"","start":2228,"length":9,"line":67,"character":30,"targetString":"undefined"},{"text":"const cacheEntry: any","docs":"","start":2257,"length":10,"line":68,"character":16,"targetString":"cacheEntry"},{"text":"const oldCacheEntry: any","docs":"","start":2270,"length":13,"line":68,"character":29,"targetString":"oldCacheEntry"},{"text":"const cacheEntry: any","docs":"","start":2304,"length":10,"line":69,"character":14,"targetString":"cacheEntry"},{"text":"const oldCache: Map<any, any>","docs":"","start":2339,"length":8,"line":70,"character":12,"targetString":"oldCache"},{"text":"(method) Map<any, any>.delete(key: any): boolean","docs":"","start":2348,"length":6,"line":70,"character":21,"targetString":"delete"},{"text":"(parameter) identifier: any","docs":"","start":2355,"length":10,"line":70,"character":28,"targetString":"identifier"},{"text":"const cache: Map<any, any>","docs":"","start":2379,"length":5,"line":71,"character":12,"targetString":"cache"},{"text":"(method) Map<any, any>.set(key: any, value: any): Map<any, any>","docs":"","start":2385,"length":3,"line":71,"character":18,"targetString":"set"},{"text":"(parameter) identifier: any","docs":"","start":2389,"length":10,"line":71,"character":22,"targetString":"identifier"},{"text":"const cacheEntry: any","docs":"","start":2401,"length":10,"line":71,"character":34,"targetString":"cacheEntry"},{"text":"const cacheEntry: any","docs":"","start":2472,"length":10,"line":74,"character":16,"targetString":"cacheEntry"},{"text":"(parameter) etag: any","docs":"","start":2492,"length":4,"line":74,"character":36,"targetString":"etag"},{"text":"const oldCache: Map<any, any>","docs":"","start":2522,"length":8,"line":75,"character":12,"targetString":"oldCache"},{"text":"(method) Map<any, any>.delete(key: any): boolean","docs":"","start":2531,"length":6,"line":75,"character":21,"targetString":"delete"},{"text":"(parameter) identifier: any","docs":"","start":2538,"length":10,"line":75,"character":28,"targetString":"identifier"},{"text":"const cache: Map<any, any>","docs":"","start":2562,"length":5,"line":76,"character":12,"targetString":"cache"},{"text":"(method) Map<any, any>.set(key: any, value: any): Map<any, any>","docs":"","start":2568,"length":3,"line":76,"character":18,"targetString":"set"},{"text":"(parameter) identifier: any","docs":"","start":2572,"length":10,"line":76,"character":22,"targetString":"identifier"},{"text":"const cacheEntry: any","docs":"","start":2584,"length":10,"line":76,"character":34,"targetString":"cacheEntry"},{"text":"const cacheEntry: any","docs":"","start":2615,"length":10,"line":77,"character":19,"targetString":"cacheEntry"},{"text":"(parameter) gotHandlers: any","docs":"","start":2661,"length":11,"line":80,"character":8,"targetString":"gotHandlers"},{"text":"(parameter) result: any","docs":"","start":2679,"length":6,"line":80,"character":26,"targetString":"result"},{"text":"(parameter) callback: any","docs":"","start":2687,"length":8,"line":80,"character":34,"targetString":"callback"},{"text":"(parameter) result: any","docs":"","start":2716,"length":6,"line":81,"character":14,"targetString":"result"},{"text":"var undefined","docs":"","start":2727,"length":9,"line":81,"character":25,"targetString":"undefined"},{"text":"const cache: Map<any, any>","docs":"","start":2792,"length":5,"line":83,"character":12,"targetString":"cache"},{"text":"(method) Map<any, any>.set(key: any, value: any): Map<any, any>","docs":"","start":2798,"length":3,"line":83,"character":18,"targetString":"set"},{"text":"(parameter) identifier: any","docs":"","start":2802,"length":10,"line":83,"character":22,"targetString":"identifier"},{"text":"const cache: Map<any, any>","docs":"","start":2851,"length":5,"line":85,"character":12,"targetString":"cache"},{"text":"(method) Map<any, any>.set(key: any, value: any): Map<any, any>","docs":"","start":2857,"length":3,"line":85,"character":18,"targetString":"set"},{"text":"(parameter) identifier: any","docs":"","start":2861,"length":10,"line":85,"character":22,"targetString":"identifier"},{"text":"(property) etag: any","docs":"","start":2875,"length":4,"line":85,"character":36,"targetString":"etag"},{"text":"(property) data: any","docs":"","start":2881,"length":4,"line":85,"character":42,"targetString":"data"},{"text":"(parameter) result: any","docs":"","start":2887,"length":6,"line":85,"character":48,"targetString":"result"},{"text":"(parameter) callback: any","docs":"","start":2926,"length":8,"line":87,"character":17,"targetString":"callback"},{"text":"(parameter) compiler: any","docs":"","start":2985,"length":8,"line":92,"character":4,"targetString":"compiler"},{"text":"(property) name: string","docs":"","start":3028,"length":4,"line":93,"character":8,"targetString":"name"},{"text":"(property) stage: any","docs":"","start":3061,"length":5,"line":93,"character":41,"targetString":"stage"},{"text":"var Cache: {\n    new (): Cache;\n    prototype: Cache;\n}","docs":"Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec.","start":3068,"length":5,"line":93,"character":48,"targetString":"Cache"},{"text":"const cache: Map<any, any>","docs":"","start":3112,"length":5,"line":95,"character":8,"targetString":"cache"},{"text":"(method) Map<any, any>.clear(): void","docs":"","start":3118,"length":5,"line":95,"character":14,"targetString":"clear"},{"text":"const oldCache: Map<any, any>","docs":"","start":3134,"length":8,"line":96,"character":8,"targetString":"oldCache"},{"text":"(method) Map<any, any>.clear(): void","docs":"","start":3143,"length":5,"line":96,"character":17,"targetString":"clear"}]],"/blog/前端构建工具/webpack/关闭dev-server的log":[[{"text":"import setLogLevel","docs":"","start":9,"length":11,"line":0,"character":9,"targetString":"setLogLevel"},{"text":"import setLogLevel","docs":"","start":66,"length":11,"line":1,"character":0,"targetString":"setLogLevel"}]],"/blog/前端构建工具/webpack/接入jsdelivr":[[{"text":"const cdn: \"//cdn.jsdelivr.net/gh\"","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"cdn"},{"text":"const username: \"saber2pr\"","docs":"","start":42,"length":8,"line":1,"character":6,"targetString":"username"},{"text":"const pages_branch: \"gh-pages\"","docs":"","start":70,"length":12,"line":2,"character":6,"targetString":"pages_branch"},{"text":"const repo: \"react-ts\"","docs":"","start":102,"length":4,"line":3,"character":6,"targetString":"repo"},{"text":"(property) output: {\n    publicPath: string;\n}","docs":"","start":155,"length":6,"line":6,"character":2,"targetString":"output"},{"text":"(property) publicPath: string","docs":"","start":169,"length":10,"line":7,"character":4,"targetString":"publicPath"},{"text":"const cdn: \"//cdn.jsdelivr.net/gh\"","docs":"","start":238,"length":3,"line":9,"character":13,"targetString":"cdn"},{"text":"const username: \"saber2pr\"","docs":"","start":245,"length":8,"line":9,"character":20,"targetString":"username"},{"text":"const repo: \"react-ts\"","docs":"","start":257,"length":4,"line":9,"character":32,"targetString":"repo"},{"text":"const pages_branch: \"gh-pages\"","docs":"","start":265,"length":12,"line":9,"character":40,"targetString":"pages_branch"}]],"/blog/前端构建工具/webpack/热更新watchOptions":[[{"text":"(property) watchOptions: {\n    aggregateTimeout: number;\n    ignored: RegExp;\n}","docs":"","start":21,"length":12,"line":1,"character":2,"targetString":"watchOptions"},{"text":"(property) aggregateTimeout: number","docs":"","start":41,"length":16,"line":2,"character":4,"targetString":"aggregateTimeout"},{"text":"(property) ignored: RegExp","docs":"","start":69,"length":7,"line":3,"character":4,"targetString":"ignored"}]],"/blog/前端构建工具/阿里oss/在nodejs上使用ossApi":[[{"text":"const client: any","docs":"","start":6,"length":6,"line":0,"character":6,"targetString":"client"},{"text":"(property) accessKeyId: string","docs":"","start":27,"length":11,"line":1,"character":2,"targetString":"accessKeyId"},{"text":"(property) accessKeySecret: string","docs":"","start":49,"length":15,"line":2,"character":2,"targetString":"accessKeySecret"},{"text":"(property) bucket: string","docs":"","start":75,"length":6,"line":3,"character":2,"targetString":"bucket"},{"text":"(property) region: string","docs":"","start":100,"length":6,"line":4,"character":2,"targetString":"region"}],[{"text":"const buf: any","docs":"","start":6,"length":3,"line":0,"character":6,"targetString":"buf"},{"text":"const buf: any","docs":"","start":87,"length":3,"line":1,"character":34,"targetString":"buf"}]],"/blog/数据库/mysql/在512MB服务上运行mysql8":[[{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":267,"length":5,"line":10,"character":21,"targetString":"split"},{"text":"(method) Array<string>.map<string>(callbackfn: (value: string, index: number, array: string[]) => string, thisArg?: any): string[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":279,"length":3,"line":10,"character":33,"targetString":"map"},{"text":"(parameter) item: string","docs":"","start":283,"length":4,"line":10,"character":37,"targetString":"item"},{"text":"(parameter) item: string","docs":"","start":296,"length":4,"line":10,"character":50,"targetString":"item"},{"text":"(method) String.split(separator: string | RegExp, limit?: number | undefined): string[] (+1 overload)","docs":"Split a string into substrings using the specified separator and return them as an array.","start":301,"length":5,"line":10,"character":55,"targetString":"split"},{"text":"(method) Array<string>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":314,"length":4,"line":10,"character":68,"targetString":"join"},{"text":"(method) Array<string>.join(separator?: string | undefined): string","docs":"Adds all the elements of an array into a string, separated by the specified separator string.","start":325,"length":4,"line":10,"character":79,"targetString":"join"}]],"/blog/前端构建工具/webpack/plugin/BannerPlugin":[[{"text":"const webpack: any","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"webpack"},{"text":"(property) plugins: any[]","docs":"","start":57,"length":7,"line":3,"character":2,"targetString":"plugins"},{"text":"const webpack: any","docs":"","start":71,"length":7,"line":3,"character":16,"targetString":"webpack"}],[{"text":"const webpack: any","docs":"","start":6,"length":7,"line":0,"character":6,"targetString":"webpack"},{"text":"(property) plugins: any[]","docs":"","start":57,"length":7,"line":3,"character":2,"targetString":"plugins"},{"text":"const webpack: any","docs":"","start":76,"length":7,"line":4,"character":8,"targetString":"webpack"},{"text":"(property) banner: string","docs":"","start":105,"length":6,"line":5,"character":6,"targetString":"banner"},{"text":"(property) raw: boolean","docs":"","start":157,"length":3,"line":6,"character":6,"targetString":"raw"},{"text":"(property) test: RegExp","docs":"","start":174,"length":4,"line":7,"character":6,"targetString":"test"}]]}